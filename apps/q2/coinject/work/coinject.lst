 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 190
    4                      ; Text size: 4488
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  434f00  	.ascii "CO\000"
   83  00003003          	.align 2
   84  00003004          	LC1_LF0:
   85  00003004  55736167	.ascii "Usage: \000"
   85  00003008  653a2000	
   86  0000300c          	.align 2
   87  0000300c          	LC2_LF0:
   88  0000300c  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   88  00003010  6e646c65	
   88  00003014  5f746f5f	
   88  00003018  73686172	
   88  0000301c  65645f6d	
   88  00003020  656d6f72	
   88  00003024  795f7061	
   88  00003028  67653e20	
   88  0000302c  3c68616e	
   88  00003030  646c655f	
   88  00003034  746f5f70	
   88  00003038  6167655f	
   88  0000303c  6d617070	
   88  00003040  65645f73	
   88  00003044  656d6170	
   88  00003048  686f7265	
   88  0000304c  3e0a00  	
   89  0000304f          	.align 2
   90  00003050          	LC3_LF0:
   91  00003050  4572726f	.ascii "Error Opening sulfur_two mailbox.\n\000"
   91  00003054  72204f70	
   91  00003058  656e696e	
   91  0000305c  67207375	
   91  00003060  6c667572	
   91  00003064  5f74776f	
   91  00003068  206d6169	
   91  0000306c  6c626f78	
   91  00003070  2e0a00  	
   92  00003073          	.align 2
   93  00003074          	LC4_LF0:
   94  00003074  434f2049	.ascii "CO Injected!\n\000"
   94  00003078  6e6a6563	
   94  0000307c  74656421	
   94  00003080  0a00    	
   95  00003082          	.align 2
   96  00003084          	LC5_LF0:
   97  00003084  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   97  00003088  73656d61	
   97  0000308c  70686f72	
   97  00003090  6520735f	
   97  00003094  70726f63	
   97  00003098  735f636f	
   97  0000309c  6d706c65	
   97  000030a0  74656420	
   97  000030a4  28256429	
   97  000030a8  20696e20	
   97  000030ac  00      	
   98  000030ad          	.align 2
   99  000030b0          	LC6_LF0:
  100  000030b0  2c206578	.ascii ", exiting...\n\000"
  100  000030b4  6974696e	
  100  000030b8  672e2e2e	
  100  000030bc  0a00    	
  101  000030be          	.text
  102  000010d4          	.align 2
  103  000010d4          	.proc _main
  104  000010d4          	.global _main
  105  000010d4          	_main:
  106                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  107  000010d4  afbefffc	sw	-4(r29),r30; push fp
  108  000010d8  001df020	add	r30,r0,r29; fp = sp
  109  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  110  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  111  000010e4  8fc20000	lw	r2,(r30)
  112  000010e8  8fc30004	lw	r3,4(r30)
  113  000010ec  0c001090	jal	___main
  114  000010f0  54000000	nop; not filled.
  115  000010f4  64410003	snei	r1,r2,#3
  116  000010f8  1020004c	beqz	r1,L14_LF0
  117  000010fc  54000000	nop; not filled.
  118  00001100  23bdfff8	addi	r29,r29,#-8
  119  00001104  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  120  00001108  24a53004	addui	r5,r5,(LC1_LF0)&0xffff
  121  0000110c  afa50000	sw	(r29),r5
  122  00001110  0c0001bc	jal	_Printf
  123  00001114  54000000	nop; not filled.
  124  00001118  8c650000	lw	r5,(r3)
  125  0000111c  afa50000	sw	(r29),r5
  126  00001120  0c0001ac	jal	_Printf
  127  00001124  54000000	nop; not filled.
  128  00001128  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  129  0000112c  24a5300c	addui	r5,r5,(LC2_LF0)&0xffff
  130  00001130  afa50000	sw	(r29),r5
  131  00001134  0c000198	jal	_Printf
  132  00001138  54000000	nop; not filled.
  133  0000113c  0c000298	jal	_Exit
  134  00001140  54000000	nop; not filled.
  135  00001144  23bd0008	addi	r29,r29,#8
  136  00001148          	L14_LF0:
  137  00001148  23bdfff0	addi	r29,r29,#-16
  138  0000114c  8c650004	lw	r5,4(r3)
  139  00001150  afa50000	sw	(r29),r5
  140  00001154  20050000	addi	r5,r0,#0
  141  00001158  afa50004	sw	4(r29),r5
  142  0000115c  2005000a	addi	r5,r0,#10
  143  00001160  afa50008	sw	8(r29),r5
  144  00001164  0c000b1c	jal	_dstrtol
  145  00001168  54000000	nop; not filled.
  146  0000116c  00012020	add	r4,r0,r1
  147  00001170  8c650008	lw	r5,8(r3)
  148  00001174  afa50000	sw	(r29),r5
  149  00001178  20050000	addi	r5,r0,#0
  150  0000117c  afa50004	sw	4(r29),r5
  151  00001180  2005000a	addi	r5,r0,#10
  152  00001184  afa50008	sw	8(r29),r5
  153  00001188  0c000af8	jal	_dstrtol
  154  0000118c  54000000	nop; not filled.
  155  00001190  00011020	add	r2,r0,r1
  156  00001194  afa20000	sw	(r29),r2
  157  00001198  0c0001f4	jal	_mbox_open
  158  0000119c  54000000	nop; not filled.
  159  000011a0  23bd0010	addi	r29,r29,#16
  160  000011a4  64210000	snei	r1,r1,#0
  161  000011a8  14200028	bnez	r1,L15_LF0
  162  000011ac  54000000	nop; not filled.
  163  000011b0  23bdfff8	addi	r29,r29,#-8
  164  000011b4  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  165  000011b8  24a53050	addui	r5,r5,(LC3_LF0)&0xffff
  166  000011bc  afa50000	sw	(r29),r5
  167  000011c0  0c00010c	jal	_Printf
  168  000011c4  54000000	nop; not filled.
  169  000011c8  0c00020c	jal	_Exit
  170  000011cc  54000000	nop; not filled.
  171  000011d0  23bd0008	addi	r29,r29,#8
  172  000011d4          	L15_LF0:
  173  000011d4  23bdfff0	addi	r29,r29,#-16
  174  000011d8  afa20000	sw	(r29),r2
  175  000011dc  20050003	addi	r5,r0,#3
  176  000011e0  afa50004	sw	4(r29),r5
  177  000011e4  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  178  000011e8  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  179  000011ec  afa50008	sw	8(r29),r5
  180  000011f0  0c0001b4	jal	_mbox_send
  181  000011f4  54000000	nop; not filled.
  182  000011f8  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  183  000011fc  24a53074	addui	r5,r5,(LC4_LF0)&0xffff
  184  00001200  afa50000	sw	(r29),r5
  185  00001204  0c0000c8	jal	_Printf
  186  00001208  54000000	nop; not filled.
  187  0000120c  afa20000	sw	(r29),r2
  188  00001210  0c000188	jal	_mbox_close
  189  00001214  54000000	nop; not filled.
  190  00001218  afa40000	sw	(r29),r4
  191  0000121c  0c000104	jal	_sem_signal
  192  00001220  54000000	nop; not filled.
  193  00001224  23bd0010	addi	r29,r29,#16
  194  00001228  64210001	snei	r1,r1,#1
  195  0000122c  10200050	beqz	r1,L16_LF0
  196  00001230  54000000	nop; not filled.
  197  00001234  23bdfff8	addi	r29,r29,#-8
  198  00001238  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  199  0000123c  24a53084	addui	r5,r5,(LC5_LF0)&0xffff
  200  00001240  afa50000	sw	(r29),r5
  201  00001244  afa40004	sw	4(r29),r4
  202  00001248  0c000084	jal	_Printf
  203  0000124c  54000000	nop; not filled.
  204  00001250  8c630000	lw	r3,(r3)
  205  00001254  afa30000	sw	(r29),r3
  206  00001258  0c000074	jal	_Printf
  207  0000125c  54000000	nop; not filled.
  208  00001260  3c050000	lhi	r5,((LC6_LF0)>>16)&0xffff
  209  00001264  24a530b0	addui	r5,r5,(LC6_LF0)&0xffff
  210  00001268  afa50000	sw	(r29),r5
  211  0000126c  0c000060	jal	_Printf
  212  00001270  54000000	nop; not filled.
  213  00001274  0c000160	jal	_Exit
  214  00001278  54000000	nop; not filled.
  215  0000127c  23bd0008	addi	r29,r29,#8
  216  00001280          	L16_LF0:
  217  00001280  0c000ef0	jal	_exit
  218  00001284  54000000	nop
  219  00001288          	.endproc _main
  220                      ;;;
  221                      ;;; Stub functions for DLX traps.
  222                      ;;;
  223                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  224                      ;;;
  225                      ;;; The traps such as Open and Close
  226                      ;;; (note the capital letters) are for use by user programs.  The traps
  227                      ;;; with names such as open and close (lower case) are for use by the OS.
  228                      ;;;
  231  00001288          	.align 2
  233                      ;;; The following are the traps to be used by user-level programs
  234                      ;;;
  236  00001288          	.align 2
  237  00001288          	.proc _Open
  238  00001288          	.global _Open
  239  00001288          	_Open:
  240                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  241                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  242                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  243  00001288  44000213	trap	#0x213
  244  0000128c  4be00000	jr	r31
  245  00001290  54000000	nop
  246  00001294          	.endproc _Open
  248  00001294          	.proc _Close
  249  00001294          	.global _Close
  250  00001294          	_Close:
  251  00001294  44000214	trap	#0x214
  252  00001298  4be00000	jr	r31
  253  0000129c  54000000	nop
  254  000012a0          	.endproc _Close
  256  000012a0          	.proc _Read
  257  000012a0          	.global _Read
  258  000012a0          	_Read:
  259  000012a0  44000210	trap	#0x210
  260  000012a4  4be00000	jr	r31
  261  000012a8  54000000	nop
  262  000012ac          	.endproc _Read
  264  000012ac          	.proc _Write
  265  000012ac          	.global _Write
  266  000012ac          	_Write:
  267  000012ac  44000211	trap	#0x211
  268  000012b0  4be00000	jr	r31
  269  000012b4  54000000	nop
  270  000012b8          	.endproc _Write
  272  000012b8          	.proc _Lseek
  273  000012b8          	.global _Lseek
  274  000012b8          	_Lseek:
  275  000012b8  44000212	trap	#0x212
  276  000012bc  4be00000	jr	r31
  277  000012c0  54000000	nop
  278  000012c4          	.endproc _Lseek
  280  000012c4          	.proc _Putchar
  281  000012c4          	.global _Putchar
  282  000012c4          	_Putchar:
  283  000012c4  44000280	trap	#0x280
  284  000012c8  4be00000	jr	r31
  285  000012cc  54000000	nop
  286  000012d0          	.endproc _Putchar
  288  000012d0          	.proc _Printf
  289  000012d0          	.global _Printf
  290  000012d0          	_Printf:
  291  000012d0  44000201	trap	#0x201
  292  000012d4  4be00000	jr	r31
  293  000012d8  54000000	nop
  294  000012dc          	.endproc _Printf
  296  000012dc          	.proc _getpid
  297  000012dc          	.global _getpid
  298  000012dc          	_getpid:
  299  000012dc  44000431	trap	#0x431
  300  000012e0  4be00000	jr	r31
  301  000012e4  54000000	nop
  302  000012e8          	.endproc _getpid
  304  000012e8          	.proc _process_create
  305  000012e8          	.global _process_create
  306  000012e8          	_process_create:
  307  000012e8  44000432	trap	#0x432
  308  000012ec  4be00000	jr	r31
  309  000012f0  54000000	nop
  310  000012f4          	.endproc _process_create
  312  000012f4          	.proc _shmget
  313  000012f4          	.global _shmget
  314  000012f4          	_shmget:
  315  000012f4  44000440	trap	#0x440
  316  000012f8  4be00000	jr	r31
  317  000012fc  54000000	nop
  318  00001300          	.endproc _shmget
  320  00001300          	.proc _shmat
  321  00001300          	.global _shmat
  322  00001300          	_shmat:
  323  00001300  44000441	trap	#0x441
  324  00001304  4be00000	jr	r31
  325  00001308  54000000	nop
  326  0000130c          	.endproc _shmat
  328  0000130c          	.proc _sem_create
  329  0000130c          	.global _sem_create
  330  0000130c          	_sem_create:
  331  0000130c  44000450	trap	#0x450
  332  00001310  4be00000	jr	r31
  333  00001314  54000000	nop
  334  00001318          	.endproc _sem_create
  336  00001318          	.proc _sem_wait
  337  00001318          	.global _sem_wait
  338  00001318          	_sem_wait:
  339  00001318  44000451	trap	#0x451
  340  0000131c  4be00000	jr	r31
  341  00001320  54000000	nop
  342  00001324          	.endproc _sem_wait
  344  00001324          	.proc _sem_signal
  345  00001324          	.global _sem_signal
  346  00001324          	_sem_signal:
  347  00001324  44000452	trap	#0x452
  348  00001328  4be00000	jr	r31
  349  0000132c  54000000	nop
  350  00001330          	.endproc _sem_signal
  352  00001330          	.proc _lock_create
  353  00001330          	.global _lock_create
  354  00001330          	_lock_create:
  355  00001330  44000453	trap	#0x453
  356  00001334  4be00000	jr	r31
  357  00001338  54000000	nop
  358  0000133c          	.endproc _lock_create
  360  0000133c          	.proc _lock_acquire
  361  0000133c          	.global _lock_acquire
  362  0000133c          	_lock_acquire:
  363  0000133c  44000454	trap	#0x454
  364  00001340  4be00000	jr	r31
  365  00001344  54000000	nop
  366  00001348          	.endproc _lock_acquire
  368  00001348          	.proc _lock_release
  369  00001348          	.global _lock_release
  370  00001348          	_lock_release:
  371  00001348  44000455	trap	#0x455
  372  0000134c  4be00000	jr	r31
  373  00001350  54000000	nop
  374  00001354          	.endproc _lock_release
  376  00001354          	.proc _cond_create
  377  00001354          	.global _cond_create
  378  00001354          	_cond_create:
  379  00001354  44000456	trap	#0x456
  380  00001358  4be00000	jr	r31
  381  0000135c  54000000	nop
  382  00001360          	.endproc _cond_create
  384  00001360          	.proc _cond_wait
  385  00001360          	.global _cond_wait
  386  00001360          	_cond_wait:
  387  00001360  44000457	trap	#0x457
  388  00001364  4be00000	jr	r31
  389  00001368  54000000	nop
  390  0000136c          	.endproc _cond_wait
  392  0000136c          	.proc _cond_signal
  393  0000136c          	.global _cond_signal
  394  0000136c          	_cond_signal:
  395  0000136c  44000458	trap	#0x458
  396  00001370  4be00000	jr	r31
  397  00001374  54000000	nop
  398  00001378          	.endproc _cond_signal
  400  00001378          	.proc _cond_broadcast
  401  00001378          	.global _cond_broadcast
  402  00001378          	_cond_broadcast:
  403  00001378  44000459	trap	#0x459
  404  0000137c  4be00000	jr	r31
  405  00001380  54000000	nop
  406  00001384          	.endproc _cond_broadcast
  408  00001384          	.proc _mbox_create
  409  00001384          	.global _mbox_create
  410  00001384          	_mbox_create:
  411  00001384  44000460	trap	#0x460
  412  00001388  4be00000	jr	r31
  413  0000138c  54000000	nop
  414  00001390          	.endproc _mbox_create
  416  00001390          	.proc _mbox_open
  417  00001390          	.global _mbox_open
  418  00001390          	_mbox_open:
  419  00001390  44000461	trap	#0x461
  420  00001394  4be00000	jr	r31
  421  00001398  54000000	nop
  422  0000139c          	.endproc _mbox_open
  424  0000139c          	.proc _mbox_close
  425  0000139c          	.global _mbox_close
  426  0000139c          	_mbox_close:
  427  0000139c  44000462	trap	#0x462
  428  000013a0  4be00000	jr	r31
  429  000013a4  54000000	nop
  430  000013a8          	.endproc _mbox_close
  432  000013a8          	.proc _mbox_send
  433  000013a8          	.global _mbox_send
  434  000013a8          	_mbox_send:
  435  000013a8  44000463	trap	#0x463
  436  000013ac  4be00000	jr	r31
  437  000013b0  54000000	nop
  438  000013b4          	.endproc _mbox_send
  440  000013b4          	.proc _mbox_recv
  441  000013b4          	.global _mbox_recv
  442  000013b4          	_mbox_recv:
  443  000013b4  44000464	trap	#0x464
  444  000013b8  4be00000	jr	r31
  445  000013bc  54000000	nop
  446  000013c0          	.endproc _mbox_recv
  448  000013c0          	.proc _sleep
  449  000013c0          	.global _sleep
  450  000013c0          	_sleep:
  451  000013c0  44000465	trap	#0x465
  452  000013c4  4be00000	jr	r31
  453  000013c8  54000000	nop
  454  000013cc          	.endproc _sleep
  456  000013cc          	.proc _yield
  457  000013cc          	.global _yield
  458  000013cc          	_yield:
  459  000013cc  44000466	trap	#0x466
  460  000013d0  4be00000	jr	r31
  461  000013d4  54000000	nop
  462  000013d8          	.endproc _yield
  465  000013d8          	.proc _Exit
  466  000013d8          	.global _Exit
  467  000013d8          	_Exit:
  468  000013d8  44000500	trap	#0x500
  469  000013dc  4be00000	jr	r31
  470  000013e0  54000000	nop
  471  000013e4          	.endproc _Exit
  472                      ; Compiled by GCC
  474  000013e4          	.align 2
  475  000013e4          	.proc _isspace
  476  000013e4          	.global _isspace
  477  000013e4          	_isspace:
  478                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  479  000013e4  afbefffc	sw	-4(r29),r30; push fp
  480  000013e8  001df020	add	r30,r0,r29; fp = sp
  481  000013ec  afbffff8	sw	-8(r29),r31; push ret addr
  482  000013f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  483  000013f4  afa20000	sw	0(r29),r2
  484  000013f8  afa30004	sw	4(r29),r3
  485  000013fc  afa40008	sw	8(r29),r4
  486  00001400  83c20003	lb	r2,3(r30)
  487  00001404  20010000	addi	r1,r0,#0
  488  00001408  304300ff	andi	r3,r2,#0x00ff
  489  0000140c  60640020	seqi	r4,r3,#32
  490  00001410  1480002c	bnez	r4,L3_LF2
  491  00001414  54000000	nop; delay slot nop
  492  00001418  304300ff	andi	r3,r2,#0x00ff
  493  0000141c  60640009	seqi	r4,r3,#9
  494  00001420  1480001c	bnez	r4,L3_LF2
  495  00001424  54000000	nop; delay slot nop
  496  00001428  304300ff	andi	r3,r2,#0x00ff
  497  0000142c  6064000a	seqi	r4,r3,#10
  498  00001430  1480000c	bnez	r4,L3_LF2
  499  00001434  54000000	nop; delay slot nop
  500  00001438  08000008	j	L2_LF2
  501  0000143c  54000000	nop; delay slot nop
  502  00001440          	L3_LF2:
  503  00001440  20010001	addi	r1,r0,#1
  504  00001444          	L2_LF2:
  505  00001444  08000004	j	L1_LF2
  506  00001448  54000000	nop; delay slot nop
  507  0000144c          	L1_LF2:
  508  0000144c  8fa20000	lw	r2,0(r29)
  509  00001450  8fa30004	lw	r3,4(r29)
  510  00001454  8fa40008	lw	r4,8(r29)
  511  00001458  8fdffff8	lw	r31,-8(r30)
  512  0000145c  001ee820	add	r29,r0,r30
  513  00001460  8fdefffc	lw	r30,-4(r30)
  514  00001464  4be00000	jr	r31
  515  00001468  54000000	nop
  516  0000146c          	.endproc _isspace
  517  0000146c          	.align 2
  518  0000146c          	.proc _isxdigit
  519  0000146c          	.global _isxdigit
  520  0000146c          	_isxdigit:
  521                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  522  0000146c  afbefffc	sw	-4(r29),r30; push fp
  523  00001470  001df020	add	r30,r0,r29; fp = sp
  524  00001474  afbffff8	sw	-8(r29),r31; push ret addr
  525  00001478  2fbd0018	subui	r29,r29,#24; alloc local storage
  526  0000147c  afa20000	sw	0(r29),r2
  527  00001480  afa30004	sw	4(r29),r3
  528  00001484  afa40008	sw	8(r29),r4
  529  00001488  83c20003	lb	r2,3(r30)
  530  0000148c  20010000	addi	r1,r0,#0
  531  00001490  304300ff	andi	r3,r2,#0x00ff
  532  00001494  6c64002f	sgtui	r4,r3,#47
  533  00001498  1080001c	beqz	r4,L7_LF2
  534  0000149c  54000000	nop; delay slot nop
  535  000014a0  304300ff	andi	r3,r2,#0x00ff
  536  000014a4  70640039	sleui	r4,r3,#57
  537  000014a8  1480005c	bnez	r4,L6_LF2
  538  000014ac  54000000	nop; delay slot nop
  539  000014b0  08000004	j	L7_LF2
  540  000014b4  54000000	nop; delay slot nop
  541  000014b8          	L7_LF2:
  542  000014b8  304300ff	andi	r3,r2,#0x00ff
  543  000014bc  6c640060	sgtui	r4,r3,#96
  544  000014c0  1080001c	beqz	r4,L8_LF2
  545  000014c4  54000000	nop; delay slot nop
  546  000014c8  304300ff	andi	r3,r2,#0x00ff
  547  000014cc  70640066	sleui	r4,r3,#102
  548  000014d0  14800034	bnez	r4,L6_LF2
  549  000014d4  54000000	nop; delay slot nop
  550  000014d8  08000004	j	L8_LF2
  551  000014dc  54000000	nop; delay slot nop
  552  000014e0          	L8_LF2:
  553  000014e0  304300ff	andi	r3,r2,#0x00ff
  554  000014e4  6c640040	sgtui	r4,r3,#64
  555  000014e8  10800020	beqz	r4,L5_LF2
  556  000014ec  54000000	nop; delay slot nop
  557  000014f0  304300ff	andi	r3,r2,#0x00ff
  558  000014f4  70640041	sleui	r4,r3,#65
  559  000014f8  1480000c	bnez	r4,L6_LF2
  560  000014fc  54000000	nop; delay slot nop
  561  00001500  08000008	j	L5_LF2
  562  00001504  54000000	nop; delay slot nop
  563  00001508          	L6_LF2:
  564  00001508  20010001	addi	r1,r0,#1
  565  0000150c          	L5_LF2:
  566  0000150c  08000004	j	L4_LF2
  567  00001510  54000000	nop; delay slot nop
  568  00001514          	L4_LF2:
  569  00001514  8fa20000	lw	r2,0(r29)
  570  00001518  8fa30004	lw	r3,4(r29)
  571  0000151c  8fa40008	lw	r4,8(r29)
  572  00001520  8fdffff8	lw	r31,-8(r30)
  573  00001524  001ee820	add	r29,r0,r30
  574  00001528  8fdefffc	lw	r30,-4(r30)
  575  0000152c  4be00000	jr	r31
  576  00001530  54000000	nop
  577  00001534          	.endproc _isxdigit
  578  00001534          	.align 2
  579  00001534          	.proc _dstrcpy
  580  00001534          	.global _dstrcpy
  581  00001534          	_dstrcpy:
  582                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  583  00001534  afbefffc	sw	-4(r29),r30; push fp
  584  00001538  001df020	add	r30,r0,r29; fp = sp
  585  0000153c  afbffff8	sw	-8(r29),r31; push ret addr
  586  00001540  2fbd0018	subui	r29,r29,#24; alloc local storage
  587  00001544  afa20000	sw	0(r29),r2
  588  00001548  afa30004	sw	4(r29),r3
  589  0000154c  8fc10000	lw	r1,(r30)
  590  00001550  afc1fff4	sw	-12(r30),r1
  591  00001554          	L10_LF2:
  592  00001554  8fc10000	lw	r1,(r30)
  593  00001558  20220001	addi	r2,r1,#1
  594  0000155c  afc20000	sw	(r30),r2
  595  00001560  8fc20004	lw	r2,4(r30)
  596  00001564  20430001	addi	r3,r2,#1
  597  00001568  afc30004	sw	4(r30),r3
  598  0000156c  80420000	lb	r2,(r2)
  599  00001570  a0220000	sb	(r1),r2
  600  00001574  a3c2fff3	sb	-13(r30),r2
  601  00001578          	L12_LF2:
  602  00001578  93c1fff3	lbu	r1,-13(r30)
  603  0000157c  64220000	snei	r2,r1,#0
  604  00001580  1440000c	bnez	r2,L13_LF2
  605  00001584  54000000	nop; delay slot nop
  606  00001588  0800000c	j	L11_LF2
  607  0000158c  54000000	nop; delay slot nop
  608  00001590          	L13_LF2:
  609  00001590  0bffffc0	j	L10_LF2
  610  00001594  54000000	nop; delay slot nop
  611  00001598          	L11_LF2:
  612  00001598  8fc1fff4	lw	r1,-12(r30)
  613  0000159c  08000004	j	L9_LF2
  614  000015a0  54000000	nop; delay slot nop
  615  000015a4          	L9_LF2:
  616  000015a4  8fa20000	lw	r2,0(r29)
  617  000015a8  8fa30004	lw	r3,4(r29)
  618  000015ac  8fdffff8	lw	r31,-8(r30)
  619  000015b0  001ee820	add	r29,r0,r30
  620  000015b4  8fdefffc	lw	r30,-4(r30)
  621  000015b8  4be00000	jr	r31
  622  000015bc  54000000	nop
  623  000015c0          	.endproc _dstrcpy
  624  000015c0          	.align 2
  625  000015c0          	.proc _dstrncpy
  626  000015c0          	.global _dstrncpy
  627  000015c0          	_dstrncpy:
  628                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  629  000015c0  afbefffc	sw	-4(r29),r30; push fp
  630  000015c4  001df020	add	r30,r0,r29; fp = sp
  631  000015c8  afbffff8	sw	-8(r29),r31; push ret addr
  632  000015cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  633  000015d0  afa20000	sw	0(r29),r2
  634  000015d4  afa30004	sw	4(r29),r3
  635  000015d8  8fc10000	lw	r1,(r30)
  636  000015dc  afc1fff4	sw	-12(r30),r1
  637  000015e0          	L15_LF2:
  638  000015e0  8fc10008	lw	r1,8(r30)
  639  000015e4  2022ffff	addi	r2,r1,#-1
  640  000015e8  afc20008	sw	8(r30),r2
  641  000015ec  70210000	slei	r1,r1,#0
  642  000015f0  1020000c	beqz	r1,L18_LF2
  643  000015f4  54000000	nop; delay slot nop
  644  000015f8  08000048	j	L16_LF2
  645  000015fc  54000000	nop; delay slot nop
  646  00001600          	L18_LF2:
  647  00001600  8fc10000	lw	r1,(r30)
  648  00001604  20220001	addi	r2,r1,#1
  649  00001608  afc20000	sw	(r30),r2
  650  0000160c  8fc20004	lw	r2,4(r30)
  651  00001610  20430001	addi	r3,r2,#1
  652  00001614  afc30004	sw	4(r30),r3
  653  00001618  80420000	lb	r2,(r2)
  654  0000161c  a0220000	sb	(r1),r2
  655  00001620  a3c2fff3	sb	-13(r30),r2
  656  00001624          	L17_LF2:
  657  00001624  93c1fff3	lbu	r1,-13(r30)
  658  00001628  64220000	snei	r2,r1,#0
  659  0000162c  1440000c	bnez	r2,L19_LF2
  660  00001630  54000000	nop; delay slot nop
  661  00001634  0800000c	j	L16_LF2
  662  00001638  54000000	nop; delay slot nop
  663  0000163c          	L19_LF2:
  664  0000163c  0bffffa0	j	L15_LF2
  665  00001640  54000000	nop; delay slot nop
  666  00001644          	L16_LF2:
  667  00001644  8fc1fff4	lw	r1,-12(r30)
  668  00001648  08000004	j	L14_LF2
  669  0000164c  54000000	nop; delay slot nop
  670  00001650          	L14_LF2:
  671  00001650  8fa20000	lw	r2,0(r29)
  672  00001654  8fa30004	lw	r3,4(r29)
  673  00001658  8fdffff8	lw	r31,-8(r30)
  674  0000165c  001ee820	add	r29,r0,r30
  675  00001660  8fdefffc	lw	r30,-4(r30)
  676  00001664  4be00000	jr	r31
  677  00001668  54000000	nop
  678  0000166c          	.endproc _dstrncpy
  679  0000166c          	.align 2
  680  0000166c          	.proc _dstrcat
  681  0000166c          	.global _dstrcat
  682  0000166c          	_dstrcat:
  683                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  684  0000166c  afbefffc	sw	-4(r29),r30; push fp
  685  00001670  001df020	add	r30,r0,r29; fp = sp
  686  00001674  afbffff8	sw	-8(r29),r31; push ret addr
  687  00001678  2fbd0018	subui	r29,r29,#24; alloc local storage
  688  0000167c  afa20000	sw	0(r29),r2
  689  00001680  8fc10000	lw	r1,(r30)
  690  00001684  afc1fff4	sw	-12(r30),r1
  691  00001688          	L21_LF2:
  692  00001688  8fc10000	lw	r1,(r30)
  693  0000168c  90220000	lbu	r2,(r1)
  694  00001690  64410000	snei	r1,r2,#0
  695  00001694  1420000c	bnez	r1,L23_LF2
  696  00001698  54000000	nop; delay slot nop
  697  0000169c  0800001c	j	L22_LF2
  698  000016a0  54000000	nop; delay slot nop
  699  000016a4          	L23_LF2:
  700  000016a4  8fc20000	lw	r2,(r30)
  701  000016a8  20410001	addi	r1,r2,#1
  702  000016ac  00011020	add	r2,r0,r1
  703  000016b0  afc20000	sw	(r30),r2
  704  000016b4  0bffffd0	j	L21_LF2
  705  000016b8  54000000	nop; delay slot nop
  706  000016bc          	L22_LF2:
  707  000016bc  23bdfff8	addi	r29,r29,#-8
  708  000016c0  001d0820	add	r1,r0,r29
  709  000016c4  8fc20000	lw	r2,(r30)
  710  000016c8  ac220000	sw	(r1),r2
  711  000016cc  8fc20004	lw	r2,4(r30)
  712  000016d0  ac220004	sw	4(r1),r2
  713  000016d4  0ffffe5c	jal	_dstrcpy
  714  000016d8  54000000	nop; delay slot nop
  715  000016dc  23bd0008	addi	r29,r29,#8
  716  000016e0  8fc1fff4	lw	r1,-12(r30)
  717  000016e4  08000004	j	L20_LF2
  718  000016e8  54000000	nop; delay slot nop
  719  000016ec          	L20_LF2:
  720  000016ec  8fa20000	lw	r2,0(r29)
  721  000016f0  8fdffff8	lw	r31,-8(r30)
  722  000016f4  001ee820	add	r29,r0,r30
  723  000016f8  8fdefffc	lw	r30,-4(r30)
  724  000016fc  4be00000	jr	r31
  725  00001700  54000000	nop
  726  00001704          	.endproc _dstrcat
  727  00001704          	.align 2
  728  00001704          	.proc _dstrncmp
  729  00001704          	.global _dstrncmp
  730  00001704          	_dstrncmp:
  731                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  732  00001704  afbefffc	sw	-4(r29),r30; push fp
  733  00001708  001df020	add	r30,r0,r29; fp = sp
  734  0000170c  afbffff8	sw	-8(r29),r31; push ret addr
  735  00001710  2fbd0018	subui	r29,r29,#24; alloc local storage
  736  00001714  afa20000	sw	0(r29),r2
  737  00001718  afa30004	sw	4(r29),r3
  738  0000171c  54000000	nop
  739  00001720  20010000	addi	r1,r0,#0
  740  00001724  afc1fff4	sw	-12(r30),r1
  741  00001728          	L25_LF2:
  742  00001728  8fc1fff4	lw	r1,-12(r30)
  743  0000172c  8fc20008	lw	r2,8(r30)
  744  00001730  0022082a	slt	r1,r1,r2
  745  00001734  1420000c	bnez	r1,L28_LF2
  746  00001738  54000000	nop; delay slot nop
  747  0000173c  08000088	j	L26_LF2
  748  00001740  54000000	nop; delay slot nop
  749  00001744          	L28_LF2:
  750  00001744  8fc10004	lw	r1,4(r30)
  751  00001748  90220000	lbu	r2,(r1)
  752  0000174c  64410000	snei	r1,r2,#0
  753  00001750  14200018	bnez	r1,L29_LF2
  754  00001754  54000000	nop; delay slot nop
  755  00001758  20010000	addi	r1,r0,#0
  756  0000175c  080000d8	j	L24_LF2
  757  00001760  54000000	nop; delay slot nop
  758  00001764  08000028	j	L30_LF2
  759  00001768  54000000	nop; delay slot nop
  760  0000176c          	L29_LF2:
  761  0000176c  8fc10000	lw	r1,(r30)
  762  00001770  8fc20004	lw	r2,4(r30)
  763  00001774  90210000	lbu	r1,(r1)
  764  00001778  90420000	lbu	r2,(r2)
  765  0000177c  00220829	sne	r1,r1,r2
  766  00001780  1020000c	beqz	r1,L30_LF2
  767  00001784  54000000	nop; delay slot nop
  768  00001788  0800003c	j	L26_LF2
  769  0000178c  54000000	nop; delay slot nop
  770  00001790          	L31_LF2:
  771  00001790          	L30_LF2:
  772  00001790  8fc20000	lw	r2,(r30)
  773  00001794  20410001	addi	r1,r2,#1
  774  00001798  00011020	add	r2,r0,r1
  775  0000179c  afc20000	sw	(r30),r2
  776  000017a0  8fc20004	lw	r2,4(r30)
  777  000017a4  20410001	addi	r1,r2,#1
  778  000017a8  00011020	add	r2,r0,r1
  779  000017ac  afc20004	sw	4(r30),r2
  780  000017b0          	L27_LF2:
  781  000017b0  8fc2fff4	lw	r2,-12(r30)
  782  000017b4  20410001	addi	r1,r2,#1
  783  000017b8  00011020	add	r2,r0,r1
  784  000017bc  afc2fff4	sw	-12(r30),r2
  785  000017c0  0bffff64	j	L25_LF2
  786  000017c4  54000000	nop; delay slot nop
  787  000017c8          	L26_LF2:
  788  000017c8  8fc1fff4	lw	r1,-12(r30)
  789  000017cc  8fc20008	lw	r2,8(r30)
  790  000017d0  00220828	seq	r1,r1,r2
  791  000017d4  10200018	beqz	r1,L32_LF2
  792  000017d8  54000000	nop; delay slot nop
  793  000017dc  20010000	addi	r1,r0,#0
  794  000017e0  08000054	j	L24_LF2
  795  000017e4  54000000	nop; delay slot nop
  796  000017e8  0800004c	j	L33_LF2
  797  000017ec  54000000	nop; delay slot nop
  798  000017f0          	L32_LF2:
  799  000017f0  8fc20000	lw	r2,(r30)
  800  000017f4  90410000	lbu	r1,(r2)
  801  000017f8  8fc20004	lw	r2,4(r30)
  802  000017fc  90430000	lbu	r3,(r2)
  803  00001800  00230822	sub	r1,r1,r3
  804  00001804  74220000	sgei	r2,r1,#0
  805  00001808  10400020	beqz	r2,L34_LF2
  806  0000180c  54000000	nop; delay slot nop
  807  00001810  8fc10000	lw	r1,(r30)
  808  00001814  8fc20004	lw	r2,4(r30)
  809  00001818  90210000	lbu	r1,(r1)
  810  0000181c  90420000	lbu	r2,(r2)
  811  00001820  00220829	sne	r1,r1,r2
  812  00001824  08000008	j	L35_LF2
  813  00001828  54000000	nop; delay slot nop
  814  0000182c          	L34_LF2:
  815  0000182c  2001ffff	addi	r1,r0,#-1
  816  00001830          	L35_LF2:
  817  00001830  08000004	j	L24_LF2
  818  00001834  54000000	nop; delay slot nop
  819  00001838          	L33_LF2:
  820  00001838          	L24_LF2:
  821  00001838  8fa20000	lw	r2,0(r29)
  822  0000183c  8fa30004	lw	r3,4(r29)
  823  00001840  8fdffff8	lw	r31,-8(r30)
  824  00001844  001ee820	add	r29,r0,r30
  825  00001848  8fdefffc	lw	r30,-4(r30)
  826  0000184c  4be00000	jr	r31
  827  00001850  54000000	nop
  828  00001854          	.endproc _dstrncmp
  829  00001854          	.align 2
  830  00001854          	.proc _dstrlen
  831  00001854          	.global _dstrlen
  832  00001854          	_dstrlen:
  833                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  834  00001854  afbefffc	sw	-4(r29),r30; push fp
  835  00001858  001df020	add	r30,r0,r29; fp = sp
  836  0000185c  afbffff8	sw	-8(r29),r31; push ret addr
  837  00001860  2fbd0018	subui	r29,r29,#24; alloc local storage
  838  00001864  afa20000	sw	0(r29),r2
  839  00001868  20010000	addi	r1,r0,#0
  840  0000186c  afc1fff4	sw	-12(r30),r1
  841  00001870          	L37_LF2:
  842  00001870  8fc10000	lw	r1,(r30)
  843  00001874  20220001	addi	r2,r1,#1
  844  00001878  afc20000	sw	(r30),r2
  845  0000187c  90210000	lbu	r1,(r1)
  846  00001880  64220000	snei	r2,r1,#0
  847  00001884  1440000c	bnez	r2,L39_LF2
  848  00001888  54000000	nop; delay slot nop
  849  0000188c  0800001c	j	L38_LF2
  850  00001890  54000000	nop; delay slot nop
  851  00001894          	L39_LF2:
  852  00001894  8fc2fff4	lw	r2,-12(r30)
  853  00001898  20410001	addi	r1,r2,#1
  854  0000189c  00011020	add	r2,r0,r1
  855  000018a0  afc2fff4	sw	-12(r30),r2
  856  000018a4  0bffffc8	j	L37_LF2
  857  000018a8  54000000	nop; delay slot nop
  858  000018ac          	L38_LF2:
  859  000018ac  8fc1fff4	lw	r1,-12(r30)
  860  000018b0  08000004	j	L36_LF2
  861  000018b4  54000000	nop; delay slot nop
  862  000018b8          	L36_LF2:
  863  000018b8  8fa20000	lw	r2,0(r29)
  864  000018bc  8fdffff8	lw	r31,-8(r30)
  865  000018c0  001ee820	add	r29,r0,r30
  866  000018c4  8fdefffc	lw	r30,-4(r30)
  867  000018c8  4be00000	jr	r31
  868  000018cc  54000000	nop
  869  000018d0          	.endproc _dstrlen
  870  000018d0          	.align 2
  871  000018d0          	.proc _dstrstr
  872  000018d0          	.global _dstrstr
  873  000018d0          	_dstrstr:
  874                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  875  000018d0  afbefffc	sw	-4(r29),r30; push fp
  876  000018d4  001df020	add	r30,r0,r29; fp = sp
  877  000018d8  afbffff8	sw	-8(r29),r31; push ret addr
  878  000018dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  879  000018e0  afa20000	sw	0(r29),r2
  880  000018e4  23bdfff8	addi	r29,r29,#-8
  881  000018e8  001d0820	add	r1,r0,r29
  882  000018ec  8fc20004	lw	r2,4(r30)
  883  000018f0  ac220000	sw	(r1),r2
  884  000018f4  0fffff5c	jal	_dstrlen
  885  000018f8  54000000	nop; delay slot nop
  886  000018fc  23bd0008	addi	r29,r29,#8
  887  00001900  afc1fff4	sw	-12(r30),r1
  888  00001904          	L41_LF2:
  889  00001904  8fc10000	lw	r1,(r30)
  890  00001908  90220000	lbu	r2,(r1)
  891  0000190c  64410000	snei	r1,r2,#0
  892  00001910  1420000c	bnez	r1,L43_LF2
  893  00001914  54000000	nop; delay slot nop
  894  00001918  08000060	j	L42_LF2
  895  0000191c  54000000	nop; delay slot nop
  896  00001920          	L43_LF2:
  897  00001920  23bdfff0	addi	r29,r29,#-16
  898  00001924  001d0820	add	r1,r0,r29
  899  00001928  8fc20000	lw	r2,(r30)
  900  0000192c  ac220000	sw	(r1),r2
  901  00001930  8fc20004	lw	r2,4(r30)
  902  00001934  ac220004	sw	4(r1),r2
  903  00001938  8fc2fff4	lw	r2,-12(r30)
  904  0000193c  ac220008	sw	8(r1),r2
  905  00001940  0ffffdc0	jal	_dstrncmp
  906  00001944  54000000	nop; delay slot nop
  907  00001948  23bd0010	addi	r29,r29,#16
  908  0000194c  64220000	snei	r2,r1,#0
  909  00001950  14400010	bnez	r2,L44_LF2
  910  00001954  54000000	nop; delay slot nop
  911  00001958  8fc10000	lw	r1,(r30)
  912  0000195c  08000028	j	L40_LF2
  913  00001960  54000000	nop; delay slot nop
  914  00001964          	L44_LF2:
  915  00001964  8fc20000	lw	r2,(r30)
  916  00001968  20410001	addi	r1,r2,#1
  917  0000196c  00011020	add	r2,r0,r1
  918  00001970  afc20000	sw	(r30),r2
  919  00001974  0bffff8c	j	L41_LF2
  920  00001978  54000000	nop; delay slot nop
  921  0000197c          	L42_LF2:
  922  0000197c  20010000	addi	r1,r0,#0
  923  00001980  08000004	j	L40_LF2
  924  00001984  54000000	nop; delay slot nop
  925  00001988          	L40_LF2:
  926  00001988  8fa20000	lw	r2,0(r29)
  927  0000198c  8fdffff8	lw	r31,-8(r30)
  928  00001990  001ee820	add	r29,r0,r30
  929  00001994  8fdefffc	lw	r30,-4(r30)
  930  00001998  4be00000	jr	r31
  931  0000199c  54000000	nop
  932  000019a0          	.endproc _dstrstr
  933  000019a0          	.align 2
  934  000019a0          	.proc _dmindex
  935  000019a0          	.global _dmindex
  936  000019a0          	_dmindex:
  937                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  938  000019a0  afbefffc	sw	-4(r29),r30; push fp
  939  000019a4  001df020	add	r30,r0,r29; fp = sp
  940  000019a8  afbffff8	sw	-8(r29),r31; push ret addr
  941  000019ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  942  000019b0  afa20000	sw	0(r29),r2
  943  000019b4  54000000	nop
  944  000019b8          	L46_LF2:
  945  000019b8  8fc10000	lw	r1,(r30)
  946  000019bc  90220000	lbu	r2,(r1)
  947  000019c0  64410000	snei	r1,r2,#0
  948  000019c4  1420000c	bnez	r1,L48_LF2
  949  000019c8  54000000	nop; delay slot nop
  950  000019cc  08000070	j	L47_LF2
  951  000019d0  54000000	nop; delay slot nop
  952  000019d4          	L48_LF2:
  953  000019d4  8fc10004	lw	r1,4(r30)
  954  000019d8  afc1fff4	sw	-12(r30),r1
  955  000019dc          	L49_LF2:
  956  000019dc  8fc1fff4	lw	r1,-12(r30)
  957  000019e0  90220000	lbu	r2,(r1)
  958  000019e4  64410000	snei	r1,r2,#0
  959  000019e8  1420000c	bnez	r1,L52_LF2
  960  000019ec  54000000	nop; delay slot nop
  961  000019f0  08000044	j	L50_LF2
  962  000019f4  54000000	nop; delay slot nop
  963  000019f8          	L52_LF2:
  964  000019f8  8fc10000	lw	r1,(r30)
  965  000019fc  8fc2fff4	lw	r2,-12(r30)
  966  00001a00  90210000	lbu	r1,(r1)
  967  00001a04  90420000	lbu	r2,(r2)
  968  00001a08  00220828	seq	r1,r1,r2
  969  00001a0c  10200010	beqz	r1,L51_LF2
  970  00001a10  54000000	nop; delay slot nop
  971  00001a14  8fc10000	lw	r1,(r30)
  972  00001a18  08000030	j	L45_LF2
  973  00001a1c  54000000	nop; delay slot nop
  974  00001a20          	L53_LF2:
  975  00001a20          	L51_LF2:
  976  00001a20  8fc2fff4	lw	r2,-12(r30)
  977  00001a24  20410001	addi	r1,r2,#1
  978  00001a28  00011020	add	r2,r0,r1
  979  00001a2c  afc2fff4	sw	-12(r30),r2
  980  00001a30  0bffffa8	j	L49_LF2
  981  00001a34  54000000	nop; delay slot nop
  982  00001a38          	L50_LF2:
  983  00001a38  0bffff7c	j	L46_LF2
  984  00001a3c  54000000	nop; delay slot nop
  985  00001a40          	L47_LF2:
  986  00001a40  20010000	addi	r1,r0,#0
  987  00001a44  08000004	j	L45_LF2
  988  00001a48  54000000	nop; delay slot nop
  989  00001a4c          	L45_LF2:
  990  00001a4c  8fa20000	lw	r2,0(r29)
  991  00001a50  8fdffff8	lw	r31,-8(r30)
  992  00001a54  001ee820	add	r29,r0,r30
  993  00001a58  8fdefffc	lw	r30,-4(r30)
  994  00001a5c  4be00000	jr	r31
  995  00001a60  54000000	nop
  996  00001a64          	.endproc _dmindex
  997  00001a64          	.align 2
  998  00001a64          	.proc _dindex
  999  00001a64          	.global _dindex
 1000  00001a64          	_dindex:
 1001                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1002  00001a64  afbefffc	sw	-4(r29),r30; push fp
 1003  00001a68  001df020	add	r30,r0,r29; fp = sp
 1004  00001a6c  afbffff8	sw	-8(r29),r31; push ret addr
 1005  00001a70  2fbd0010	subui	r29,r29,#16; alloc local storage
 1006  00001a74  afa20000	sw	0(r29),r2
 1007  00001a78  54000000	nop
 1008  00001a7c          	L55_LF2:
 1009  00001a7c  8fc10000	lw	r1,(r30)
 1010  00001a80  90220000	lbu	r2,(r1)
 1011  00001a84  64410000	snei	r1,r2,#0
 1012  00001a88  1420000c	bnez	r1,L57_LF2
 1013  00001a8c  54000000	nop; delay slot nop
 1014  00001a90  08000040	j	L56_LF2
 1015  00001a94  54000000	nop; delay slot nop
 1016  00001a98          	L57_LF2:
 1017  00001a98  8fc10000	lw	r1,(r30)
 1018  00001a9c  90220000	lbu	r2,(r1)
 1019  00001aa0  8fc10004	lw	r1,4(r30)
 1020  00001aa4  00411028	seq	r2,r2,r1
 1021  00001aa8  10400010	beqz	r2,L58_LF2
 1022  00001aac  54000000	nop; delay slot nop
 1023  00001ab0  8fc10000	lw	r1,(r30)
 1024  00001ab4  08000028	j	L54_LF2
 1025  00001ab8  54000000	nop; delay slot nop
 1026  00001abc          	L58_LF2:
 1027  00001abc  8fc20000	lw	r2,(r30)
 1028  00001ac0  20410001	addi	r1,r2,#1
 1029  00001ac4  00011020	add	r2,r0,r1
 1030  00001ac8  afc20000	sw	(r30),r2
 1031  00001acc  0bffffac	j	L55_LF2
 1032  00001ad0  54000000	nop; delay slot nop
 1033  00001ad4          	L56_LF2:
 1034  00001ad4  20010000	addi	r1,r0,#0
 1035  00001ad8  08000004	j	L54_LF2
 1036  00001adc  54000000	nop; delay slot nop
 1037  00001ae0          	L54_LF2:
 1038  00001ae0  8fa20000	lw	r2,0(r29)
 1039  00001ae4  8fdffff8	lw	r31,-8(r30)
 1040  00001ae8  001ee820	add	r29,r0,r30
 1041  00001aec  8fdefffc	lw	r30,-4(r30)
 1042  00001af0  4be00000	jr	r31
 1043  00001af4  54000000	nop
 1044  00001af8          	.endproc _dindex
 1045  00001af8          	.align 2
 1046  00001af8          	.proc _ditoa
 1047  00001af8          	.global _ditoa
 1048  00001af8          	_ditoa:
 1049                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1050  00001af8  afbefffc	sw	-4(r29),r30; push fp
 1051  00001afc  001df020	add	r30,r0,r29; fp = sp
 1052  00001b00  afbffff8	sw	-8(r29),r31; push ret addr
 1053  00001b04  2fbd0018	subui	r29,r29,#24; alloc local storage
 1054  00001b08  afa20000	sw	0(r29),r2
 1055  00001b0c  afa30004	sw	4(r29),r3
 1056  00001b10  8fc10000	lw	r1,(r30)
 1057  00001b14  68220000	slti	r2,r1,#0
 1058  00001b18  1040002c	beqz	r2,L60_LF2
 1059  00001b1c  54000000	nop; delay slot nop
 1060  00001b20  8fc10004	lw	r1,4(r30)
 1061  00001b24  20220001	addi	r2,r1,#1
 1062  00001b28  afc20004	sw	4(r30),r2
 1063  00001b2c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1064  00001b30  a0220000	sb	(r1),r2
 1065  00001b34  8fc10000	lw	r1,(r30)
 1066  00001b38  00011022	sub	r2,r0,r1
 1067  00001b3c  afc20000	sw	(r30),r2
 1068  00001b40  08000118	j	L61_LF2
 1069  00001b44  54000000	nop; delay slot nop
 1070  00001b48          	L60_LF2:
 1071  00001b48  8fc10000	lw	r1,(r30)
 1072  00001b4c  64220000	snei	r2,r1,#0
 1073  00001b50  14400020	bnez	r2,L62_LF2
 1074  00001b54  54000000	nop; delay slot nop
 1075  00001b58  8fc10004	lw	r1,4(r30)
 1076  00001b5c  20220001	addi	r2,r1,#1
 1077  00001b60  afc20004	sw	4(r30),r2
 1078  00001b64  20020030	addi	r2,r0,(#0x30)&0xff
 1079  00001b68  a0220000	sb	(r1),r2
 1080  00001b6c  080000ec	j	L61_LF2
 1081  00001b70  54000000	nop; delay slot nop
 1082  00001b74          	L62_LF2:
 1083  00001b74  20010001	addi	r1,r0,#1
 1084  00001b78  afc1fff4	sw	-12(r30),r1
 1085  00001b7c          	L64_LF2:
 1086  00001b7c  8fc1fff4	lw	r1,-12(r30)
 1087  00001b80  8fc20000	lw	r2,(r30)
 1088  00001b84  0022082c	sle	r1,r1,r2
 1089  00001b88  1420000c	bnez	r1,L66_LF2
 1090  00001b8c  54000000	nop; delay slot nop
 1091  00001b90  08000024	j	L65_LF2
 1092  00001b94  54000000	nop; delay slot nop
 1093  00001b98          	L67_LF2:
 1094  00001b98          	L66_LF2:
 1095  00001b98  8fc1fff4	lw	r1,-12(r30)
 1096  00001b9c  00011820	add	r3,r0,r1
 1097  00001ba0  50620002	slli	r2,r3,#0x2
 1098  00001ba4  00411020	add	r2,r2,r1
 1099  00001ba8  50410001	slli	r1,r2,#0x1
 1100  00001bac  afc1fff4	sw	-12(r30),r1
 1101  00001bb0  0bffffc8	j	L64_LF2
 1102  00001bb4  54000000	nop; delay slot nop
 1103  00001bb8          	L65_LF2:
 1104  00001bb8  54000000	nop
 1105  00001bbc          	L68_LF2:
 1106  00001bbc  8fc1fff4	lw	r1,-12(r30)
 1107  00001bc0  2002000a	addi	r2,r0,#10
 1108  00001bc4  00200035	movi2fp	f0,r1
 1109  00001bc8  00400835	movi2fp	f1,r2
 1110  00001bcc  0401000f	div	f0,f0,f1
 1111  00001bd0  00000834	movfp2i	r1,f0
 1112  00001bd4  afc1fff4	sw	-12(r30),r1
 1113  00001bd8  8fc10004	lw	r1,4(r30)
 1114  00001bdc  20220001	addi	r2,r1,#1
 1115  00001be0  afc20004	sw	4(r30),r2
 1116  00001be4  8fc20000	lw	r2,(r30)
 1117  00001be8  8fc3fff4	lw	r3,-12(r30)
 1118  00001bec  00400035	movi2fp	f0,r2
 1119  00001bf0  00600835	movi2fp	f1,r3
 1120  00001bf4  0401000f	div	f0,f0,f1
 1121  00001bf8  00001034	movfp2i	r2,f0
 1122  00001bfc  00021820	add	r3,r0,r2
 1123  00001c00  20620030	addi	r2,r3,#48
 1124  00001c04  a0220000	sb	(r1),r2
 1125  00001c08  8fc10000	lw	r1,(r30)
 1126  00001c0c  8fc3fff4	lw	r3,-12(r30)
 1127  00001c10  00200035	movi2fp	f0,r1
 1128  00001c14  00600835	movi2fp	f1,r3
 1129  00001c18  0401000f	div	f0,f0,f1
 1130  00001c1c  00001034	movfp2i	r2,f0
 1131  00001c20  8fc3fff4	lw	r3,-12(r30)
 1132  00001c24  00400035	movi2fp	f0,r2
 1133  00001c28  00600835	movi2fp	f1,r3
 1134  00001c2c  0401000e	mult	f0,f0,f1
 1135  00001c30  00001034	movfp2i	r2,f0
 1136  00001c34  00220822	sub	r1,r1,r2
 1137  00001c38  afc10000	sw	(r30),r1
 1138  00001c3c          	L70_LF2:
 1139  00001c3c  8fc1fff4	lw	r1,-12(r30)
 1140  00001c40  6c220001	sgti	r2,r1,#1
 1141  00001c44  1440000c	bnez	r2,L71_LF2
 1142  00001c48  54000000	nop; delay slot nop
 1143  00001c4c  0800000c	j	L61_LF2
 1144  00001c50  54000000	nop; delay slot nop
 1145  00001c54          	L71_LF2:
 1146  00001c54  0bffff64	j	L68_LF2
 1147  00001c58  54000000	nop; delay slot nop
 1148  00001c5c          	L69_LF2:
 1149  00001c5c          	L63_LF2:
 1150  00001c5c          	L61_LF2:
 1151  00001c5c  8fc10004	lw	r1,4(r30)
 1152  00001c60  20020000	addi	r2,r0,(#0x0)&0xff
 1153  00001c64  a0220000	sb	(r1),r2
 1154  00001c68          	L59_LF2:
 1155  00001c68  8fa20000	lw	r2,0(r29)
 1156  00001c6c  8fa30004	lw	r3,4(r29)
 1157  00001c70  8fdffff8	lw	r31,-8(r30)
 1158  00001c74  001ee820	add	r29,r0,r30
 1159  00001c78  8fdefffc	lw	r30,-4(r30)
 1160  00001c7c  4be00000	jr	r31
 1161  00001c80  54000000	nop
 1162  00001c84          	.endproc _ditoa
 1163  00001c84          	.align 2
 1164  00001c84          	.proc _dstrtol
 1165  00001c84          	.global _dstrtol
 1166  00001c84          	_dstrtol:
 1167                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1168  00001c84  afbefffc	sw	-4(r29),r30; push fp
 1169  00001c88  001df020	add	r30,r0,r29; fp = sp
 1170  00001c8c  afbffff8	sw	-8(r29),r31; push ret addr
 1171  00001c90  2fbd0020	subui	r29,r29,#32; alloc local storage
 1172  00001c94  afa20000	sw	0(r29),r2
 1173  00001c98  20010000	addi	r1,r0,#0
 1174  00001c9c  afc1fff4	sw	-12(r30),r1
 1175  00001ca0          	L73_LF2:
 1176  00001ca0  8fc10000	lw	r1,(r30)
 1177  00001ca4  90220000	lbu	r2,(r1)
 1178  00001ca8  60410020	seqi	r1,r2,#32
 1179  00001cac  14200034	bnez	r1,L75_LF2
 1180  00001cb0  54000000	nop; delay slot nop
 1181  00001cb4  8fc10000	lw	r1,(r30)
 1182  00001cb8  90220000	lbu	r2,(r1)
 1183  00001cbc  60410009	seqi	r1,r2,#9
 1184  00001cc0  14200020	bnez	r1,L75_LF2
 1185  00001cc4  54000000	nop; delay slot nop
 1186  00001cc8  8fc10000	lw	r1,(r30)
 1187  00001ccc  90220000	lbu	r2,(r1)
 1188  00001cd0  6041000a	seqi	r1,r2,#10
 1189  00001cd4  1420000c	bnez	r1,L75_LF2
 1190  00001cd8  54000000	nop; delay slot nop
 1191  00001cdc  0800001c	j	L74_LF2
 1192  00001ce0  54000000	nop; delay slot nop
 1193  00001ce4          	L75_LF2:
 1194  00001ce4  8fc20000	lw	r2,(r30)
 1195  00001ce8  20410001	addi	r1,r2,#1
 1196  00001cec  00011020	add	r2,r0,r1
 1197  00001cf0  afc20000	sw	(r30),r2
 1198  00001cf4  0bffffa8	j	L73_LF2
 1199  00001cf8  54000000	nop; delay slot nop
 1200  00001cfc          	L74_LF2:
 1201  00001cfc  8fc10004	lw	r1,4(r30)
 1202  00001d00  64220000	snei	r2,r1,#0
 1203  00001d04  10400010	beqz	r2,L76_LF2
 1204  00001d08  54000000	nop; delay slot nop
 1205  00001d0c  8fc10004	lw	r1,4(r30)
 1206  00001d10  8fc20000	lw	r2,(r30)
 1207  00001d14  ac220000	sw	(r1),r2
 1208  00001d18          	L76_LF2:
 1209  00001d18  8fc10000	lw	r1,(r30)
 1210  00001d1c  90220000	lbu	r2,(r1)
 1211  00001d20  64410000	snei	r1,r2,#0
 1212  00001d24  14200010	bnez	r1,L77_LF2
 1213  00001d28  54000000	nop; delay slot nop
 1214  00001d2c  8fc1fff4	lw	r1,-12(r30)
 1215  00001d30  08000294	j	L72_LF2
 1216  00001d34  54000000	nop; delay slot nop
 1217  00001d38          	L77_LF2:
 1218  00001d38  8fc10000	lw	r1,(r30)
 1219  00001d3c  90220000	lbu	r2,(r1)
 1220  00001d40  6041002d	seqi	r1,r2,#45
 1221  00001d44  10200024	beqz	r1,L78_LF2
 1222  00001d48  54000000	nop; delay slot nop
 1223  00001d4c  2001ffff	addi	r1,r0,#-1
 1224  00001d50  afc1ffec	sw	-20(r30),r1
 1225  00001d54  8fc20000	lw	r2,(r30)
 1226  00001d58  20410001	addi	r1,r2,#1
 1227  00001d5c  00011020	add	r2,r0,r1
 1228  00001d60  afc20000	sw	(r30),r2
 1229  00001d64  0800000c	j	L79_LF2
 1230  00001d68  54000000	nop; delay slot nop
 1231  00001d6c          	L78_LF2:
 1232  00001d6c  20010001	addi	r1,r0,#1
 1233  00001d70  afc1ffec	sw	-20(r30),r1
 1234  00001d74          	L79_LF2:
 1235  00001d74  8fc10008	lw	r1,8(r30)
 1236  00001d78  64220000	snei	r2,r1,#0
 1237  00001d7c  14400090	bnez	r2,L80_LF2
 1238  00001d80  54000000	nop; delay slot nop
 1239  00001d84  8fc10000	lw	r1,(r30)
 1240  00001d88  90220000	lbu	r2,(r1)
 1241  00001d8c  60410030	seqi	r1,r2,#48
 1242  00001d90  10200074	beqz	r1,L81_LF2
 1243  00001d94  54000000	nop; delay slot nop
 1244  00001d98  8fc20000	lw	r2,(r30)
 1245  00001d9c  20410001	addi	r1,r2,#1
 1246  00001da0  00011020	add	r2,r0,r1
 1247  00001da4  afc20000	sw	(r30),r2
 1248  00001da8  8fc10000	lw	r1,(r30)
 1249  00001dac  90220000	lbu	r2,(r1)
 1250  00001db0  60410078	seqi	r1,r2,#120
 1251  00001db4  14200020	bnez	r1,L83_LF2
 1252  00001db8  54000000	nop; delay slot nop
 1253  00001dbc  8fc10000	lw	r1,(r30)
 1254  00001dc0  90220000	lbu	r2,(r1)
 1255  00001dc4  60410058	seqi	r1,r2,#88
 1256  00001dc8  1420000c	bnez	r1,L83_LF2
 1257  00001dcc  54000000	nop; delay slot nop
 1258  00001dd0  08000024	j	L82_LF2
 1259  00001dd4  54000000	nop; delay slot nop
 1260  00001dd8          	L83_LF2:
 1261  00001dd8  20010010	addi	r1,r0,#16
 1262  00001ddc  afc10008	sw	8(r30),r1
 1263  00001de0  8fc20000	lw	r2,(r30)
 1264  00001de4  20410001	addi	r1,r2,#1
 1265  00001de8  00011020	add	r2,r0,r1
 1266  00001dec  afc20000	sw	(r30),r2
 1267  00001df0  0800000c	j	L84_LF2
 1268  00001df4  54000000	nop; delay slot nop
 1269  00001df8          	L82_LF2:
 1270  00001df8  20010008	addi	r1,r0,#8
 1271  00001dfc  afc10008	sw	8(r30),r1
 1272  00001e00          	L84_LF2:
 1273  00001e00  0800000c	j	L80_LF2
 1274  00001e04  54000000	nop; delay slot nop
 1275  00001e08          	L81_LF2:
 1276  00001e08  2001000a	addi	r1,r0,#10
 1277  00001e0c  afc10008	sw	8(r30),r1
 1278  00001e10          	L85_LF2:
 1279  00001e10          	L80_LF2:
 1280  00001e10  8fc10008	lw	r1,8(r30)
 1281  00001e14  70220000	slei	r2,r1,#0
 1282  00001e18  1440001c	bnez	r2,L87_LF2
 1283  00001e1c  54000000	nop; delay slot nop
 1284  00001e20  8fc10008	lw	r1,8(r30)
 1285  00001e24  6c220010	sgti	r2,r1,#16
 1286  00001e28  1440000c	bnez	r2,L87_LF2
 1287  00001e2c  54000000	nop; delay slot nop
 1288  00001e30  08000010	j	L86_LF2
 1289  00001e34  54000000	nop; delay slot nop
 1290  00001e38          	L87_LF2:
 1291  00001e38  8fc1fff4	lw	r1,-12(r30)
 1292  00001e3c  08000188	j	L72_LF2
 1293  00001e40  54000000	nop; delay slot nop
 1294  00001e44          	L86_LF2:
 1295  00001e44  54000000	nop
 1296  00001e48          	L88_LF2:
 1297  00001e48  8fc10000	lw	r1,(r30)
 1298  00001e4c  90220000	lbu	r2,(r1)
 1299  00001e50  6c41002f	sgtui	r1,r2,#47
 1300  00001e54  10200030	beqz	r1,L91_LF2
 1301  00001e58  54000000	nop; delay slot nop
 1302  00001e5c  8fc10000	lw	r1,(r30)
 1303  00001e60  90220000	lbu	r2,(r1)
 1304  00001e64  70410039	sleui	r1,r2,#57
 1305  00001e68  1020001c	beqz	r1,L91_LF2
 1306  00001e6c  54000000	nop; delay slot nop
 1307  00001e70  8fc10000	lw	r1,(r30)
 1308  00001e74  90220000	lbu	r2,(r1)
 1309  00001e78  2041ffd0	addi	r1,r2,#-48
 1310  00001e7c  afc1fff0	sw	-16(r30),r1
 1311  00001e80  0800008c	j	L92_LF2
 1312  00001e84  54000000	nop; delay slot nop
 1313  00001e88          	L91_LF2:
 1314  00001e88  8fc10000	lw	r1,(r30)
 1315  00001e8c  90220000	lbu	r2,(r1)
 1316  00001e90  6c410060	sgtui	r1,r2,#96
 1317  00001e94  10200030	beqz	r1,L93_LF2
 1318  00001e98  54000000	nop; delay slot nop
 1319  00001e9c  8fc10000	lw	r1,(r30)
 1320  00001ea0  90220000	lbu	r2,(r1)
 1321  00001ea4  7041007a	sleui	r1,r2,#122
 1322  00001ea8  1020001c	beqz	r1,L93_LF2
 1323  00001eac  54000000	nop; delay slot nop
 1324  00001eb0  8fc10000	lw	r1,(r30)
 1325  00001eb4  90220000	lbu	r2,(r1)
 1326  00001eb8  2041ffa9	addi	r1,r2,#-87
 1327  00001ebc  afc1fff0	sw	-16(r30),r1
 1328  00001ec0  0800004c	j	L92_LF2
 1329  00001ec4  54000000	nop; delay slot nop
 1330  00001ec8          	L93_LF2:
 1331  00001ec8  8fc10000	lw	r1,(r30)
 1332  00001ecc  90220000	lbu	r2,(r1)
 1333  00001ed0  6c410040	sgtui	r1,r2,#64
 1334  00001ed4  10200030	beqz	r1,L95_LF2
 1335  00001ed8  54000000	nop; delay slot nop
 1336  00001edc  8fc10000	lw	r1,(r30)
 1337  00001ee0  90220000	lbu	r2,(r1)
 1338  00001ee4  7041005a	sleui	r1,r2,#90
 1339  00001ee8  1020001c	beqz	r1,L95_LF2
 1340  00001eec  54000000	nop; delay slot nop
 1341  00001ef0  8fc10000	lw	r1,(r30)
 1342  00001ef4  90220000	lbu	r2,(r1)
 1343  00001ef8  2041ffc9	addi	r1,r2,#-55
 1344  00001efc  afc1fff0	sw	-16(r30),r1
 1345  00001f00  0800000c	j	L92_LF2
 1346  00001f04  54000000	nop; delay slot nop
 1347  00001f08          	L95_LF2:
 1348  00001f08  200103e8	addi	r1,r0,#1000
 1349  00001f0c  afc1fff0	sw	-16(r30),r1
 1350  00001f10          	L96_LF2:
 1351  00001f10          	L94_LF2:
 1352  00001f10          	L92_LF2:
 1353  00001f10  8fc1fff0	lw	r1,-16(r30)
 1354  00001f14  8fc20008	lw	r2,8(r30)
 1355  00001f18  0022082a	slt	r1,r1,r2
 1356  00001f1c  10200040	beqz	r1,L90_LF2
 1357  00001f20  54000000	nop; delay slot nop
 1358  00001f24  8fc1fff4	lw	r1,-12(r30)
 1359  00001f28  8fc20008	lw	r2,8(r30)
 1360  00001f2c  00200035	movi2fp	f0,r1
 1361  00001f30  00400835	movi2fp	f1,r2
 1362  00001f34  0401000e	mult	f0,f0,f1
 1363  00001f38  00000834	movfp2i	r1,f0
 1364  00001f3c  afc1fff4	sw	-12(r30),r1
 1365  00001f40  8fc1fff4	lw	r1,-12(r30)
 1366  00001f44  8fc2fff0	lw	r2,-16(r30)
 1367  00001f48  00220820	add	r1,r1,r2
 1368  00001f4c  afc1fff4	sw	-12(r30),r1
 1369  00001f50  8fc20000	lw	r2,(r30)
 1370  00001f54  20410001	addi	r1,r2,#1
 1371  00001f58  00011020	add	r2,r0,r1
 1372  00001f5c  afc20000	sw	(r30),r2
 1373  00001f60          	L97_LF2:
 1374  00001f60          	L90_LF2:
 1375  00001f60  8fc1fff0	lw	r1,-16(r30)
 1376  00001f64  8fc20008	lw	r2,8(r30)
 1377  00001f68  0022082a	slt	r1,r1,r2
 1378  00001f6c  1420000c	bnez	r1,L98_LF2
 1379  00001f70  54000000	nop; delay slot nop
 1380  00001f74  0800000c	j	L89_LF2
 1381  00001f78  54000000	nop; delay slot nop
 1382  00001f7c          	L98_LF2:
 1383  00001f7c  0bfffec8	j	L88_LF2
 1384  00001f80  54000000	nop; delay slot nop
 1385  00001f84          	L89_LF2:
 1386  00001f84  8fc10004	lw	r1,4(r30)
 1387  00001f88  64220000	snei	r2,r1,#0
 1388  00001f8c  10400010	beqz	r2,L99_LF2
 1389  00001f90  54000000	nop; delay slot nop
 1390  00001f94  8fc10004	lw	r1,4(r30)
 1391  00001f98  8fc20000	lw	r2,(r30)
 1392  00001f9c  ac220000	sw	(r1),r2
 1393  00001fa0          	L99_LF2:
 1394  00001fa0  8fc1fff4	lw	r1,-12(r30)
 1395  00001fa4  8fc2ffec	lw	r2,-20(r30)
 1396  00001fa8  00200035	movi2fp	f0,r1
 1397  00001fac  00400835	movi2fp	f1,r2
 1398  00001fb0  0401000e	mult	f0,f0,f1
 1399  00001fb4  00000834	movfp2i	r1,f0
 1400  00001fb8  afc1fff4	sw	-12(r30),r1
 1401  00001fbc  8fc1fff4	lw	r1,-12(r30)
 1402  00001fc0  08000004	j	L72_LF2
 1403  00001fc4  54000000	nop; delay slot nop
 1404  00001fc8          	L72_LF2:
 1405  00001fc8  8fa20000	lw	r2,0(r29)
 1406  00001fcc  8fdffff8	lw	r31,-8(r30)
 1407  00001fd0  001ee820	add	r29,r0,r30
 1408  00001fd4  8fdefffc	lw	r30,-4(r30)
 1409  00001fd8  4be00000	jr	r31
 1410  00001fdc  54000000	nop
 1411  00001fe0          	.endproc _dstrtol
 1412  00001fe0          	.align 2
 1413  00001fe0          	.proc _bcopy
 1414  00001fe0          	.global _bcopy
 1415  00001fe0          	_bcopy:
 1416                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1417  00001fe0  afbefffc	sw	-4(r29),r30; push fp
 1418  00001fe4  001df020	add	r30,r0,r29; fp = sp
 1419  00001fe8  afbffff8	sw	-8(r29),r31; push ret addr
 1420  00001fec  2fbd0010	subui	r29,r29,#16; alloc local storage
 1421  00001ff0  afa20000	sw	0(r29),r2
 1422  00001ff4  afa30004	sw	4(r29),r3
 1423  00001ff8  54000000	nop
 1424  00001ffc          	L101_LF2:
 1425  00001ffc  8fc10008	lw	r1,8(r30)
 1426  00002000  2022ffff	addi	r2,r1,#-1
 1427  00002004  afc20008	sw	8(r30),r2
 1428  00002008  6c210000	sgti	r1,r1,#0
 1429  0000200c  1420000c	bnez	r1,L103_LF2
 1430  00002010  54000000	nop; delay slot nop
 1431  00002014  0800002c	j	L102_LF2
 1432  00002018  54000000	nop; delay slot nop
 1433  0000201c          	L103_LF2:
 1434  0000201c  8fc10004	lw	r1,4(r30)
 1435  00002020  20220001	addi	r2,r1,#1
 1436  00002024  afc20004	sw	4(r30),r2
 1437  00002028  8fc20000	lw	r2,(r30)
 1438  0000202c  20430001	addi	r3,r2,#1
 1439  00002030  afc30000	sw	(r30),r3
 1440  00002034  80420000	lb	r2,(r2)
 1441  00002038  a0220000	sb	(r1),r2
 1442  0000203c  0bffffbc	j	L101_LF2
 1443  00002040  54000000	nop; delay slot nop
 1444  00002044          	L102_LF2:
 1445  00002044          	L100_LF2:
 1446  00002044  8fa20000	lw	r2,0(r29)
 1447  00002048  8fa30004	lw	r3,4(r29)
 1448  0000204c  8fdffff8	lw	r31,-8(r30)
 1449  00002050  001ee820	add	r29,r0,r30
 1450  00002054  8fdefffc	lw	r30,-4(r30)
 1451  00002058  4be00000	jr	r31
 1452  0000205c  54000000	nop
 1453  00002060          	.endproc _bcopy
 1454  00002060          	.align 2
 1455  00002060          	.proc _bzero
 1456  00002060          	.global _bzero
 1457  00002060          	_bzero:
 1458                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1459  00002060  afbefffc	sw	-4(r29),r30; push fp
 1460  00002064  001df020	add	r30,r0,r29; fp = sp
 1461  00002068  afbffff8	sw	-8(r29),r31; push ret addr
 1462  0000206c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1463  00002070  afa20000	sw	0(r29),r2
 1464  00002074  54000000	nop
 1465  00002078          	L105_LF2:
 1466  00002078  8fc10004	lw	r1,4(r30)
 1467  0000207c  2022ffff	addi	r2,r1,#-1
 1468  00002080  afc20004	sw	4(r30),r2
 1469  00002084  6c210000	sgti	r1,r1,#0
 1470  00002088  1420000c	bnez	r1,L107_LF2
 1471  0000208c  54000000	nop; delay slot nop
 1472  00002090  08000020	j	L106_LF2
 1473  00002094  54000000	nop; delay slot nop
 1474  00002098          	L107_LF2:
 1475  00002098  8fc10000	lw	r1,(r30)
 1476  0000209c  20220001	addi	r2,r1,#1
 1477  000020a0  afc20000	sw	(r30),r2
 1478  000020a4  20020000	addi	r2,r0,(#0x0)&0xff
 1479  000020a8  a0220000	sb	(r1),r2
 1480  000020ac  0bffffc8	j	L105_LF2
 1481  000020b0  54000000	nop; delay slot nop
 1482  000020b4          	L106_LF2:
 1483  000020b4          	L104_LF2:
 1484  000020b4  8fa20000	lw	r2,0(r29)
 1485  000020b8  8fdffff8	lw	r31,-8(r30)
 1486  000020bc  001ee820	add	r29,r0,r30
 1487  000020c0  8fdefffc	lw	r30,-4(r30)
 1488  000020c4  4be00000	jr	r31
 1489  000020c8  54000000	nop
 1490  000020cc          	.endproc _bzero
 1491  000020cc          	.align 2
 1492  000020cc          	.proc _min
 1493  000020cc          	.global _min
 1494  000020cc          	_min:
 1495                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1496  000020cc  afbefffc	sw	-4(r29),r30; push fp
 1497  000020d0  001df020	add	r30,r0,r29; fp = sp
 1498  000020d4  afbffff8	sw	-8(r29),r31; push ret addr
 1499  000020d8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1500  000020dc  afa20000	sw	0(r29),r2
 1501  000020e0  afa30004	sw	4(r29),r3
 1502  000020e4  8fc10000	lw	r1,(r30)
 1503  000020e8  8fc20004	lw	r2,4(r30)
 1504  000020ec  0022182c	sle	r3,r1,r2
 1505  000020f0  14600008	bnez	r3,L109_LF2
 1506  000020f4  54000000	nop; delay slot nop
 1507  000020f8  8fc10004	lw	r1,4(r30)
 1508  000020fc          	L109_LF2:
 1509  000020fc  08000004	j	L108_LF2
 1510  00002100  54000000	nop; delay slot nop
 1511  00002104          	L108_LF2:
 1512  00002104  8fa20000	lw	r2,0(r29)
 1513  00002108  8fa30004	lw	r3,4(r29)
 1514  0000210c  8fdffff8	lw	r31,-8(r30)
 1515  00002110  001ee820	add	r29,r0,r30
 1516  00002114  8fdefffc	lw	r30,-4(r30)
 1517  00002118  4be00000	jr	r31
 1518  0000211c  54000000	nop
 1519  00002120          	.endproc _min
 1520  00002120          	.align 2
 1521  00002120          	.proc _max
 1522  00002120          	.global _max
 1523  00002120          	_max:
 1524                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1525  00002120  afbefffc	sw	-4(r29),r30; push fp
 1526  00002124  001df020	add	r30,r0,r29; fp = sp
 1527  00002128  afbffff8	sw	-8(r29),r31; push ret addr
 1528  0000212c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1529  00002130  afa20000	sw	0(r29),r2
 1530  00002134  afa30004	sw	4(r29),r3
 1531  00002138  8fc10000	lw	r1,(r30)
 1532  0000213c  8fc20004	lw	r2,4(r30)
 1533  00002140  0022182d	sge	r3,r1,r2
 1534  00002144  14600008	bnez	r3,L111_LF2
 1535  00002148  54000000	nop; delay slot nop
 1536  0000214c  8fc10004	lw	r1,4(r30)
 1537  00002150          	L111_LF2:
 1538  00002150  08000004	j	L110_LF2
 1539  00002154  54000000	nop; delay slot nop
 1540  00002158          	L110_LF2:
 1541  00002158  8fa20000	lw	r2,0(r29)
 1542  0000215c  8fa30004	lw	r3,4(r29)
 1543  00002160  8fdffff8	lw	r31,-8(r30)
 1544  00002164  001ee820	add	r29,r0,r30
 1545  00002168  8fdefffc	lw	r30,-4(r30)
 1546  0000216c  4be00000	jr	r31
 1547  00002170  54000000	nop
 1548  00002174          	.endproc _max
 1549                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1550                      ;;;
 1551                      ;;; Most of the traps are called in files from libtraps.
 1554  00002174          	.align 2
 1555  00002174          	.proc _exit
 1556  00002174          	.global _exit
 1557  00002174          	_exit:
 1558  00002174  44000300	trap	#0x300
 1559  00002178  4be00000	jr	r31
 1560  0000217c  54000000	nop
 1561  00002180          	.endproc _exit
 1563                      ; for the benefit of gcc.
 1564  00002180          	.proc ___main
 1565  00002180          	.global ___main
 1566  00002180          	___main:
 1567  00002180  4be00000	jr	r31
 1568  00002184  54000000	nop
 1569  00002188          	.endproc ___main
 1570  00002188          	.text
 1571  00002188          	.global _etext
 1572  00002188          	_etext:
 1573  00002188          	.align 3
 1574  00002188          	.data
 1575  000030be          	.global _edata
 1576  000030be          	_edata:
