 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 206
    4                      ; Text size: 4628
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c68616e	
   85  0000302c  646c655f	
   85  00003030  746f5f70	
   85  00003034  6167655f	
   85  00003038  6d617070	
   85  0000303c  65645f73	
   85  00003040  656d6170	
   85  00003044  686f7265	
   85  00003048  3e0a00  	
   86  0000304b          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  5300    	.ascii "S\000"
   89  0000304e          	.align 2
   90  00003050          	LC3_LF0:
   91  00003050  4572726f	.ascii "Error Opening sulfur_two mailbox.\n\000"
   91  00003054  72204f70	
   91  00003058  656e696e	
   91  0000305c  67207375	
   91  00003060  6c667572	
   91  00003064  5f74776f	
   91  00003068  206d6169	
   91  0000306c  6c626f78	
   91  00003070  2e0a00  	
   92  00003073          	.align 2
   93  00003074          	LC4_LF0:
   94  00003074  25732052	.ascii "%s Recieved!\n\000"
   94  00003078  65636965	
   94  0000307c  76656421	
   94  00003080  0a00    	
   95  00003082          	.align 2
   96  00003084          	LC5_LF0:
   97  00003084  53202b20	.ascii "S + S Created\n\000"
   97  00003088  53204372	
   97  0000308c  65617465	
   97  00003090  640a00  	
   98  00003093          	.align 2
   99  00003094          	LC6_LF0:
  100  00003094  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  100  00003098  73656d61	
  100  0000309c  70686f72	
  100  000030a0  6520735f	
  100  000030a4  70726f63	
  100  000030a8  735f636f	
  100  000030ac  6d706c65	
  100  000030b0  74656420	
  100  000030b4  28256429	
  100  000030b8  20696e20	
  100  000030bc  00      	
  101  000030bd          	.align 2
  102  000030c0          	LC7_LF0:
  103  000030c0  2c206578	.ascii ", exiting...\n\000"
  103  000030c4  6974696e	
  103  000030c8  672e2e2e	
  103  000030cc  0a00    	
  104  000030ce          	.text
  105  000010d4          	.align 2
  106  000010d4          	.proc _main
  107  000010d4          	.global _main
  108  000010d4          	_main:
  109                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  110  000010d4  afbefffc	sw	-4(r29),r30; push fp
  111  000010d8  001df020	add	r30,r0,r29; fp = sp
  112  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  113  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  114  000010e4  8fc20000	lw	r2,(r30)
  115  000010e8  8fc50004	lw	r5,4(r30)
  116  000010ec  0c00111c	jal	___main
  117  000010f0  54000000	nop; not filled.
  118  000010f4  64410004	snei	r1,r2,#4
  119  000010f8  1020004c	beqz	r1,L14_LF0
  120  000010fc  54000000	nop; not filled.
  121  00001100  23bdfff8	addi	r29,r29,#-8
  122  00001104  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
  123  00001108  24e73000	addui	r7,r7,(LC0_LF0)&0xffff
  124  0000110c  afa70000	sw	(r29),r7
  125  00001110  0c000248	jal	_Printf
  126  00001114  54000000	nop; not filled.
  127  00001118  8ca70000	lw	r7,(r5)
  128  0000111c  afa70000	sw	(r29),r7
  129  00001120  0c000238	jal	_Printf
  130  00001124  54000000	nop; not filled.
  131  00001128  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  132  0000112c  24e73008	addui	r7,r7,(LC1_LF0)&0xffff
  133  00001130  afa70000	sw	(r29),r7
  134  00001134  0c000224	jal	_Printf
  135  00001138  54000000	nop; not filled.
  136  0000113c  0c000324	jal	_Exit
  137  00001140  54000000	nop; not filled.
  138  00001144  23bd0008	addi	r29,r29,#8
  139  00001148          	L14_LF0:
  140  00001148  3c010000	lhi	r1,((LC2_LF0)>>16)&0xffff
  141  0000114c  2421304c	addui	r1,r1,(LC2_LF0)&0xffff
  142  00001150  a3c1ffe8	sb	-24(r30),r1
  143  00001154  23bdfff0	addi	r29,r29,#-16
  144  00001158  8ca70004	lw	r7,4(r5)
  145  0000115c  afa70000	sw	(r29),r7
  146  00001160  20070000	addi	r7,r0,#0
  147  00001164  afa70004	sw	4(r29),r7
  148  00001168  2007000a	addi	r7,r0,#10
  149  0000116c  afa70008	sw	8(r29),r7
  150  00001170  0c000b9c	jal	_dstrtol
  151  00001174  54000000	nop; not filled.
  152  00001178  00013020	add	r6,r0,r1
  153  0000117c  8ca70008	lw	r7,8(r5)
  154  00001180  afa70000	sw	(r29),r7
  155  00001184  20070000	addi	r7,r0,#0
  156  00001188  afa70004	sw	4(r29),r7
  157  0000118c  2007000a	addi	r7,r0,#10
  158  00001190  afa70008	sw	8(r29),r7
  159  00001194  0c000b78	jal	_dstrtol
  160  00001198  54000000	nop; not filled.
  161  0000119c  00011820	add	r3,r0,r1
  162  000011a0  8ca7000c	lw	r7,12(r5)
  163  000011a4  afa70000	sw	(r29),r7
  164  000011a8  20070000	addi	r7,r0,#0
  165  000011ac  afa70004	sw	4(r29),r7
  166  000011b0  2007000a	addi	r7,r0,#10
  167  000011b4  afa70008	sw	8(r29),r7
  168  000011b8  0c000b54	jal	_dstrtol
  169  000011bc  54000000	nop; not filled.
  170  000011c0  00012020	add	r4,r0,r1
  171  000011c4  afa30000	sw	(r29),r3
  172  000011c8  0c000250	jal	_mbox_open
  173  000011cc  54000000	nop; not filled.
  174  000011d0  23bd0010	addi	r29,r29,#16
  175  000011d4  64210000	snei	r1,r1,#0
  176  000011d8  14200028	bnez	r1,L15_LF0
  177  000011dc  54000000	nop; not filled.
  178  000011e0  23bdfff8	addi	r29,r29,#-8
  179  000011e4  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  180  000011e8  24e73050	addui	r7,r7,(LC3_LF0)&0xffff
  181  000011ec  afa70000	sw	(r29),r7
  182  000011f0  0c000168	jal	_Printf
  183  000011f4  54000000	nop; not filled.
  184  000011f8  0c000268	jal	_Exit
  185  000011fc  54000000	nop; not filled.
  186  00001200  23bd0008	addi	r29,r29,#8
  187  00001204          	L15_LF0:
  188  00001204  23bdfff0	addi	r29,r29,#-16
  189  00001208  afa30000	sw	(r29),r3
  190  0000120c  20070003	addi	r7,r0,#3
  191  00001210  afa70004	sw	4(r29),r7
  192  00001214  23c2fff0	addi	r2,r30,#-16
  193  00001218  afa20008	sw	8(r29),r2
  194  0000121c  0c000220	jal	_mbox_recv
  195  00001220  54000000	nop; not filled.
  196  00001224  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  197  00001228  24e73074	addui	r7,r7,(LC4_LF0)&0xffff
  198  0000122c  afa70000	sw	(r29),r7
  199  00001230  afa20004	sw	4(r29),r2
  200  00001234  0c000124	jal	_Printf
  201  00001238  54000000	nop; not filled.
  202  0000123c  afa30000	sw	(r29),r3
  203  00001240  0c0001e4	jal	_mbox_close
  204  00001244  54000000	nop; not filled.
  205  00001248  afa40000	sw	(r29),r4
  206  0000124c  0c0001cc	jal	_mbox_open
  207  00001250  54000000	nop; not filled.
  208  00001254  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  209  00001258  24e73084	addui	r7,r7,(LC5_LF0)&0xffff
  210  0000125c  afa70000	sw	(r29),r7
  211  00001260  0c0000f8	jal	_Printf
  212  00001264  54000000	nop; not filled.
  213  00001268  afa40000	sw	(r29),r4
  214  0000126c  20070001	addi	r7,r0,#1
  215  00001270  afa70004	sw	4(r29),r7
  216  00001274  23c2ffe8	addi	r2,r30,#-24
  217  00001278  afa20008	sw	8(r29),r2
  218  0000127c  0c0001b4	jal	_mbox_send
  219  00001280  54000000	nop; not filled.
  220  00001284  afa40000	sw	(r29),r4
  221  00001288  afa70004	sw	4(r29),r7
  222  0000128c  afa20008	sw	8(r29),r2
  223  00001290  0c0001a0	jal	_mbox_send
  224  00001294  54000000	nop; not filled.
  225  00001298  afa40000	sw	(r29),r4
  226  0000129c  0c000188	jal	_mbox_close
  227  000012a0  54000000	nop; not filled.
  228  000012a4  afa60000	sw	(r29),r6
  229  000012a8  0c000104	jal	_sem_signal
  230  000012ac  54000000	nop; not filled.
  231  000012b0  23bd0010	addi	r29,r29,#16
  232  000012b4  64210001	snei	r1,r1,#1
  233  000012b8  10200050	beqz	r1,L16_LF0
  234  000012bc  54000000	nop; not filled.
  235  000012c0  23bdfff8	addi	r29,r29,#-8
  236  000012c4  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  237  000012c8  24e73094	addui	r7,r7,(LC6_LF0)&0xffff
  238  000012cc  afa70000	sw	(r29),r7
  239  000012d0  afa60004	sw	4(r29),r6
  240  000012d4  0c000084	jal	_Printf
  241  000012d8  54000000	nop; not filled.
  242  000012dc  8ca50000	lw	r5,(r5)
  243  000012e0  afa50000	sw	(r29),r5
  244  000012e4  0c000074	jal	_Printf
  245  000012e8  54000000	nop; not filled.
  246  000012ec  3c070000	lhi	r7,((LC7_LF0)>>16)&0xffff
  247  000012f0  24e730c0	addui	r7,r7,(LC7_LF0)&0xffff
  248  000012f4  afa70000	sw	(r29),r7
  249  000012f8  0c000060	jal	_Printf
  250  000012fc  54000000	nop; not filled.
  251  00001300  0c000160	jal	_Exit
  252  00001304  54000000	nop; not filled.
  253  00001308  23bd0008	addi	r29,r29,#8
  254  0000130c          	L16_LF0:
  255  0000130c  0c000ef0	jal	_exit
  256  00001310  54000000	nop
  257  00001314          	.endproc _main
  258                      ;;;
  259                      ;;; Stub functions for DLX traps.
  260                      ;;;
  261                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  262                      ;;;
  263                      ;;; The traps such as Open and Close
  264                      ;;; (note the capital letters) are for use by user programs.  The traps
  265                      ;;; with names such as open and close (lower case) are for use by the OS.
  266                      ;;;
  269  00001314          	.align 2
  271                      ;;; The following are the traps to be used by user-level programs
  272                      ;;;
  274  00001314          	.align 2
  275  00001314          	.proc _Open
  276  00001314          	.global _Open
  277  00001314          	_Open:
  278                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  279                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  280                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  281  00001314  44000213	trap	#0x213
  282  00001318  4be00000	jr	r31
  283  0000131c  54000000	nop
  284  00001320          	.endproc _Open
  286  00001320          	.proc _Close
  287  00001320          	.global _Close
  288  00001320          	_Close:
  289  00001320  44000214	trap	#0x214
  290  00001324  4be00000	jr	r31
  291  00001328  54000000	nop
  292  0000132c          	.endproc _Close
  294  0000132c          	.proc _Read
  295  0000132c          	.global _Read
  296  0000132c          	_Read:
  297  0000132c  44000210	trap	#0x210
  298  00001330  4be00000	jr	r31
  299  00001334  54000000	nop
  300  00001338          	.endproc _Read
  302  00001338          	.proc _Write
  303  00001338          	.global _Write
  304  00001338          	_Write:
  305  00001338  44000211	trap	#0x211
  306  0000133c  4be00000	jr	r31
  307  00001340  54000000	nop
  308  00001344          	.endproc _Write
  310  00001344          	.proc _Lseek
  311  00001344          	.global _Lseek
  312  00001344          	_Lseek:
  313  00001344  44000212	trap	#0x212
  314  00001348  4be00000	jr	r31
  315  0000134c  54000000	nop
  316  00001350          	.endproc _Lseek
  318  00001350          	.proc _Putchar
  319  00001350          	.global _Putchar
  320  00001350          	_Putchar:
  321  00001350  44000280	trap	#0x280
  322  00001354  4be00000	jr	r31
  323  00001358  54000000	nop
  324  0000135c          	.endproc _Putchar
  326  0000135c          	.proc _Printf
  327  0000135c          	.global _Printf
  328  0000135c          	_Printf:
  329  0000135c  44000201	trap	#0x201
  330  00001360  4be00000	jr	r31
  331  00001364  54000000	nop
  332  00001368          	.endproc _Printf
  334  00001368          	.proc _getpid
  335  00001368          	.global _getpid
  336  00001368          	_getpid:
  337  00001368  44000431	trap	#0x431
  338  0000136c  4be00000	jr	r31
  339  00001370  54000000	nop
  340  00001374          	.endproc _getpid
  342  00001374          	.proc _process_create
  343  00001374          	.global _process_create
  344  00001374          	_process_create:
  345  00001374  44000432	trap	#0x432
  346  00001378  4be00000	jr	r31
  347  0000137c  54000000	nop
  348  00001380          	.endproc _process_create
  350  00001380          	.proc _shmget
  351  00001380          	.global _shmget
  352  00001380          	_shmget:
  353  00001380  44000440	trap	#0x440
  354  00001384  4be00000	jr	r31
  355  00001388  54000000	nop
  356  0000138c          	.endproc _shmget
  358  0000138c          	.proc _shmat
  359  0000138c          	.global _shmat
  360  0000138c          	_shmat:
  361  0000138c  44000441	trap	#0x441
  362  00001390  4be00000	jr	r31
  363  00001394  54000000	nop
  364  00001398          	.endproc _shmat
  366  00001398          	.proc _sem_create
  367  00001398          	.global _sem_create
  368  00001398          	_sem_create:
  369  00001398  44000450	trap	#0x450
  370  0000139c  4be00000	jr	r31
  371  000013a0  54000000	nop
  372  000013a4          	.endproc _sem_create
  374  000013a4          	.proc _sem_wait
  375  000013a4          	.global _sem_wait
  376  000013a4          	_sem_wait:
  377  000013a4  44000451	trap	#0x451
  378  000013a8  4be00000	jr	r31
  379  000013ac  54000000	nop
  380  000013b0          	.endproc _sem_wait
  382  000013b0          	.proc _sem_signal
  383  000013b0          	.global _sem_signal
  384  000013b0          	_sem_signal:
  385  000013b0  44000452	trap	#0x452
  386  000013b4  4be00000	jr	r31
  387  000013b8  54000000	nop
  388  000013bc          	.endproc _sem_signal
  390  000013bc          	.proc _lock_create
  391  000013bc          	.global _lock_create
  392  000013bc          	_lock_create:
  393  000013bc  44000453	trap	#0x453
  394  000013c0  4be00000	jr	r31
  395  000013c4  54000000	nop
  396  000013c8          	.endproc _lock_create
  398  000013c8          	.proc _lock_acquire
  399  000013c8          	.global _lock_acquire
  400  000013c8          	_lock_acquire:
  401  000013c8  44000454	trap	#0x454
  402  000013cc  4be00000	jr	r31
  403  000013d0  54000000	nop
  404  000013d4          	.endproc _lock_acquire
  406  000013d4          	.proc _lock_release
  407  000013d4          	.global _lock_release
  408  000013d4          	_lock_release:
  409  000013d4  44000455	trap	#0x455
  410  000013d8  4be00000	jr	r31
  411  000013dc  54000000	nop
  412  000013e0          	.endproc _lock_release
  414  000013e0          	.proc _cond_create
  415  000013e0          	.global _cond_create
  416  000013e0          	_cond_create:
  417  000013e0  44000456	trap	#0x456
  418  000013e4  4be00000	jr	r31
  419  000013e8  54000000	nop
  420  000013ec          	.endproc _cond_create
  422  000013ec          	.proc _cond_wait
  423  000013ec          	.global _cond_wait
  424  000013ec          	_cond_wait:
  425  000013ec  44000457	trap	#0x457
  426  000013f0  4be00000	jr	r31
  427  000013f4  54000000	nop
  428  000013f8          	.endproc _cond_wait
  430  000013f8          	.proc _cond_signal
  431  000013f8          	.global _cond_signal
  432  000013f8          	_cond_signal:
  433  000013f8  44000458	trap	#0x458
  434  000013fc  4be00000	jr	r31
  435  00001400  54000000	nop
  436  00001404          	.endproc _cond_signal
  438  00001404          	.proc _cond_broadcast
  439  00001404          	.global _cond_broadcast
  440  00001404          	_cond_broadcast:
  441  00001404  44000459	trap	#0x459
  442  00001408  4be00000	jr	r31
  443  0000140c  54000000	nop
  444  00001410          	.endproc _cond_broadcast
  446  00001410          	.proc _mbox_create
  447  00001410          	.global _mbox_create
  448  00001410          	_mbox_create:
  449  00001410  44000460	trap	#0x460
  450  00001414  4be00000	jr	r31
  451  00001418  54000000	nop
  452  0000141c          	.endproc _mbox_create
  454  0000141c          	.proc _mbox_open
  455  0000141c          	.global _mbox_open
  456  0000141c          	_mbox_open:
  457  0000141c  44000461	trap	#0x461
  458  00001420  4be00000	jr	r31
  459  00001424  54000000	nop
  460  00001428          	.endproc _mbox_open
  462  00001428          	.proc _mbox_close
  463  00001428          	.global _mbox_close
  464  00001428          	_mbox_close:
  465  00001428  44000462	trap	#0x462
  466  0000142c  4be00000	jr	r31
  467  00001430  54000000	nop
  468  00001434          	.endproc _mbox_close
  470  00001434          	.proc _mbox_send
  471  00001434          	.global _mbox_send
  472  00001434          	_mbox_send:
  473  00001434  44000463	trap	#0x463
  474  00001438  4be00000	jr	r31
  475  0000143c  54000000	nop
  476  00001440          	.endproc _mbox_send
  478  00001440          	.proc _mbox_recv
  479  00001440          	.global _mbox_recv
  480  00001440          	_mbox_recv:
  481  00001440  44000464	trap	#0x464
  482  00001444  4be00000	jr	r31
  483  00001448  54000000	nop
  484  0000144c          	.endproc _mbox_recv
  486  0000144c          	.proc _sleep
  487  0000144c          	.global _sleep
  488  0000144c          	_sleep:
  489  0000144c  44000465	trap	#0x465
  490  00001450  4be00000	jr	r31
  491  00001454  54000000	nop
  492  00001458          	.endproc _sleep
  494  00001458          	.proc _yield
  495  00001458          	.global _yield
  496  00001458          	_yield:
  497  00001458  44000466	trap	#0x466
  498  0000145c  4be00000	jr	r31
  499  00001460  54000000	nop
  500  00001464          	.endproc _yield
  503  00001464          	.proc _Exit
  504  00001464          	.global _Exit
  505  00001464          	_Exit:
  506  00001464  44000500	trap	#0x500
  507  00001468  4be00000	jr	r31
  508  0000146c  54000000	nop
  509  00001470          	.endproc _Exit
  510                      ; Compiled by GCC
  512  00001470          	.align 2
  513  00001470          	.proc _isspace
  514  00001470          	.global _isspace
  515  00001470          	_isspace:
  516                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  517  00001470  afbefffc	sw	-4(r29),r30; push fp
  518  00001474  001df020	add	r30,r0,r29; fp = sp
  519  00001478  afbffff8	sw	-8(r29),r31; push ret addr
  520  0000147c  2fbd0018	subui	r29,r29,#24; alloc local storage
  521  00001480  afa20000	sw	0(r29),r2
  522  00001484  afa30004	sw	4(r29),r3
  523  00001488  afa40008	sw	8(r29),r4
  524  0000148c  83c20003	lb	r2,3(r30)
  525  00001490  20010000	addi	r1,r0,#0
  526  00001494  304300ff	andi	r3,r2,#0x00ff
  527  00001498  60640020	seqi	r4,r3,#32
  528  0000149c  1480002c	bnez	r4,L3_LF2
  529  000014a0  54000000	nop; delay slot nop
  530  000014a4  304300ff	andi	r3,r2,#0x00ff
  531  000014a8  60640009	seqi	r4,r3,#9
  532  000014ac  1480001c	bnez	r4,L3_LF2
  533  000014b0  54000000	nop; delay slot nop
  534  000014b4  304300ff	andi	r3,r2,#0x00ff
  535  000014b8  6064000a	seqi	r4,r3,#10
  536  000014bc  1480000c	bnez	r4,L3_LF2
  537  000014c0  54000000	nop; delay slot nop
  538  000014c4  08000008	j	L2_LF2
  539  000014c8  54000000	nop; delay slot nop
  540  000014cc          	L3_LF2:
  541  000014cc  20010001	addi	r1,r0,#1
  542  000014d0          	L2_LF2:
  543  000014d0  08000004	j	L1_LF2
  544  000014d4  54000000	nop; delay slot nop
  545  000014d8          	L1_LF2:
  546  000014d8  8fa20000	lw	r2,0(r29)
  547  000014dc  8fa30004	lw	r3,4(r29)
  548  000014e0  8fa40008	lw	r4,8(r29)
  549  000014e4  8fdffff8	lw	r31,-8(r30)
  550  000014e8  001ee820	add	r29,r0,r30
  551  000014ec  8fdefffc	lw	r30,-4(r30)
  552  000014f0  4be00000	jr	r31
  553  000014f4  54000000	nop
  554  000014f8          	.endproc _isspace
  555  000014f8          	.align 2
  556  000014f8          	.proc _isxdigit
  557  000014f8          	.global _isxdigit
  558  000014f8          	_isxdigit:
  559                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  560  000014f8  afbefffc	sw	-4(r29),r30; push fp
  561  000014fc  001df020	add	r30,r0,r29; fp = sp
  562  00001500  afbffff8	sw	-8(r29),r31; push ret addr
  563  00001504  2fbd0018	subui	r29,r29,#24; alloc local storage
  564  00001508  afa20000	sw	0(r29),r2
  565  0000150c  afa30004	sw	4(r29),r3
  566  00001510  afa40008	sw	8(r29),r4
  567  00001514  83c20003	lb	r2,3(r30)
  568  00001518  20010000	addi	r1,r0,#0
  569  0000151c  304300ff	andi	r3,r2,#0x00ff
  570  00001520  6c64002f	sgtui	r4,r3,#47
  571  00001524  1080001c	beqz	r4,L7_LF2
  572  00001528  54000000	nop; delay slot nop
  573  0000152c  304300ff	andi	r3,r2,#0x00ff
  574  00001530  70640039	sleui	r4,r3,#57
  575  00001534  1480005c	bnez	r4,L6_LF2
  576  00001538  54000000	nop; delay slot nop
  577  0000153c  08000004	j	L7_LF2
  578  00001540  54000000	nop; delay slot nop
  579  00001544          	L7_LF2:
  580  00001544  304300ff	andi	r3,r2,#0x00ff
  581  00001548  6c640060	sgtui	r4,r3,#96
  582  0000154c  1080001c	beqz	r4,L8_LF2
  583  00001550  54000000	nop; delay slot nop
  584  00001554  304300ff	andi	r3,r2,#0x00ff
  585  00001558  70640066	sleui	r4,r3,#102
  586  0000155c  14800034	bnez	r4,L6_LF2
  587  00001560  54000000	nop; delay slot nop
  588  00001564  08000004	j	L8_LF2
  589  00001568  54000000	nop; delay slot nop
  590  0000156c          	L8_LF2:
  591  0000156c  304300ff	andi	r3,r2,#0x00ff
  592  00001570  6c640040	sgtui	r4,r3,#64
  593  00001574  10800020	beqz	r4,L5_LF2
  594  00001578  54000000	nop; delay slot nop
  595  0000157c  304300ff	andi	r3,r2,#0x00ff
  596  00001580  70640041	sleui	r4,r3,#65
  597  00001584  1480000c	bnez	r4,L6_LF2
  598  00001588  54000000	nop; delay slot nop
  599  0000158c  08000008	j	L5_LF2
  600  00001590  54000000	nop; delay slot nop
  601  00001594          	L6_LF2:
  602  00001594  20010001	addi	r1,r0,#1
  603  00001598          	L5_LF2:
  604  00001598  08000004	j	L4_LF2
  605  0000159c  54000000	nop; delay slot nop
  606  000015a0          	L4_LF2:
  607  000015a0  8fa20000	lw	r2,0(r29)
  608  000015a4  8fa30004	lw	r3,4(r29)
  609  000015a8  8fa40008	lw	r4,8(r29)
  610  000015ac  8fdffff8	lw	r31,-8(r30)
  611  000015b0  001ee820	add	r29,r0,r30
  612  000015b4  8fdefffc	lw	r30,-4(r30)
  613  000015b8  4be00000	jr	r31
  614  000015bc  54000000	nop
  615  000015c0          	.endproc _isxdigit
  616  000015c0          	.align 2
  617  000015c0          	.proc _dstrcpy
  618  000015c0          	.global _dstrcpy
  619  000015c0          	_dstrcpy:
  620                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  621  000015c0  afbefffc	sw	-4(r29),r30; push fp
  622  000015c4  001df020	add	r30,r0,r29; fp = sp
  623  000015c8  afbffff8	sw	-8(r29),r31; push ret addr
  624  000015cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  625  000015d0  afa20000	sw	0(r29),r2
  626  000015d4  afa30004	sw	4(r29),r3
  627  000015d8  8fc10000	lw	r1,(r30)
  628  000015dc  afc1fff4	sw	-12(r30),r1
  629  000015e0          	L10_LF2:
  630  000015e0  8fc10000	lw	r1,(r30)
  631  000015e4  20220001	addi	r2,r1,#1
  632  000015e8  afc20000	sw	(r30),r2
  633  000015ec  8fc20004	lw	r2,4(r30)
  634  000015f0  20430001	addi	r3,r2,#1
  635  000015f4  afc30004	sw	4(r30),r3
  636  000015f8  80420000	lb	r2,(r2)
  637  000015fc  a0220000	sb	(r1),r2
  638  00001600  a3c2fff3	sb	-13(r30),r2
  639  00001604          	L12_LF2:
  640  00001604  93c1fff3	lbu	r1,-13(r30)
  641  00001608  64220000	snei	r2,r1,#0
  642  0000160c  1440000c	bnez	r2,L13_LF2
  643  00001610  54000000	nop; delay slot nop
  644  00001614  0800000c	j	L11_LF2
  645  00001618  54000000	nop; delay slot nop
  646  0000161c          	L13_LF2:
  647  0000161c  0bffffc0	j	L10_LF2
  648  00001620  54000000	nop; delay slot nop
  649  00001624          	L11_LF2:
  650  00001624  8fc1fff4	lw	r1,-12(r30)
  651  00001628  08000004	j	L9_LF2
  652  0000162c  54000000	nop; delay slot nop
  653  00001630          	L9_LF2:
  654  00001630  8fa20000	lw	r2,0(r29)
  655  00001634  8fa30004	lw	r3,4(r29)
  656  00001638  8fdffff8	lw	r31,-8(r30)
  657  0000163c  001ee820	add	r29,r0,r30
  658  00001640  8fdefffc	lw	r30,-4(r30)
  659  00001644  4be00000	jr	r31
  660  00001648  54000000	nop
  661  0000164c          	.endproc _dstrcpy
  662  0000164c          	.align 2
  663  0000164c          	.proc _dstrncpy
  664  0000164c          	.global _dstrncpy
  665  0000164c          	_dstrncpy:
  666                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  667  0000164c  afbefffc	sw	-4(r29),r30; push fp
  668  00001650  001df020	add	r30,r0,r29; fp = sp
  669  00001654  afbffff8	sw	-8(r29),r31; push ret addr
  670  00001658  2fbd0018	subui	r29,r29,#24; alloc local storage
  671  0000165c  afa20000	sw	0(r29),r2
  672  00001660  afa30004	sw	4(r29),r3
  673  00001664  8fc10000	lw	r1,(r30)
  674  00001668  afc1fff4	sw	-12(r30),r1
  675  0000166c          	L15_LF2:
  676  0000166c  8fc10008	lw	r1,8(r30)
  677  00001670  2022ffff	addi	r2,r1,#-1
  678  00001674  afc20008	sw	8(r30),r2
  679  00001678  70210000	slei	r1,r1,#0
  680  0000167c  1020000c	beqz	r1,L18_LF2
  681  00001680  54000000	nop; delay slot nop
  682  00001684  08000048	j	L16_LF2
  683  00001688  54000000	nop; delay slot nop
  684  0000168c          	L18_LF2:
  685  0000168c  8fc10000	lw	r1,(r30)
  686  00001690  20220001	addi	r2,r1,#1
  687  00001694  afc20000	sw	(r30),r2
  688  00001698  8fc20004	lw	r2,4(r30)
  689  0000169c  20430001	addi	r3,r2,#1
  690  000016a0  afc30004	sw	4(r30),r3
  691  000016a4  80420000	lb	r2,(r2)
  692  000016a8  a0220000	sb	(r1),r2
  693  000016ac  a3c2fff3	sb	-13(r30),r2
  694  000016b0          	L17_LF2:
  695  000016b0  93c1fff3	lbu	r1,-13(r30)
  696  000016b4  64220000	snei	r2,r1,#0
  697  000016b8  1440000c	bnez	r2,L19_LF2
  698  000016bc  54000000	nop; delay slot nop
  699  000016c0  0800000c	j	L16_LF2
  700  000016c4  54000000	nop; delay slot nop
  701  000016c8          	L19_LF2:
  702  000016c8  0bffffa0	j	L15_LF2
  703  000016cc  54000000	nop; delay slot nop
  704  000016d0          	L16_LF2:
  705  000016d0  8fc1fff4	lw	r1,-12(r30)
  706  000016d4  08000004	j	L14_LF2
  707  000016d8  54000000	nop; delay slot nop
  708  000016dc          	L14_LF2:
  709  000016dc  8fa20000	lw	r2,0(r29)
  710  000016e0  8fa30004	lw	r3,4(r29)
  711  000016e4  8fdffff8	lw	r31,-8(r30)
  712  000016e8  001ee820	add	r29,r0,r30
  713  000016ec  8fdefffc	lw	r30,-4(r30)
  714  000016f0  4be00000	jr	r31
  715  000016f4  54000000	nop
  716  000016f8          	.endproc _dstrncpy
  717  000016f8          	.align 2
  718  000016f8          	.proc _dstrcat
  719  000016f8          	.global _dstrcat
  720  000016f8          	_dstrcat:
  721                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  722  000016f8  afbefffc	sw	-4(r29),r30; push fp
  723  000016fc  001df020	add	r30,r0,r29; fp = sp
  724  00001700  afbffff8	sw	-8(r29),r31; push ret addr
  725  00001704  2fbd0018	subui	r29,r29,#24; alloc local storage
  726  00001708  afa20000	sw	0(r29),r2
  727  0000170c  8fc10000	lw	r1,(r30)
  728  00001710  afc1fff4	sw	-12(r30),r1
  729  00001714          	L21_LF2:
  730  00001714  8fc10000	lw	r1,(r30)
  731  00001718  90220000	lbu	r2,(r1)
  732  0000171c  64410000	snei	r1,r2,#0
  733  00001720  1420000c	bnez	r1,L23_LF2
  734  00001724  54000000	nop; delay slot nop
  735  00001728  0800001c	j	L22_LF2
  736  0000172c  54000000	nop; delay slot nop
  737  00001730          	L23_LF2:
  738  00001730  8fc20000	lw	r2,(r30)
  739  00001734  20410001	addi	r1,r2,#1
  740  00001738  00011020	add	r2,r0,r1
  741  0000173c  afc20000	sw	(r30),r2
  742  00001740  0bffffd0	j	L21_LF2
  743  00001744  54000000	nop; delay slot nop
  744  00001748          	L22_LF2:
  745  00001748  23bdfff8	addi	r29,r29,#-8
  746  0000174c  001d0820	add	r1,r0,r29
  747  00001750  8fc20000	lw	r2,(r30)
  748  00001754  ac220000	sw	(r1),r2
  749  00001758  8fc20004	lw	r2,4(r30)
  750  0000175c  ac220004	sw	4(r1),r2
  751  00001760  0ffffe5c	jal	_dstrcpy
  752  00001764  54000000	nop; delay slot nop
  753  00001768  23bd0008	addi	r29,r29,#8
  754  0000176c  8fc1fff4	lw	r1,-12(r30)
  755  00001770  08000004	j	L20_LF2
  756  00001774  54000000	nop; delay slot nop
  757  00001778          	L20_LF2:
  758  00001778  8fa20000	lw	r2,0(r29)
  759  0000177c  8fdffff8	lw	r31,-8(r30)
  760  00001780  001ee820	add	r29,r0,r30
  761  00001784  8fdefffc	lw	r30,-4(r30)
  762  00001788  4be00000	jr	r31
  763  0000178c  54000000	nop
  764  00001790          	.endproc _dstrcat
  765  00001790          	.align 2
  766  00001790          	.proc _dstrncmp
  767  00001790          	.global _dstrncmp
  768  00001790          	_dstrncmp:
  769                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  770  00001790  afbefffc	sw	-4(r29),r30; push fp
  771  00001794  001df020	add	r30,r0,r29; fp = sp
  772  00001798  afbffff8	sw	-8(r29),r31; push ret addr
  773  0000179c  2fbd0018	subui	r29,r29,#24; alloc local storage
  774  000017a0  afa20000	sw	0(r29),r2
  775  000017a4  afa30004	sw	4(r29),r3
  776  000017a8  54000000	nop
  777  000017ac  20010000	addi	r1,r0,#0
  778  000017b0  afc1fff4	sw	-12(r30),r1
  779  000017b4          	L25_LF2:
  780  000017b4  8fc1fff4	lw	r1,-12(r30)
  781  000017b8  8fc20008	lw	r2,8(r30)
  782  000017bc  0022082a	slt	r1,r1,r2
  783  000017c0  1420000c	bnez	r1,L28_LF2
  784  000017c4  54000000	nop; delay slot nop
  785  000017c8  08000088	j	L26_LF2
  786  000017cc  54000000	nop; delay slot nop
  787  000017d0          	L28_LF2:
  788  000017d0  8fc10004	lw	r1,4(r30)
  789  000017d4  90220000	lbu	r2,(r1)
  790  000017d8  64410000	snei	r1,r2,#0
  791  000017dc  14200018	bnez	r1,L29_LF2
  792  000017e0  54000000	nop; delay slot nop
  793  000017e4  20010000	addi	r1,r0,#0
  794  000017e8  080000d8	j	L24_LF2
  795  000017ec  54000000	nop; delay slot nop
  796  000017f0  08000028	j	L30_LF2
  797  000017f4  54000000	nop; delay slot nop
  798  000017f8          	L29_LF2:
  799  000017f8  8fc10000	lw	r1,(r30)
  800  000017fc  8fc20004	lw	r2,4(r30)
  801  00001800  90210000	lbu	r1,(r1)
  802  00001804  90420000	lbu	r2,(r2)
  803  00001808  00220829	sne	r1,r1,r2
  804  0000180c  1020000c	beqz	r1,L30_LF2
  805  00001810  54000000	nop; delay slot nop
  806  00001814  0800003c	j	L26_LF2
  807  00001818  54000000	nop; delay slot nop
  808  0000181c          	L31_LF2:
  809  0000181c          	L30_LF2:
  810  0000181c  8fc20000	lw	r2,(r30)
  811  00001820  20410001	addi	r1,r2,#1
  812  00001824  00011020	add	r2,r0,r1
  813  00001828  afc20000	sw	(r30),r2
  814  0000182c  8fc20004	lw	r2,4(r30)
  815  00001830  20410001	addi	r1,r2,#1
  816  00001834  00011020	add	r2,r0,r1
  817  00001838  afc20004	sw	4(r30),r2
  818  0000183c          	L27_LF2:
  819  0000183c  8fc2fff4	lw	r2,-12(r30)
  820  00001840  20410001	addi	r1,r2,#1
  821  00001844  00011020	add	r2,r0,r1
  822  00001848  afc2fff4	sw	-12(r30),r2
  823  0000184c  0bffff64	j	L25_LF2
  824  00001850  54000000	nop; delay slot nop
  825  00001854          	L26_LF2:
  826  00001854  8fc1fff4	lw	r1,-12(r30)
  827  00001858  8fc20008	lw	r2,8(r30)
  828  0000185c  00220828	seq	r1,r1,r2
  829  00001860  10200018	beqz	r1,L32_LF2
  830  00001864  54000000	nop; delay slot nop
  831  00001868  20010000	addi	r1,r0,#0
  832  0000186c  08000054	j	L24_LF2
  833  00001870  54000000	nop; delay slot nop
  834  00001874  0800004c	j	L33_LF2
  835  00001878  54000000	nop; delay slot nop
  836  0000187c          	L32_LF2:
  837  0000187c  8fc20000	lw	r2,(r30)
  838  00001880  90410000	lbu	r1,(r2)
  839  00001884  8fc20004	lw	r2,4(r30)
  840  00001888  90430000	lbu	r3,(r2)
  841  0000188c  00230822	sub	r1,r1,r3
  842  00001890  74220000	sgei	r2,r1,#0
  843  00001894  10400020	beqz	r2,L34_LF2
  844  00001898  54000000	nop; delay slot nop
  845  0000189c  8fc10000	lw	r1,(r30)
  846  000018a0  8fc20004	lw	r2,4(r30)
  847  000018a4  90210000	lbu	r1,(r1)
  848  000018a8  90420000	lbu	r2,(r2)
  849  000018ac  00220829	sne	r1,r1,r2
  850  000018b0  08000008	j	L35_LF2
  851  000018b4  54000000	nop; delay slot nop
  852  000018b8          	L34_LF2:
  853  000018b8  2001ffff	addi	r1,r0,#-1
  854  000018bc          	L35_LF2:
  855  000018bc  08000004	j	L24_LF2
  856  000018c0  54000000	nop; delay slot nop
  857  000018c4          	L33_LF2:
  858  000018c4          	L24_LF2:
  859  000018c4  8fa20000	lw	r2,0(r29)
  860  000018c8  8fa30004	lw	r3,4(r29)
  861  000018cc  8fdffff8	lw	r31,-8(r30)
  862  000018d0  001ee820	add	r29,r0,r30
  863  000018d4  8fdefffc	lw	r30,-4(r30)
  864  000018d8  4be00000	jr	r31
  865  000018dc  54000000	nop
  866  000018e0          	.endproc _dstrncmp
  867  000018e0          	.align 2
  868  000018e0          	.proc _dstrlen
  869  000018e0          	.global _dstrlen
  870  000018e0          	_dstrlen:
  871                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  872  000018e0  afbefffc	sw	-4(r29),r30; push fp
  873  000018e4  001df020	add	r30,r0,r29; fp = sp
  874  000018e8  afbffff8	sw	-8(r29),r31; push ret addr
  875  000018ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  876  000018f0  afa20000	sw	0(r29),r2
  877  000018f4  20010000	addi	r1,r0,#0
  878  000018f8  afc1fff4	sw	-12(r30),r1
  879  000018fc          	L37_LF2:
  880  000018fc  8fc10000	lw	r1,(r30)
  881  00001900  20220001	addi	r2,r1,#1
  882  00001904  afc20000	sw	(r30),r2
  883  00001908  90210000	lbu	r1,(r1)
  884  0000190c  64220000	snei	r2,r1,#0
  885  00001910  1440000c	bnez	r2,L39_LF2
  886  00001914  54000000	nop; delay slot nop
  887  00001918  0800001c	j	L38_LF2
  888  0000191c  54000000	nop; delay slot nop
  889  00001920          	L39_LF2:
  890  00001920  8fc2fff4	lw	r2,-12(r30)
  891  00001924  20410001	addi	r1,r2,#1
  892  00001928  00011020	add	r2,r0,r1
  893  0000192c  afc2fff4	sw	-12(r30),r2
  894  00001930  0bffffc8	j	L37_LF2
  895  00001934  54000000	nop; delay slot nop
  896  00001938          	L38_LF2:
  897  00001938  8fc1fff4	lw	r1,-12(r30)
  898  0000193c  08000004	j	L36_LF2
  899  00001940  54000000	nop; delay slot nop
  900  00001944          	L36_LF2:
  901  00001944  8fa20000	lw	r2,0(r29)
  902  00001948  8fdffff8	lw	r31,-8(r30)
  903  0000194c  001ee820	add	r29,r0,r30
  904  00001950  8fdefffc	lw	r30,-4(r30)
  905  00001954  4be00000	jr	r31
  906  00001958  54000000	nop
  907  0000195c          	.endproc _dstrlen
  908  0000195c          	.align 2
  909  0000195c          	.proc _dstrstr
  910  0000195c          	.global _dstrstr
  911  0000195c          	_dstrstr:
  912                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  913  0000195c  afbefffc	sw	-4(r29),r30; push fp
  914  00001960  001df020	add	r30,r0,r29; fp = sp
  915  00001964  afbffff8	sw	-8(r29),r31; push ret addr
  916  00001968  2fbd0018	subui	r29,r29,#24; alloc local storage
  917  0000196c  afa20000	sw	0(r29),r2
  918  00001970  23bdfff8	addi	r29,r29,#-8
  919  00001974  001d0820	add	r1,r0,r29
  920  00001978  8fc20004	lw	r2,4(r30)
  921  0000197c  ac220000	sw	(r1),r2
  922  00001980  0fffff5c	jal	_dstrlen
  923  00001984  54000000	nop; delay slot nop
  924  00001988  23bd0008	addi	r29,r29,#8
  925  0000198c  afc1fff4	sw	-12(r30),r1
  926  00001990          	L41_LF2:
  927  00001990  8fc10000	lw	r1,(r30)
  928  00001994  90220000	lbu	r2,(r1)
  929  00001998  64410000	snei	r1,r2,#0
  930  0000199c  1420000c	bnez	r1,L43_LF2
  931  000019a0  54000000	nop; delay slot nop
  932  000019a4  08000060	j	L42_LF2
  933  000019a8  54000000	nop; delay slot nop
  934  000019ac          	L43_LF2:
  935  000019ac  23bdfff0	addi	r29,r29,#-16
  936  000019b0  001d0820	add	r1,r0,r29
  937  000019b4  8fc20000	lw	r2,(r30)
  938  000019b8  ac220000	sw	(r1),r2
  939  000019bc  8fc20004	lw	r2,4(r30)
  940  000019c0  ac220004	sw	4(r1),r2
  941  000019c4  8fc2fff4	lw	r2,-12(r30)
  942  000019c8  ac220008	sw	8(r1),r2
  943  000019cc  0ffffdc0	jal	_dstrncmp
  944  000019d0  54000000	nop; delay slot nop
  945  000019d4  23bd0010	addi	r29,r29,#16
  946  000019d8  64220000	snei	r2,r1,#0
  947  000019dc  14400010	bnez	r2,L44_LF2
  948  000019e0  54000000	nop; delay slot nop
  949  000019e4  8fc10000	lw	r1,(r30)
  950  000019e8  08000028	j	L40_LF2
  951  000019ec  54000000	nop; delay slot nop
  952  000019f0          	L44_LF2:
  953  000019f0  8fc20000	lw	r2,(r30)
  954  000019f4  20410001	addi	r1,r2,#1
  955  000019f8  00011020	add	r2,r0,r1
  956  000019fc  afc20000	sw	(r30),r2
  957  00001a00  0bffff8c	j	L41_LF2
  958  00001a04  54000000	nop; delay slot nop
  959  00001a08          	L42_LF2:
  960  00001a08  20010000	addi	r1,r0,#0
  961  00001a0c  08000004	j	L40_LF2
  962  00001a10  54000000	nop; delay slot nop
  963  00001a14          	L40_LF2:
  964  00001a14  8fa20000	lw	r2,0(r29)
  965  00001a18  8fdffff8	lw	r31,-8(r30)
  966  00001a1c  001ee820	add	r29,r0,r30
  967  00001a20  8fdefffc	lw	r30,-4(r30)
  968  00001a24  4be00000	jr	r31
  969  00001a28  54000000	nop
  970  00001a2c          	.endproc _dstrstr
  971  00001a2c          	.align 2
  972  00001a2c          	.proc _dmindex
  973  00001a2c          	.global _dmindex
  974  00001a2c          	_dmindex:
  975                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  976  00001a2c  afbefffc	sw	-4(r29),r30; push fp
  977  00001a30  001df020	add	r30,r0,r29; fp = sp
  978  00001a34  afbffff8	sw	-8(r29),r31; push ret addr
  979  00001a38  2fbd0018	subui	r29,r29,#24; alloc local storage
  980  00001a3c  afa20000	sw	0(r29),r2
  981  00001a40  54000000	nop
  982  00001a44          	L46_LF2:
  983  00001a44  8fc10000	lw	r1,(r30)
  984  00001a48  90220000	lbu	r2,(r1)
  985  00001a4c  64410000	snei	r1,r2,#0
  986  00001a50  1420000c	bnez	r1,L48_LF2
  987  00001a54  54000000	nop; delay slot nop
  988  00001a58  08000070	j	L47_LF2
  989  00001a5c  54000000	nop; delay slot nop
  990  00001a60          	L48_LF2:
  991  00001a60  8fc10004	lw	r1,4(r30)
  992  00001a64  afc1fff4	sw	-12(r30),r1
  993  00001a68          	L49_LF2:
  994  00001a68  8fc1fff4	lw	r1,-12(r30)
  995  00001a6c  90220000	lbu	r2,(r1)
  996  00001a70  64410000	snei	r1,r2,#0
  997  00001a74  1420000c	bnez	r1,L52_LF2
  998  00001a78  54000000	nop; delay slot nop
  999  00001a7c  08000044	j	L50_LF2
 1000  00001a80  54000000	nop; delay slot nop
 1001  00001a84          	L52_LF2:
 1002  00001a84  8fc10000	lw	r1,(r30)
 1003  00001a88  8fc2fff4	lw	r2,-12(r30)
 1004  00001a8c  90210000	lbu	r1,(r1)
 1005  00001a90  90420000	lbu	r2,(r2)
 1006  00001a94  00220828	seq	r1,r1,r2
 1007  00001a98  10200010	beqz	r1,L51_LF2
 1008  00001a9c  54000000	nop; delay slot nop
 1009  00001aa0  8fc10000	lw	r1,(r30)
 1010  00001aa4  08000030	j	L45_LF2
 1011  00001aa8  54000000	nop; delay slot nop
 1012  00001aac          	L53_LF2:
 1013  00001aac          	L51_LF2:
 1014  00001aac  8fc2fff4	lw	r2,-12(r30)
 1015  00001ab0  20410001	addi	r1,r2,#1
 1016  00001ab4  00011020	add	r2,r0,r1
 1017  00001ab8  afc2fff4	sw	-12(r30),r2
 1018  00001abc  0bffffa8	j	L49_LF2
 1019  00001ac0  54000000	nop; delay slot nop
 1020  00001ac4          	L50_LF2:
 1021  00001ac4  0bffff7c	j	L46_LF2
 1022  00001ac8  54000000	nop; delay slot nop
 1023  00001acc          	L47_LF2:
 1024  00001acc  20010000	addi	r1,r0,#0
 1025  00001ad0  08000004	j	L45_LF2
 1026  00001ad4  54000000	nop; delay slot nop
 1027  00001ad8          	L45_LF2:
 1028  00001ad8  8fa20000	lw	r2,0(r29)
 1029  00001adc  8fdffff8	lw	r31,-8(r30)
 1030  00001ae0  001ee820	add	r29,r0,r30
 1031  00001ae4  8fdefffc	lw	r30,-4(r30)
 1032  00001ae8  4be00000	jr	r31
 1033  00001aec  54000000	nop
 1034  00001af0          	.endproc _dmindex
 1035  00001af0          	.align 2
 1036  00001af0          	.proc _dindex
 1037  00001af0          	.global _dindex
 1038  00001af0          	_dindex:
 1039                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1040  00001af0  afbefffc	sw	-4(r29),r30; push fp
 1041  00001af4  001df020	add	r30,r0,r29; fp = sp
 1042  00001af8  afbffff8	sw	-8(r29),r31; push ret addr
 1043  00001afc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1044  00001b00  afa20000	sw	0(r29),r2
 1045  00001b04  54000000	nop
 1046  00001b08          	L55_LF2:
 1047  00001b08  8fc10000	lw	r1,(r30)
 1048  00001b0c  90220000	lbu	r2,(r1)
 1049  00001b10  64410000	snei	r1,r2,#0
 1050  00001b14  1420000c	bnez	r1,L57_LF2
 1051  00001b18  54000000	nop; delay slot nop
 1052  00001b1c  08000040	j	L56_LF2
 1053  00001b20  54000000	nop; delay slot nop
 1054  00001b24          	L57_LF2:
 1055  00001b24  8fc10000	lw	r1,(r30)
 1056  00001b28  90220000	lbu	r2,(r1)
 1057  00001b2c  8fc10004	lw	r1,4(r30)
 1058  00001b30  00411028	seq	r2,r2,r1
 1059  00001b34  10400010	beqz	r2,L58_LF2
 1060  00001b38  54000000	nop; delay slot nop
 1061  00001b3c  8fc10000	lw	r1,(r30)
 1062  00001b40  08000028	j	L54_LF2
 1063  00001b44  54000000	nop; delay slot nop
 1064  00001b48          	L58_LF2:
 1065  00001b48  8fc20000	lw	r2,(r30)
 1066  00001b4c  20410001	addi	r1,r2,#1
 1067  00001b50  00011020	add	r2,r0,r1
 1068  00001b54  afc20000	sw	(r30),r2
 1069  00001b58  0bffffac	j	L55_LF2
 1070  00001b5c  54000000	nop; delay slot nop
 1071  00001b60          	L56_LF2:
 1072  00001b60  20010000	addi	r1,r0,#0
 1073  00001b64  08000004	j	L54_LF2
 1074  00001b68  54000000	nop; delay slot nop
 1075  00001b6c          	L54_LF2:
 1076  00001b6c  8fa20000	lw	r2,0(r29)
 1077  00001b70  8fdffff8	lw	r31,-8(r30)
 1078  00001b74  001ee820	add	r29,r0,r30
 1079  00001b78  8fdefffc	lw	r30,-4(r30)
 1080  00001b7c  4be00000	jr	r31
 1081  00001b80  54000000	nop
 1082  00001b84          	.endproc _dindex
 1083  00001b84          	.align 2
 1084  00001b84          	.proc _ditoa
 1085  00001b84          	.global _ditoa
 1086  00001b84          	_ditoa:
 1087                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1088  00001b84  afbefffc	sw	-4(r29),r30; push fp
 1089  00001b88  001df020	add	r30,r0,r29; fp = sp
 1090  00001b8c  afbffff8	sw	-8(r29),r31; push ret addr
 1091  00001b90  2fbd0018	subui	r29,r29,#24; alloc local storage
 1092  00001b94  afa20000	sw	0(r29),r2
 1093  00001b98  afa30004	sw	4(r29),r3
 1094  00001b9c  8fc10000	lw	r1,(r30)
 1095  00001ba0  68220000	slti	r2,r1,#0
 1096  00001ba4  1040002c	beqz	r2,L60_LF2
 1097  00001ba8  54000000	nop; delay slot nop
 1098  00001bac  8fc10004	lw	r1,4(r30)
 1099  00001bb0  20220001	addi	r2,r1,#1
 1100  00001bb4  afc20004	sw	4(r30),r2
 1101  00001bb8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1102  00001bbc  a0220000	sb	(r1),r2
 1103  00001bc0  8fc10000	lw	r1,(r30)
 1104  00001bc4  00011022	sub	r2,r0,r1
 1105  00001bc8  afc20000	sw	(r30),r2
 1106  00001bcc  08000118	j	L61_LF2
 1107  00001bd0  54000000	nop; delay slot nop
 1108  00001bd4          	L60_LF2:
 1109  00001bd4  8fc10000	lw	r1,(r30)
 1110  00001bd8  64220000	snei	r2,r1,#0
 1111  00001bdc  14400020	bnez	r2,L62_LF2
 1112  00001be0  54000000	nop; delay slot nop
 1113  00001be4  8fc10004	lw	r1,4(r30)
 1114  00001be8  20220001	addi	r2,r1,#1
 1115  00001bec  afc20004	sw	4(r30),r2
 1116  00001bf0  20020030	addi	r2,r0,(#0x30)&0xff
 1117  00001bf4  a0220000	sb	(r1),r2
 1118  00001bf8  080000ec	j	L61_LF2
 1119  00001bfc  54000000	nop; delay slot nop
 1120  00001c00          	L62_LF2:
 1121  00001c00  20010001	addi	r1,r0,#1
 1122  00001c04  afc1fff4	sw	-12(r30),r1
 1123  00001c08          	L64_LF2:
 1124  00001c08  8fc1fff4	lw	r1,-12(r30)
 1125  00001c0c  8fc20000	lw	r2,(r30)
 1126  00001c10  0022082c	sle	r1,r1,r2
 1127  00001c14  1420000c	bnez	r1,L66_LF2
 1128  00001c18  54000000	nop; delay slot nop
 1129  00001c1c  08000024	j	L65_LF2
 1130  00001c20  54000000	nop; delay slot nop
 1131  00001c24          	L67_LF2:
 1132  00001c24          	L66_LF2:
 1133  00001c24  8fc1fff4	lw	r1,-12(r30)
 1134  00001c28  00011820	add	r3,r0,r1
 1135  00001c2c  50620002	slli	r2,r3,#0x2
 1136  00001c30  00411020	add	r2,r2,r1
 1137  00001c34  50410001	slli	r1,r2,#0x1
 1138  00001c38  afc1fff4	sw	-12(r30),r1
 1139  00001c3c  0bffffc8	j	L64_LF2
 1140  00001c40  54000000	nop; delay slot nop
 1141  00001c44          	L65_LF2:
 1142  00001c44  54000000	nop
 1143  00001c48          	L68_LF2:
 1144  00001c48  8fc1fff4	lw	r1,-12(r30)
 1145  00001c4c  2002000a	addi	r2,r0,#10
 1146  00001c50  00200035	movi2fp	f0,r1
 1147  00001c54  00400835	movi2fp	f1,r2
 1148  00001c58  0401000f	div	f0,f0,f1
 1149  00001c5c  00000834	movfp2i	r1,f0
 1150  00001c60  afc1fff4	sw	-12(r30),r1
 1151  00001c64  8fc10004	lw	r1,4(r30)
 1152  00001c68  20220001	addi	r2,r1,#1
 1153  00001c6c  afc20004	sw	4(r30),r2
 1154  00001c70  8fc20000	lw	r2,(r30)
 1155  00001c74  8fc3fff4	lw	r3,-12(r30)
 1156  00001c78  00400035	movi2fp	f0,r2
 1157  00001c7c  00600835	movi2fp	f1,r3
 1158  00001c80  0401000f	div	f0,f0,f1
 1159  00001c84  00001034	movfp2i	r2,f0
 1160  00001c88  00021820	add	r3,r0,r2
 1161  00001c8c  20620030	addi	r2,r3,#48
 1162  00001c90  a0220000	sb	(r1),r2
 1163  00001c94  8fc10000	lw	r1,(r30)
 1164  00001c98  8fc3fff4	lw	r3,-12(r30)
 1165  00001c9c  00200035	movi2fp	f0,r1
 1166  00001ca0  00600835	movi2fp	f1,r3
 1167  00001ca4  0401000f	div	f0,f0,f1
 1168  00001ca8  00001034	movfp2i	r2,f0
 1169  00001cac  8fc3fff4	lw	r3,-12(r30)
 1170  00001cb0  00400035	movi2fp	f0,r2
 1171  00001cb4  00600835	movi2fp	f1,r3
 1172  00001cb8  0401000e	mult	f0,f0,f1
 1173  00001cbc  00001034	movfp2i	r2,f0
 1174  00001cc0  00220822	sub	r1,r1,r2
 1175  00001cc4  afc10000	sw	(r30),r1
 1176  00001cc8          	L70_LF2:
 1177  00001cc8  8fc1fff4	lw	r1,-12(r30)
 1178  00001ccc  6c220001	sgti	r2,r1,#1
 1179  00001cd0  1440000c	bnez	r2,L71_LF2
 1180  00001cd4  54000000	nop; delay slot nop
 1181  00001cd8  0800000c	j	L61_LF2
 1182  00001cdc  54000000	nop; delay slot nop
 1183  00001ce0          	L71_LF2:
 1184  00001ce0  0bffff64	j	L68_LF2
 1185  00001ce4  54000000	nop; delay slot nop
 1186  00001ce8          	L69_LF2:
 1187  00001ce8          	L63_LF2:
 1188  00001ce8          	L61_LF2:
 1189  00001ce8  8fc10004	lw	r1,4(r30)
 1190  00001cec  20020000	addi	r2,r0,(#0x0)&0xff
 1191  00001cf0  a0220000	sb	(r1),r2
 1192  00001cf4          	L59_LF2:
 1193  00001cf4  8fa20000	lw	r2,0(r29)
 1194  00001cf8  8fa30004	lw	r3,4(r29)
 1195  00001cfc  8fdffff8	lw	r31,-8(r30)
 1196  00001d00  001ee820	add	r29,r0,r30
 1197  00001d04  8fdefffc	lw	r30,-4(r30)
 1198  00001d08  4be00000	jr	r31
 1199  00001d0c  54000000	nop
 1200  00001d10          	.endproc _ditoa
 1201  00001d10          	.align 2
 1202  00001d10          	.proc _dstrtol
 1203  00001d10          	.global _dstrtol
 1204  00001d10          	_dstrtol:
 1205                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1206  00001d10  afbefffc	sw	-4(r29),r30; push fp
 1207  00001d14  001df020	add	r30,r0,r29; fp = sp
 1208  00001d18  afbffff8	sw	-8(r29),r31; push ret addr
 1209  00001d1c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1210  00001d20  afa20000	sw	0(r29),r2
 1211  00001d24  20010000	addi	r1,r0,#0
 1212  00001d28  afc1fff4	sw	-12(r30),r1
 1213  00001d2c          	L73_LF2:
 1214  00001d2c  8fc10000	lw	r1,(r30)
 1215  00001d30  90220000	lbu	r2,(r1)
 1216  00001d34  60410020	seqi	r1,r2,#32
 1217  00001d38  14200034	bnez	r1,L75_LF2
 1218  00001d3c  54000000	nop; delay slot nop
 1219  00001d40  8fc10000	lw	r1,(r30)
 1220  00001d44  90220000	lbu	r2,(r1)
 1221  00001d48  60410009	seqi	r1,r2,#9
 1222  00001d4c  14200020	bnez	r1,L75_LF2
 1223  00001d50  54000000	nop; delay slot nop
 1224  00001d54  8fc10000	lw	r1,(r30)
 1225  00001d58  90220000	lbu	r2,(r1)
 1226  00001d5c  6041000a	seqi	r1,r2,#10
 1227  00001d60  1420000c	bnez	r1,L75_LF2
 1228  00001d64  54000000	nop; delay slot nop
 1229  00001d68  0800001c	j	L74_LF2
 1230  00001d6c  54000000	nop; delay slot nop
 1231  00001d70          	L75_LF2:
 1232  00001d70  8fc20000	lw	r2,(r30)
 1233  00001d74  20410001	addi	r1,r2,#1
 1234  00001d78  00011020	add	r2,r0,r1
 1235  00001d7c  afc20000	sw	(r30),r2
 1236  00001d80  0bffffa8	j	L73_LF2
 1237  00001d84  54000000	nop; delay slot nop
 1238  00001d88          	L74_LF2:
 1239  00001d88  8fc10004	lw	r1,4(r30)
 1240  00001d8c  64220000	snei	r2,r1,#0
 1241  00001d90  10400010	beqz	r2,L76_LF2
 1242  00001d94  54000000	nop; delay slot nop
 1243  00001d98  8fc10004	lw	r1,4(r30)
 1244  00001d9c  8fc20000	lw	r2,(r30)
 1245  00001da0  ac220000	sw	(r1),r2
 1246  00001da4          	L76_LF2:
 1247  00001da4  8fc10000	lw	r1,(r30)
 1248  00001da8  90220000	lbu	r2,(r1)
 1249  00001dac  64410000	snei	r1,r2,#0
 1250  00001db0  14200010	bnez	r1,L77_LF2
 1251  00001db4  54000000	nop; delay slot nop
 1252  00001db8  8fc1fff4	lw	r1,-12(r30)
 1253  00001dbc  08000294	j	L72_LF2
 1254  00001dc0  54000000	nop; delay slot nop
 1255  00001dc4          	L77_LF2:
 1256  00001dc4  8fc10000	lw	r1,(r30)
 1257  00001dc8  90220000	lbu	r2,(r1)
 1258  00001dcc  6041002d	seqi	r1,r2,#45
 1259  00001dd0  10200024	beqz	r1,L78_LF2
 1260  00001dd4  54000000	nop; delay slot nop
 1261  00001dd8  2001ffff	addi	r1,r0,#-1
 1262  00001ddc  afc1ffec	sw	-20(r30),r1
 1263  00001de0  8fc20000	lw	r2,(r30)
 1264  00001de4  20410001	addi	r1,r2,#1
 1265  00001de8  00011020	add	r2,r0,r1
 1266  00001dec  afc20000	sw	(r30),r2
 1267  00001df0  0800000c	j	L79_LF2
 1268  00001df4  54000000	nop; delay slot nop
 1269  00001df8          	L78_LF2:
 1270  00001df8  20010001	addi	r1,r0,#1
 1271  00001dfc  afc1ffec	sw	-20(r30),r1
 1272  00001e00          	L79_LF2:
 1273  00001e00  8fc10008	lw	r1,8(r30)
 1274  00001e04  64220000	snei	r2,r1,#0
 1275  00001e08  14400090	bnez	r2,L80_LF2
 1276  00001e0c  54000000	nop; delay slot nop
 1277  00001e10  8fc10000	lw	r1,(r30)
 1278  00001e14  90220000	lbu	r2,(r1)
 1279  00001e18  60410030	seqi	r1,r2,#48
 1280  00001e1c  10200074	beqz	r1,L81_LF2
 1281  00001e20  54000000	nop; delay slot nop
 1282  00001e24  8fc20000	lw	r2,(r30)
 1283  00001e28  20410001	addi	r1,r2,#1
 1284  00001e2c  00011020	add	r2,r0,r1
 1285  00001e30  afc20000	sw	(r30),r2
 1286  00001e34  8fc10000	lw	r1,(r30)
 1287  00001e38  90220000	lbu	r2,(r1)
 1288  00001e3c  60410078	seqi	r1,r2,#120
 1289  00001e40  14200020	bnez	r1,L83_LF2
 1290  00001e44  54000000	nop; delay slot nop
 1291  00001e48  8fc10000	lw	r1,(r30)
 1292  00001e4c  90220000	lbu	r2,(r1)
 1293  00001e50  60410058	seqi	r1,r2,#88
 1294  00001e54  1420000c	bnez	r1,L83_LF2
 1295  00001e58  54000000	nop; delay slot nop
 1296  00001e5c  08000024	j	L82_LF2
 1297  00001e60  54000000	nop; delay slot nop
 1298  00001e64          	L83_LF2:
 1299  00001e64  20010010	addi	r1,r0,#16
 1300  00001e68  afc10008	sw	8(r30),r1
 1301  00001e6c  8fc20000	lw	r2,(r30)
 1302  00001e70  20410001	addi	r1,r2,#1
 1303  00001e74  00011020	add	r2,r0,r1
 1304  00001e78  afc20000	sw	(r30),r2
 1305  00001e7c  0800000c	j	L84_LF2
 1306  00001e80  54000000	nop; delay slot nop
 1307  00001e84          	L82_LF2:
 1308  00001e84  20010008	addi	r1,r0,#8
 1309  00001e88  afc10008	sw	8(r30),r1
 1310  00001e8c          	L84_LF2:
 1311  00001e8c  0800000c	j	L80_LF2
 1312  00001e90  54000000	nop; delay slot nop
 1313  00001e94          	L81_LF2:
 1314  00001e94  2001000a	addi	r1,r0,#10
 1315  00001e98  afc10008	sw	8(r30),r1
 1316  00001e9c          	L85_LF2:
 1317  00001e9c          	L80_LF2:
 1318  00001e9c  8fc10008	lw	r1,8(r30)
 1319  00001ea0  70220000	slei	r2,r1,#0
 1320  00001ea4  1440001c	bnez	r2,L87_LF2
 1321  00001ea8  54000000	nop; delay slot nop
 1322  00001eac  8fc10008	lw	r1,8(r30)
 1323  00001eb0  6c220010	sgti	r2,r1,#16
 1324  00001eb4  1440000c	bnez	r2,L87_LF2
 1325  00001eb8  54000000	nop; delay slot nop
 1326  00001ebc  08000010	j	L86_LF2
 1327  00001ec0  54000000	nop; delay slot nop
 1328  00001ec4          	L87_LF2:
 1329  00001ec4  8fc1fff4	lw	r1,-12(r30)
 1330  00001ec8  08000188	j	L72_LF2
 1331  00001ecc  54000000	nop; delay slot nop
 1332  00001ed0          	L86_LF2:
 1333  00001ed0  54000000	nop
 1334  00001ed4          	L88_LF2:
 1335  00001ed4  8fc10000	lw	r1,(r30)
 1336  00001ed8  90220000	lbu	r2,(r1)
 1337  00001edc  6c41002f	sgtui	r1,r2,#47
 1338  00001ee0  10200030	beqz	r1,L91_LF2
 1339  00001ee4  54000000	nop; delay slot nop
 1340  00001ee8  8fc10000	lw	r1,(r30)
 1341  00001eec  90220000	lbu	r2,(r1)
 1342  00001ef0  70410039	sleui	r1,r2,#57
 1343  00001ef4  1020001c	beqz	r1,L91_LF2
 1344  00001ef8  54000000	nop; delay slot nop
 1345  00001efc  8fc10000	lw	r1,(r30)
 1346  00001f00  90220000	lbu	r2,(r1)
 1347  00001f04  2041ffd0	addi	r1,r2,#-48
 1348  00001f08  afc1fff0	sw	-16(r30),r1
 1349  00001f0c  0800008c	j	L92_LF2
 1350  00001f10  54000000	nop; delay slot nop
 1351  00001f14          	L91_LF2:
 1352  00001f14  8fc10000	lw	r1,(r30)
 1353  00001f18  90220000	lbu	r2,(r1)
 1354  00001f1c  6c410060	sgtui	r1,r2,#96
 1355  00001f20  10200030	beqz	r1,L93_LF2
 1356  00001f24  54000000	nop; delay slot nop
 1357  00001f28  8fc10000	lw	r1,(r30)
 1358  00001f2c  90220000	lbu	r2,(r1)
 1359  00001f30  7041007a	sleui	r1,r2,#122
 1360  00001f34  1020001c	beqz	r1,L93_LF2
 1361  00001f38  54000000	nop; delay slot nop
 1362  00001f3c  8fc10000	lw	r1,(r30)
 1363  00001f40  90220000	lbu	r2,(r1)
 1364  00001f44  2041ffa9	addi	r1,r2,#-87
 1365  00001f48  afc1fff0	sw	-16(r30),r1
 1366  00001f4c  0800004c	j	L92_LF2
 1367  00001f50  54000000	nop; delay slot nop
 1368  00001f54          	L93_LF2:
 1369  00001f54  8fc10000	lw	r1,(r30)
 1370  00001f58  90220000	lbu	r2,(r1)
 1371  00001f5c  6c410040	sgtui	r1,r2,#64
 1372  00001f60  10200030	beqz	r1,L95_LF2
 1373  00001f64  54000000	nop; delay slot nop
 1374  00001f68  8fc10000	lw	r1,(r30)
 1375  00001f6c  90220000	lbu	r2,(r1)
 1376  00001f70  7041005a	sleui	r1,r2,#90
 1377  00001f74  1020001c	beqz	r1,L95_LF2
 1378  00001f78  54000000	nop; delay slot nop
 1379  00001f7c  8fc10000	lw	r1,(r30)
 1380  00001f80  90220000	lbu	r2,(r1)
 1381  00001f84  2041ffc9	addi	r1,r2,#-55
 1382  00001f88  afc1fff0	sw	-16(r30),r1
 1383  00001f8c  0800000c	j	L92_LF2
 1384  00001f90  54000000	nop; delay slot nop
 1385  00001f94          	L95_LF2:
 1386  00001f94  200103e8	addi	r1,r0,#1000
 1387  00001f98  afc1fff0	sw	-16(r30),r1
 1388  00001f9c          	L96_LF2:
 1389  00001f9c          	L94_LF2:
 1390  00001f9c          	L92_LF2:
 1391  00001f9c  8fc1fff0	lw	r1,-16(r30)
 1392  00001fa0  8fc20008	lw	r2,8(r30)
 1393  00001fa4  0022082a	slt	r1,r1,r2
 1394  00001fa8  10200040	beqz	r1,L90_LF2
 1395  00001fac  54000000	nop; delay slot nop
 1396  00001fb0  8fc1fff4	lw	r1,-12(r30)
 1397  00001fb4  8fc20008	lw	r2,8(r30)
 1398  00001fb8  00200035	movi2fp	f0,r1
 1399  00001fbc  00400835	movi2fp	f1,r2
 1400  00001fc0  0401000e	mult	f0,f0,f1
 1401  00001fc4  00000834	movfp2i	r1,f0
 1402  00001fc8  afc1fff4	sw	-12(r30),r1
 1403  00001fcc  8fc1fff4	lw	r1,-12(r30)
 1404  00001fd0  8fc2fff0	lw	r2,-16(r30)
 1405  00001fd4  00220820	add	r1,r1,r2
 1406  00001fd8  afc1fff4	sw	-12(r30),r1
 1407  00001fdc  8fc20000	lw	r2,(r30)
 1408  00001fe0  20410001	addi	r1,r2,#1
 1409  00001fe4  00011020	add	r2,r0,r1
 1410  00001fe8  afc20000	sw	(r30),r2
 1411  00001fec          	L97_LF2:
 1412  00001fec          	L90_LF2:
 1413  00001fec  8fc1fff0	lw	r1,-16(r30)
 1414  00001ff0  8fc20008	lw	r2,8(r30)
 1415  00001ff4  0022082a	slt	r1,r1,r2
 1416  00001ff8  1420000c	bnez	r1,L98_LF2
 1417  00001ffc  54000000	nop; delay slot nop
 1418  00002000  0800000c	j	L89_LF2
 1419  00002004  54000000	nop; delay slot nop
 1420  00002008          	L98_LF2:
 1421  00002008  0bfffec8	j	L88_LF2
 1422  0000200c  54000000	nop; delay slot nop
 1423  00002010          	L89_LF2:
 1424  00002010  8fc10004	lw	r1,4(r30)
 1425  00002014  64220000	snei	r2,r1,#0
 1426  00002018  10400010	beqz	r2,L99_LF2
 1427  0000201c  54000000	nop; delay slot nop
 1428  00002020  8fc10004	lw	r1,4(r30)
 1429  00002024  8fc20000	lw	r2,(r30)
 1430  00002028  ac220000	sw	(r1),r2
 1431  0000202c          	L99_LF2:
 1432  0000202c  8fc1fff4	lw	r1,-12(r30)
 1433  00002030  8fc2ffec	lw	r2,-20(r30)
 1434  00002034  00200035	movi2fp	f0,r1
 1435  00002038  00400835	movi2fp	f1,r2
 1436  0000203c  0401000e	mult	f0,f0,f1
 1437  00002040  00000834	movfp2i	r1,f0
 1438  00002044  afc1fff4	sw	-12(r30),r1
 1439  00002048  8fc1fff4	lw	r1,-12(r30)
 1440  0000204c  08000004	j	L72_LF2
 1441  00002050  54000000	nop; delay slot nop
 1442  00002054          	L72_LF2:
 1443  00002054  8fa20000	lw	r2,0(r29)
 1444  00002058  8fdffff8	lw	r31,-8(r30)
 1445  0000205c  001ee820	add	r29,r0,r30
 1446  00002060  8fdefffc	lw	r30,-4(r30)
 1447  00002064  4be00000	jr	r31
 1448  00002068  54000000	nop
 1449  0000206c          	.endproc _dstrtol
 1450  0000206c          	.align 2
 1451  0000206c          	.proc _bcopy
 1452  0000206c          	.global _bcopy
 1453  0000206c          	_bcopy:
 1454                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1455  0000206c  afbefffc	sw	-4(r29),r30; push fp
 1456  00002070  001df020	add	r30,r0,r29; fp = sp
 1457  00002074  afbffff8	sw	-8(r29),r31; push ret addr
 1458  00002078  2fbd0010	subui	r29,r29,#16; alloc local storage
 1459  0000207c  afa20000	sw	0(r29),r2
 1460  00002080  afa30004	sw	4(r29),r3
 1461  00002084  54000000	nop
 1462  00002088          	L101_LF2:
 1463  00002088  8fc10008	lw	r1,8(r30)
 1464  0000208c  2022ffff	addi	r2,r1,#-1
 1465  00002090  afc20008	sw	8(r30),r2
 1466  00002094  6c210000	sgti	r1,r1,#0
 1467  00002098  1420000c	bnez	r1,L103_LF2
 1468  0000209c  54000000	nop; delay slot nop
 1469  000020a0  0800002c	j	L102_LF2
 1470  000020a4  54000000	nop; delay slot nop
 1471  000020a8          	L103_LF2:
 1472  000020a8  8fc10004	lw	r1,4(r30)
 1473  000020ac  20220001	addi	r2,r1,#1
 1474  000020b0  afc20004	sw	4(r30),r2
 1475  000020b4  8fc20000	lw	r2,(r30)
 1476  000020b8  20430001	addi	r3,r2,#1
 1477  000020bc  afc30000	sw	(r30),r3
 1478  000020c0  80420000	lb	r2,(r2)
 1479  000020c4  a0220000	sb	(r1),r2
 1480  000020c8  0bffffbc	j	L101_LF2
 1481  000020cc  54000000	nop; delay slot nop
 1482  000020d0          	L102_LF2:
 1483  000020d0          	L100_LF2:
 1484  000020d0  8fa20000	lw	r2,0(r29)
 1485  000020d4  8fa30004	lw	r3,4(r29)
 1486  000020d8  8fdffff8	lw	r31,-8(r30)
 1487  000020dc  001ee820	add	r29,r0,r30
 1488  000020e0  8fdefffc	lw	r30,-4(r30)
 1489  000020e4  4be00000	jr	r31
 1490  000020e8  54000000	nop
 1491  000020ec          	.endproc _bcopy
 1492  000020ec          	.align 2
 1493  000020ec          	.proc _bzero
 1494  000020ec          	.global _bzero
 1495  000020ec          	_bzero:
 1496                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1497  000020ec  afbefffc	sw	-4(r29),r30; push fp
 1498  000020f0  001df020	add	r30,r0,r29; fp = sp
 1499  000020f4  afbffff8	sw	-8(r29),r31; push ret addr
 1500  000020f8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1501  000020fc  afa20000	sw	0(r29),r2
 1502  00002100  54000000	nop
 1503  00002104          	L105_LF2:
 1504  00002104  8fc10004	lw	r1,4(r30)
 1505  00002108  2022ffff	addi	r2,r1,#-1
 1506  0000210c  afc20004	sw	4(r30),r2
 1507  00002110  6c210000	sgti	r1,r1,#0
 1508  00002114  1420000c	bnez	r1,L107_LF2
 1509  00002118  54000000	nop; delay slot nop
 1510  0000211c  08000020	j	L106_LF2
 1511  00002120  54000000	nop; delay slot nop
 1512  00002124          	L107_LF2:
 1513  00002124  8fc10000	lw	r1,(r30)
 1514  00002128  20220001	addi	r2,r1,#1
 1515  0000212c  afc20000	sw	(r30),r2
 1516  00002130  20020000	addi	r2,r0,(#0x0)&0xff
 1517  00002134  a0220000	sb	(r1),r2
 1518  00002138  0bffffc8	j	L105_LF2
 1519  0000213c  54000000	nop; delay slot nop
 1520  00002140          	L106_LF2:
 1521  00002140          	L104_LF2:
 1522  00002140  8fa20000	lw	r2,0(r29)
 1523  00002144  8fdffff8	lw	r31,-8(r30)
 1524  00002148  001ee820	add	r29,r0,r30
 1525  0000214c  8fdefffc	lw	r30,-4(r30)
 1526  00002150  4be00000	jr	r31
 1527  00002154  54000000	nop
 1528  00002158          	.endproc _bzero
 1529  00002158          	.align 2
 1530  00002158          	.proc _min
 1531  00002158          	.global _min
 1532  00002158          	_min:
 1533                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1534  00002158  afbefffc	sw	-4(r29),r30; push fp
 1535  0000215c  001df020	add	r30,r0,r29; fp = sp
 1536  00002160  afbffff8	sw	-8(r29),r31; push ret addr
 1537  00002164  2fbd0010	subui	r29,r29,#16; alloc local storage
 1538  00002168  afa20000	sw	0(r29),r2
 1539  0000216c  afa30004	sw	4(r29),r3
 1540  00002170  8fc10000	lw	r1,(r30)
 1541  00002174  8fc20004	lw	r2,4(r30)
 1542  00002178  0022182c	sle	r3,r1,r2
 1543  0000217c  14600008	bnez	r3,L109_LF2
 1544  00002180  54000000	nop; delay slot nop
 1545  00002184  8fc10004	lw	r1,4(r30)
 1546  00002188          	L109_LF2:
 1547  00002188  08000004	j	L108_LF2
 1548  0000218c  54000000	nop; delay slot nop
 1549  00002190          	L108_LF2:
 1550  00002190  8fa20000	lw	r2,0(r29)
 1551  00002194  8fa30004	lw	r3,4(r29)
 1552  00002198  8fdffff8	lw	r31,-8(r30)
 1553  0000219c  001ee820	add	r29,r0,r30
 1554  000021a0  8fdefffc	lw	r30,-4(r30)
 1555  000021a4  4be00000	jr	r31
 1556  000021a8  54000000	nop
 1557  000021ac          	.endproc _min
 1558  000021ac          	.align 2
 1559  000021ac          	.proc _max
 1560  000021ac          	.global _max
 1561  000021ac          	_max:
 1562                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1563  000021ac  afbefffc	sw	-4(r29),r30; push fp
 1564  000021b0  001df020	add	r30,r0,r29; fp = sp
 1565  000021b4  afbffff8	sw	-8(r29),r31; push ret addr
 1566  000021b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1567  000021bc  afa20000	sw	0(r29),r2
 1568  000021c0  afa30004	sw	4(r29),r3
 1569  000021c4  8fc10000	lw	r1,(r30)
 1570  000021c8  8fc20004	lw	r2,4(r30)
 1571  000021cc  0022182d	sge	r3,r1,r2
 1572  000021d0  14600008	bnez	r3,L111_LF2
 1573  000021d4  54000000	nop; delay slot nop
 1574  000021d8  8fc10004	lw	r1,4(r30)
 1575  000021dc          	L111_LF2:
 1576  000021dc  08000004	j	L110_LF2
 1577  000021e0  54000000	nop; delay slot nop
 1578  000021e4          	L110_LF2:
 1579  000021e4  8fa20000	lw	r2,0(r29)
 1580  000021e8  8fa30004	lw	r3,4(r29)
 1581  000021ec  8fdffff8	lw	r31,-8(r30)
 1582  000021f0  001ee820	add	r29,r0,r30
 1583  000021f4  8fdefffc	lw	r30,-4(r30)
 1584  000021f8  4be00000	jr	r31
 1585  000021fc  54000000	nop
 1586  00002200          	.endproc _max
 1587                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1588                      ;;;
 1589                      ;;; Most of the traps are called in files from libtraps.
 1592  00002200          	.align 2
 1593  00002200          	.proc _exit
 1594  00002200          	.global _exit
 1595  00002200          	_exit:
 1596  00002200  44000300	trap	#0x300
 1597  00002204  4be00000	jr	r31
 1598  00002208  54000000	nop
 1599  0000220c          	.endproc _exit
 1601                      ; for the benefit of gcc.
 1602  0000220c          	.proc ___main
 1603  0000220c          	.global ___main
 1604  0000220c          	___main:
 1605  0000220c  4be00000	jr	r31
 1606  00002210  54000000	nop
 1607  00002214          	.endproc ___main
 1608  00002214          	.text
 1609  00002214          	.global _etext
 1610  00002214          	_etext:
 1611  00002214          	.align 3
 1612  00002218          	.data
 1613  000030ce          	.global _edata
 1614  000030ce          	_edata:
