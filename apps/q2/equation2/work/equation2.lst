 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 218
    4                      ; Text size: 4712
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  434f00  	.ascii "CO\000"
   83  00003003          	.align 2
   84  00003004          	LC1_LF0:
   85  00003004  32204f32	.ascii "2 O2\000"
   85  00003008  00      	
   86  00003009          	.align 2
   87  0000300c          	LC2_LF0:
   88  0000300c  55736167	.ascii "Usage: \000"
   88  00003010  653a2000	
   89  00003014          	.align 2
   90  00003014          	LC3_LF0:
   91  00003014  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   91  00003018  6e646c65	
   91  0000301c  5f746f5f	
   91  00003020  73686172	
   91  00003024  65645f6d	
   91  00003028  656d6f72	
   91  0000302c  795f7061	
   91  00003030  67653e20	
   91  00003034  3c68616e	
   91  00003038  646c655f	
   91  0000303c  746f5f70	
   91  00003040  6167655f	
   91  00003044  6d617070	
   91  00003048  65645f73	
   91  0000304c  656d6170	
   91  00003050  686f7265	
   91  00003054  3e0a00  	
   92  00003057          	.align 2
   93  00003058          	LC4_LF0:
   94  00003058  4572726f	.ascii "Error Opening sulfur_two mailbox.\n\000"
   94  0000305c  72204f70	
   94  00003060  656e696e	
   94  00003064  67207375	
   94  00003068  6c667572	
   94  0000306c  5f74776f	
   94  00003070  206d6169	
   94  00003074  6c626f78	
   94  00003078  2e0a00  	
   95  0000307b          	.align 2
   96  0000307c          	LC5_LF0:
   97  0000307c  25732052	.ascii "%s Recieved!\n\000"
   97  00003080  65636965	
   97  00003084  76656421	
   97  00003088  0a00    	
   98  0000308a          	.align 2
   99  0000308c          	LC6_LF0:
  100  0000308c  32204f32	.ascii "2 O2 + 2C2 Created\n\000"
  100  00003090  202b2032	
  100  00003094  43322043	
  100  00003098  72656174	
  100  0000309c  65640a00	
  101  000030a0          	.align 2
  102  000030a0          	LC7_LF0:
  103  000030a0  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  103  000030a4  73656d61	
  103  000030a8  70686f72	
  103  000030ac  6520735f	
  103  000030b0  70726f63	
  103  000030b4  735f636f	
  103  000030b8  6d706c65	
  103  000030bc  74656420	
  103  000030c0  28256429	
  103  000030c4  20696e20	
  103  000030c8  00      	
  104  000030c9          	.align 2
  105  000030cc          	LC8_LF0:
  106  000030cc  2c206578	.ascii ", exiting...\n\000"
  106  000030d0  6974696e	
  106  000030d4  672e2e2e	
  106  000030d8  0a00    	
  107  000030da          	.text
  108  000010d4          	.align 2
  109  000010d4          	.proc _main
  110  000010d4          	.global _main
  111  000010d4          	_main:
  112                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  113  000010d4  afbefffc	sw	-4(r29),r30; push fp
  114  000010d8  001df020	add	r30,r0,r29; fp = sp
  115  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  116  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  117  000010e4  8fc20000	lw	r2,(r30)
  118  000010e8  8fc60004	lw	r6,4(r30)
  119  000010ec  0c001170	jal	___main
  120  000010f0  54000000	nop; not filled.
  121  000010f4  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  122  000010f8  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  123  000010fc  64410004	snei	r1,r2,#4
  124  00001100  1020004c	beqz	r1,L14_LF0
  125  00001104  54000000	nop; not filled.
  126  00001108  23bdfff8	addi	r29,r29,#-8
  127  0000110c  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  128  00001110  2508300c	addui	r8,r8,(LC2_LF0)&0xffff
  129  00001114  afa80000	sw	(r29),r8
  130  00001118  0c000294	jal	_Printf
  131  0000111c  54000000	nop; not filled.
  132  00001120  8cc80000	lw	r8,(r6)
  133  00001124  afa80000	sw	(r29),r8
  134  00001128  0c000284	jal	_Printf
  135  0000112c  54000000	nop; not filled.
  136  00001130  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  137  00001134  25083014	addui	r8,r8,(LC3_LF0)&0xffff
  138  00001138  afa80000	sw	(r29),r8
  139  0000113c  0c000270	jal	_Printf
  140  00001140  54000000	nop; not filled.
  141  00001144  0c000370	jal	_Exit
  142  00001148  54000000	nop; not filled.
  143  0000114c  23bd0008	addi	r29,r29,#8
  144  00001150          	L14_LF0:
  145  00001150  23bdfff0	addi	r29,r29,#-16
  146  00001154  8cc80004	lw	r8,4(r6)
  147  00001158  afa80000	sw	(r29),r8
  148  0000115c  20080000	addi	r8,r0,#0
  149  00001160  afa80004	sw	4(r29),r8
  150  00001164  2008000a	addi	r8,r0,#10
  151  00001168  afa80008	sw	8(r29),r8
  152  0000116c  0c000bf4	jal	_dstrtol
  153  00001170  54000000	nop; not filled.
  154  00001174  00013820	add	r7,r0,r1
  155  00001178  8cc80008	lw	r8,8(r6)
  156  0000117c  afa80000	sw	(r29),r8
  157  00001180  20080000	addi	r8,r0,#0
  158  00001184  afa80004	sw	4(r29),r8
  159  00001188  2008000a	addi	r8,r0,#10
  160  0000118c  afa80008	sw	8(r29),r8
  161  00001190  0c000bd0	jal	_dstrtol
  162  00001194  54000000	nop; not filled.
  163  00001198  00011820	add	r3,r0,r1
  164  0000119c  8cc8000c	lw	r8,12(r6)
  165  000011a0  afa80000	sw	(r29),r8
  166  000011a4  20080000	addi	r8,r0,#0
  167  000011a8  afa80004	sw	4(r29),r8
  168  000011ac  2008000a	addi	r8,r0,#10
  169  000011b0  afa80008	sw	8(r29),r8
  170  000011b4  0c000bac	jal	_dstrtol
  171  000011b8  54000000	nop; not filled.
  172  000011bc  00012820	add	r5,r0,r1
  173  000011c0  afa30000	sw	(r29),r3
  174  000011c4  0c0002a8	jal	_mbox_open
  175  000011c8  54000000	nop; not filled.
  176  000011cc  23bd0010	addi	r29,r29,#16
  177  000011d0  64210000	snei	r1,r1,#0
  178  000011d4  14200028	bnez	r1,L15_LF0
  179  000011d8  54000000	nop; not filled.
  180  000011dc  23bdfff8	addi	r29,r29,#-8
  181  000011e0  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  182  000011e4  25083058	addui	r8,r8,(LC4_LF0)&0xffff
  183  000011e8  afa80000	sw	(r29),r8
  184  000011ec  0c0001c0	jal	_Printf
  185  000011f0  54000000	nop; not filled.
  186  000011f4  0c0002c0	jal	_Exit
  187  000011f8  54000000	nop; not filled.
  188  000011fc  23bd0008	addi	r29,r29,#8
  189  00001200          	L15_LF0:
  190  00001200  23bdfff0	addi	r29,r29,#-16
  191  00001204  afa30000	sw	(r29),r3
  192  00001208  20080003	addi	r8,r0,#3
  193  0000120c  afa80004	sw	4(r29),r8
  194  00001210  afa40008	sw	8(r29),r4
  195  00001214  0c00027c	jal	_mbox_recv
  196  00001218  54000000	nop; not filled.
  197  0000121c  3c020000	lhi	r2,((LC5_LF0)>>16)&0xffff
  198  00001220  2442307c	addui	r2,r2,(LC5_LF0)&0xffff
  199  00001224  afa20000	sw	(r29),r2
  200  00001228  afa40004	sw	4(r29),r4
  201  0000122c  0c000180	jal	_Printf
  202  00001230  54000000	nop; not filled.
  203  00001234  afa30000	sw	(r29),r3
  204  00001238  afa80004	sw	4(r29),r8
  205  0000123c  afa40008	sw	8(r29),r4
  206  00001240  0c000250	jal	_mbox_recv
  207  00001244  54000000	nop; not filled.
  208  00001248  afa20000	sw	(r29),r2
  209  0000124c  afa40004	sw	4(r29),r4
  210  00001250  0c00015c	jal	_Printf
  211  00001254  54000000	nop; not filled.
  212  00001258  afa30000	sw	(r29),r3
  213  0000125c  afa80004	sw	4(r29),r8
  214  00001260  afa40008	sw	8(r29),r4
  215  00001264  0c00022c	jal	_mbox_recv
  216  00001268  54000000	nop; not filled.
  217  0000126c  afa20000	sw	(r29),r2
  218  00001270  afa40004	sw	4(r29),r4
  219  00001274  0c000138	jal	_Printf
  220  00001278  54000000	nop; not filled.
  221  0000127c  afa30000	sw	(r29),r3
  222  00001280  afa80004	sw	4(r29),r8
  223  00001284  afa40008	sw	8(r29),r4
  224  00001288  0c000208	jal	_mbox_recv
  225  0000128c  54000000	nop; not filled.
  226  00001290  afa20000	sw	(r29),r2
  227  00001294  afa40004	sw	4(r29),r4
  228  00001298  0c000114	jal	_Printf
  229  0000129c  54000000	nop; not filled.
  230  000012a0  afa30000	sw	(r29),r3
  231  000012a4  0c0001d4	jal	_mbox_close
  232  000012a8  54000000	nop; not filled.
  233  000012ac  afa50000	sw	(r29),r5
  234  000012b0  0c0001bc	jal	_mbox_open
  235  000012b4  54000000	nop; not filled.
  236  000012b8  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  237  000012bc  2508308c	addui	r8,r8,(LC6_LF0)&0xffff
  238  000012c0  afa80000	sw	(r29),r8
  239  000012c4  0c0000e8	jal	_Printf
  240  000012c8  54000000	nop; not filled.
  241  000012cc  afa50000	sw	(r29),r5
  242  000012d0  20080004	addi	r8,r0,#4
  243  000012d4  afa80004	sw	4(r29),r8
  244  000012d8  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  245  000012dc  25083004	addui	r8,r8,(LC1_LF0)&0xffff
  246  000012e0  afa80008	sw	8(r29),r8
  247  000012e4  0c0001a0	jal	_mbox_send
  248  000012e8  54000000	nop; not filled.
  249  000012ec  afa50000	sw	(r29),r5
  250  000012f0  0c000188	jal	_mbox_close
  251  000012f4  54000000	nop; not filled.
  252  000012f8  afa70000	sw	(r29),r7
  253  000012fc  0c000104	jal	_sem_signal
  254  00001300  54000000	nop; not filled.
  255  00001304  23bd0010	addi	r29,r29,#16
  256  00001308  64210001	snei	r1,r1,#1
  257  0000130c  10200050	beqz	r1,L16_LF0
  258  00001310  54000000	nop; not filled.
  259  00001314  23bdfff8	addi	r29,r29,#-8
  260  00001318  3c080000	lhi	r8,((LC7_LF0)>>16)&0xffff
  261  0000131c  250830a0	addui	r8,r8,(LC7_LF0)&0xffff
  262  00001320  afa80000	sw	(r29),r8
  263  00001324  afa70004	sw	4(r29),r7
  264  00001328  0c000084	jal	_Printf
  265  0000132c  54000000	nop; not filled.
  266  00001330  8cc60000	lw	r6,(r6)
  267  00001334  afa60000	sw	(r29),r6
  268  00001338  0c000074	jal	_Printf
  269  0000133c  54000000	nop; not filled.
  270  00001340  3c080000	lhi	r8,((LC8_LF0)>>16)&0xffff
  271  00001344  250830cc	addui	r8,r8,(LC8_LF0)&0xffff
  272  00001348  afa80000	sw	(r29),r8
  273  0000134c  0c000060	jal	_Printf
  274  00001350  54000000	nop; not filled.
  275  00001354  0c000160	jal	_Exit
  276  00001358  54000000	nop; not filled.
  277  0000135c  23bd0008	addi	r29,r29,#8
  278  00001360          	L16_LF0:
  279  00001360  0c000ef0	jal	_exit
  280  00001364  54000000	nop
  281  00001368          	.endproc _main
  282                      ;;;
  283                      ;;; Stub functions for DLX traps.
  284                      ;;;
  285                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  286                      ;;;
  287                      ;;; The traps such as Open and Close
  288                      ;;; (note the capital letters) are for use by user programs.  The traps
  289                      ;;; with names such as open and close (lower case) are for use by the OS.
  290                      ;;;
  293  00001368          	.align 2
  295                      ;;; The following are the traps to be used by user-level programs
  296                      ;;;
  298  00001368          	.align 2
  299  00001368          	.proc _Open
  300  00001368          	.global _Open
  301  00001368          	_Open:
  302                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  303                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  304                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  305  00001368  44000213	trap	#0x213
  306  0000136c  4be00000	jr	r31
  307  00001370  54000000	nop
  308  00001374          	.endproc _Open
  310  00001374          	.proc _Close
  311  00001374          	.global _Close
  312  00001374          	_Close:
  313  00001374  44000214	trap	#0x214
  314  00001378  4be00000	jr	r31
  315  0000137c  54000000	nop
  316  00001380          	.endproc _Close
  318  00001380          	.proc _Read
  319  00001380          	.global _Read
  320  00001380          	_Read:
  321  00001380  44000210	trap	#0x210
  322  00001384  4be00000	jr	r31
  323  00001388  54000000	nop
  324  0000138c          	.endproc _Read
  326  0000138c          	.proc _Write
  327  0000138c          	.global _Write
  328  0000138c          	_Write:
  329  0000138c  44000211	trap	#0x211
  330  00001390  4be00000	jr	r31
  331  00001394  54000000	nop
  332  00001398          	.endproc _Write
  334  00001398          	.proc _Lseek
  335  00001398          	.global _Lseek
  336  00001398          	_Lseek:
  337  00001398  44000212	trap	#0x212
  338  0000139c  4be00000	jr	r31
  339  000013a0  54000000	nop
  340  000013a4          	.endproc _Lseek
  342  000013a4          	.proc _Putchar
  343  000013a4          	.global _Putchar
  344  000013a4          	_Putchar:
  345  000013a4  44000280	trap	#0x280
  346  000013a8  4be00000	jr	r31
  347  000013ac  54000000	nop
  348  000013b0          	.endproc _Putchar
  350  000013b0          	.proc _Printf
  351  000013b0          	.global _Printf
  352  000013b0          	_Printf:
  353  000013b0  44000201	trap	#0x201
  354  000013b4  4be00000	jr	r31
  355  000013b8  54000000	nop
  356  000013bc          	.endproc _Printf
  358  000013bc          	.proc _getpid
  359  000013bc          	.global _getpid
  360  000013bc          	_getpid:
  361  000013bc  44000431	trap	#0x431
  362  000013c0  4be00000	jr	r31
  363  000013c4  54000000	nop
  364  000013c8          	.endproc _getpid
  366  000013c8          	.proc _process_create
  367  000013c8          	.global _process_create
  368  000013c8          	_process_create:
  369  000013c8  44000432	trap	#0x432
  370  000013cc  4be00000	jr	r31
  371  000013d0  54000000	nop
  372  000013d4          	.endproc _process_create
  374  000013d4          	.proc _shmget
  375  000013d4          	.global _shmget
  376  000013d4          	_shmget:
  377  000013d4  44000440	trap	#0x440
  378  000013d8  4be00000	jr	r31
  379  000013dc  54000000	nop
  380  000013e0          	.endproc _shmget
  382  000013e0          	.proc _shmat
  383  000013e0          	.global _shmat
  384  000013e0          	_shmat:
  385  000013e0  44000441	trap	#0x441
  386  000013e4  4be00000	jr	r31
  387  000013e8  54000000	nop
  388  000013ec          	.endproc _shmat
  390  000013ec          	.proc _sem_create
  391  000013ec          	.global _sem_create
  392  000013ec          	_sem_create:
  393  000013ec  44000450	trap	#0x450
  394  000013f0  4be00000	jr	r31
  395  000013f4  54000000	nop
  396  000013f8          	.endproc _sem_create
  398  000013f8          	.proc _sem_wait
  399  000013f8          	.global _sem_wait
  400  000013f8          	_sem_wait:
  401  000013f8  44000451	trap	#0x451
  402  000013fc  4be00000	jr	r31
  403  00001400  54000000	nop
  404  00001404          	.endproc _sem_wait
  406  00001404          	.proc _sem_signal
  407  00001404          	.global _sem_signal
  408  00001404          	_sem_signal:
  409  00001404  44000452	trap	#0x452
  410  00001408  4be00000	jr	r31
  411  0000140c  54000000	nop
  412  00001410          	.endproc _sem_signal
  414  00001410          	.proc _lock_create
  415  00001410          	.global _lock_create
  416  00001410          	_lock_create:
  417  00001410  44000453	trap	#0x453
  418  00001414  4be00000	jr	r31
  419  00001418  54000000	nop
  420  0000141c          	.endproc _lock_create
  422  0000141c          	.proc _lock_acquire
  423  0000141c          	.global _lock_acquire
  424  0000141c          	_lock_acquire:
  425  0000141c  44000454	trap	#0x454
  426  00001420  4be00000	jr	r31
  427  00001424  54000000	nop
  428  00001428          	.endproc _lock_acquire
  430  00001428          	.proc _lock_release
  431  00001428          	.global _lock_release
  432  00001428          	_lock_release:
  433  00001428  44000455	trap	#0x455
  434  0000142c  4be00000	jr	r31
  435  00001430  54000000	nop
  436  00001434          	.endproc _lock_release
  438  00001434          	.proc _cond_create
  439  00001434          	.global _cond_create
  440  00001434          	_cond_create:
  441  00001434  44000456	trap	#0x456
  442  00001438  4be00000	jr	r31
  443  0000143c  54000000	nop
  444  00001440          	.endproc _cond_create
  446  00001440          	.proc _cond_wait
  447  00001440          	.global _cond_wait
  448  00001440          	_cond_wait:
  449  00001440  44000457	trap	#0x457
  450  00001444  4be00000	jr	r31
  451  00001448  54000000	nop
  452  0000144c          	.endproc _cond_wait
  454  0000144c          	.proc _cond_signal
  455  0000144c          	.global _cond_signal
  456  0000144c          	_cond_signal:
  457  0000144c  44000458	trap	#0x458
  458  00001450  4be00000	jr	r31
  459  00001454  54000000	nop
  460  00001458          	.endproc _cond_signal
  462  00001458          	.proc _cond_broadcast
  463  00001458          	.global _cond_broadcast
  464  00001458          	_cond_broadcast:
  465  00001458  44000459	trap	#0x459
  466  0000145c  4be00000	jr	r31
  467  00001460  54000000	nop
  468  00001464          	.endproc _cond_broadcast
  470  00001464          	.proc _mbox_create
  471  00001464          	.global _mbox_create
  472  00001464          	_mbox_create:
  473  00001464  44000460	trap	#0x460
  474  00001468  4be00000	jr	r31
  475  0000146c  54000000	nop
  476  00001470          	.endproc _mbox_create
  478  00001470          	.proc _mbox_open
  479  00001470          	.global _mbox_open
  480  00001470          	_mbox_open:
  481  00001470  44000461	trap	#0x461
  482  00001474  4be00000	jr	r31
  483  00001478  54000000	nop
  484  0000147c          	.endproc _mbox_open
  486  0000147c          	.proc _mbox_close
  487  0000147c          	.global _mbox_close
  488  0000147c          	_mbox_close:
  489  0000147c  44000462	trap	#0x462
  490  00001480  4be00000	jr	r31
  491  00001484  54000000	nop
  492  00001488          	.endproc _mbox_close
  494  00001488          	.proc _mbox_send
  495  00001488          	.global _mbox_send
  496  00001488          	_mbox_send:
  497  00001488  44000463	trap	#0x463
  498  0000148c  4be00000	jr	r31
  499  00001490  54000000	nop
  500  00001494          	.endproc _mbox_send
  502  00001494          	.proc _mbox_recv
  503  00001494          	.global _mbox_recv
  504  00001494          	_mbox_recv:
  505  00001494  44000464	trap	#0x464
  506  00001498  4be00000	jr	r31
  507  0000149c  54000000	nop
  508  000014a0          	.endproc _mbox_recv
  510  000014a0          	.proc _sleep
  511  000014a0          	.global _sleep
  512  000014a0          	_sleep:
  513  000014a0  44000465	trap	#0x465
  514  000014a4  4be00000	jr	r31
  515  000014a8  54000000	nop
  516  000014ac          	.endproc _sleep
  518  000014ac          	.proc _yield
  519  000014ac          	.global _yield
  520  000014ac          	_yield:
  521  000014ac  44000466	trap	#0x466
  522  000014b0  4be00000	jr	r31
  523  000014b4  54000000	nop
  524  000014b8          	.endproc _yield
  527  000014b8          	.proc _Exit
  528  000014b8          	.global _Exit
  529  000014b8          	_Exit:
  530  000014b8  44000500	trap	#0x500
  531  000014bc  4be00000	jr	r31
  532  000014c0  54000000	nop
  533  000014c4          	.endproc _Exit
  534                      ; Compiled by GCC
  536  000014c4          	.align 2
  537  000014c4          	.proc _isspace
  538  000014c4          	.global _isspace
  539  000014c4          	_isspace:
  540                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  541  000014c4  afbefffc	sw	-4(r29),r30; push fp
  542  000014c8  001df020	add	r30,r0,r29; fp = sp
  543  000014cc  afbffff8	sw	-8(r29),r31; push ret addr
  544  000014d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  545  000014d4  afa20000	sw	0(r29),r2
  546  000014d8  afa30004	sw	4(r29),r3
  547  000014dc  afa40008	sw	8(r29),r4
  548  000014e0  83c20003	lb	r2,3(r30)
  549  000014e4  20010000	addi	r1,r0,#0
  550  000014e8  304300ff	andi	r3,r2,#0x00ff
  551  000014ec  60640020	seqi	r4,r3,#32
  552  000014f0  1480002c	bnez	r4,L3_LF2
  553  000014f4  54000000	nop; delay slot nop
  554  000014f8  304300ff	andi	r3,r2,#0x00ff
  555  000014fc  60640009	seqi	r4,r3,#9
  556  00001500  1480001c	bnez	r4,L3_LF2
  557  00001504  54000000	nop; delay slot nop
  558  00001508  304300ff	andi	r3,r2,#0x00ff
  559  0000150c  6064000a	seqi	r4,r3,#10
  560  00001510  1480000c	bnez	r4,L3_LF2
  561  00001514  54000000	nop; delay slot nop
  562  00001518  08000008	j	L2_LF2
  563  0000151c  54000000	nop; delay slot nop
  564  00001520          	L3_LF2:
  565  00001520  20010001	addi	r1,r0,#1
  566  00001524          	L2_LF2:
  567  00001524  08000004	j	L1_LF2
  568  00001528  54000000	nop; delay slot nop
  569  0000152c          	L1_LF2:
  570  0000152c  8fa20000	lw	r2,0(r29)
  571  00001530  8fa30004	lw	r3,4(r29)
  572  00001534  8fa40008	lw	r4,8(r29)
  573  00001538  8fdffff8	lw	r31,-8(r30)
  574  0000153c  001ee820	add	r29,r0,r30
  575  00001540  8fdefffc	lw	r30,-4(r30)
  576  00001544  4be00000	jr	r31
  577  00001548  54000000	nop
  578  0000154c          	.endproc _isspace
  579  0000154c          	.align 2
  580  0000154c          	.proc _isxdigit
  581  0000154c          	.global _isxdigit
  582  0000154c          	_isxdigit:
  583                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  584  0000154c  afbefffc	sw	-4(r29),r30; push fp
  585  00001550  001df020	add	r30,r0,r29; fp = sp
  586  00001554  afbffff8	sw	-8(r29),r31; push ret addr
  587  00001558  2fbd0018	subui	r29,r29,#24; alloc local storage
  588  0000155c  afa20000	sw	0(r29),r2
  589  00001560  afa30004	sw	4(r29),r3
  590  00001564  afa40008	sw	8(r29),r4
  591  00001568  83c20003	lb	r2,3(r30)
  592  0000156c  20010000	addi	r1,r0,#0
  593  00001570  304300ff	andi	r3,r2,#0x00ff
  594  00001574  6c64002f	sgtui	r4,r3,#47
  595  00001578  1080001c	beqz	r4,L7_LF2
  596  0000157c  54000000	nop; delay slot nop
  597  00001580  304300ff	andi	r3,r2,#0x00ff
  598  00001584  70640039	sleui	r4,r3,#57
  599  00001588  1480005c	bnez	r4,L6_LF2
  600  0000158c  54000000	nop; delay slot nop
  601  00001590  08000004	j	L7_LF2
  602  00001594  54000000	nop; delay slot nop
  603  00001598          	L7_LF2:
  604  00001598  304300ff	andi	r3,r2,#0x00ff
  605  0000159c  6c640060	sgtui	r4,r3,#96
  606  000015a0  1080001c	beqz	r4,L8_LF2
  607  000015a4  54000000	nop; delay slot nop
  608  000015a8  304300ff	andi	r3,r2,#0x00ff
  609  000015ac  70640066	sleui	r4,r3,#102
  610  000015b0  14800034	bnez	r4,L6_LF2
  611  000015b4  54000000	nop; delay slot nop
  612  000015b8  08000004	j	L8_LF2
  613  000015bc  54000000	nop; delay slot nop
  614  000015c0          	L8_LF2:
  615  000015c0  304300ff	andi	r3,r2,#0x00ff
  616  000015c4  6c640040	sgtui	r4,r3,#64
  617  000015c8  10800020	beqz	r4,L5_LF2
  618  000015cc  54000000	nop; delay slot nop
  619  000015d0  304300ff	andi	r3,r2,#0x00ff
  620  000015d4  70640041	sleui	r4,r3,#65
  621  000015d8  1480000c	bnez	r4,L6_LF2
  622  000015dc  54000000	nop; delay slot nop
  623  000015e0  08000008	j	L5_LF2
  624  000015e4  54000000	nop; delay slot nop
  625  000015e8          	L6_LF2:
  626  000015e8  20010001	addi	r1,r0,#1
  627  000015ec          	L5_LF2:
  628  000015ec  08000004	j	L4_LF2
  629  000015f0  54000000	nop; delay slot nop
  630  000015f4          	L4_LF2:
  631  000015f4  8fa20000	lw	r2,0(r29)
  632  000015f8  8fa30004	lw	r3,4(r29)
  633  000015fc  8fa40008	lw	r4,8(r29)
  634  00001600  8fdffff8	lw	r31,-8(r30)
  635  00001604  001ee820	add	r29,r0,r30
  636  00001608  8fdefffc	lw	r30,-4(r30)
  637  0000160c  4be00000	jr	r31
  638  00001610  54000000	nop
  639  00001614          	.endproc _isxdigit
  640  00001614          	.align 2
  641  00001614          	.proc _dstrcpy
  642  00001614          	.global _dstrcpy
  643  00001614          	_dstrcpy:
  644                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  645  00001614  afbefffc	sw	-4(r29),r30; push fp
  646  00001618  001df020	add	r30,r0,r29; fp = sp
  647  0000161c  afbffff8	sw	-8(r29),r31; push ret addr
  648  00001620  2fbd0018	subui	r29,r29,#24; alloc local storage
  649  00001624  afa20000	sw	0(r29),r2
  650  00001628  afa30004	sw	4(r29),r3
  651  0000162c  8fc10000	lw	r1,(r30)
  652  00001630  afc1fff4	sw	-12(r30),r1
  653  00001634          	L10_LF2:
  654  00001634  8fc10000	lw	r1,(r30)
  655  00001638  20220001	addi	r2,r1,#1
  656  0000163c  afc20000	sw	(r30),r2
  657  00001640  8fc20004	lw	r2,4(r30)
  658  00001644  20430001	addi	r3,r2,#1
  659  00001648  afc30004	sw	4(r30),r3
  660  0000164c  80420000	lb	r2,(r2)
  661  00001650  a0220000	sb	(r1),r2
  662  00001654  a3c2fff3	sb	-13(r30),r2
  663  00001658          	L12_LF2:
  664  00001658  93c1fff3	lbu	r1,-13(r30)
  665  0000165c  64220000	snei	r2,r1,#0
  666  00001660  1440000c	bnez	r2,L13_LF2
  667  00001664  54000000	nop; delay slot nop
  668  00001668  0800000c	j	L11_LF2
  669  0000166c  54000000	nop; delay slot nop
  670  00001670          	L13_LF2:
  671  00001670  0bffffc0	j	L10_LF2
  672  00001674  54000000	nop; delay slot nop
  673  00001678          	L11_LF2:
  674  00001678  8fc1fff4	lw	r1,-12(r30)
  675  0000167c  08000004	j	L9_LF2
  676  00001680  54000000	nop; delay slot nop
  677  00001684          	L9_LF2:
  678  00001684  8fa20000	lw	r2,0(r29)
  679  00001688  8fa30004	lw	r3,4(r29)
  680  0000168c  8fdffff8	lw	r31,-8(r30)
  681  00001690  001ee820	add	r29,r0,r30
  682  00001694  8fdefffc	lw	r30,-4(r30)
  683  00001698  4be00000	jr	r31
  684  0000169c  54000000	nop
  685  000016a0          	.endproc _dstrcpy
  686  000016a0          	.align 2
  687  000016a0          	.proc _dstrncpy
  688  000016a0          	.global _dstrncpy
  689  000016a0          	_dstrncpy:
  690                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  691  000016a0  afbefffc	sw	-4(r29),r30; push fp
  692  000016a4  001df020	add	r30,r0,r29; fp = sp
  693  000016a8  afbffff8	sw	-8(r29),r31; push ret addr
  694  000016ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  695  000016b0  afa20000	sw	0(r29),r2
  696  000016b4  afa30004	sw	4(r29),r3
  697  000016b8  8fc10000	lw	r1,(r30)
  698  000016bc  afc1fff4	sw	-12(r30),r1
  699  000016c0          	L15_LF2:
  700  000016c0  8fc10008	lw	r1,8(r30)
  701  000016c4  2022ffff	addi	r2,r1,#-1
  702  000016c8  afc20008	sw	8(r30),r2
  703  000016cc  70210000	slei	r1,r1,#0
  704  000016d0  1020000c	beqz	r1,L18_LF2
  705  000016d4  54000000	nop; delay slot nop
  706  000016d8  08000048	j	L16_LF2
  707  000016dc  54000000	nop; delay slot nop
  708  000016e0          	L18_LF2:
  709  000016e0  8fc10000	lw	r1,(r30)
  710  000016e4  20220001	addi	r2,r1,#1
  711  000016e8  afc20000	sw	(r30),r2
  712  000016ec  8fc20004	lw	r2,4(r30)
  713  000016f0  20430001	addi	r3,r2,#1
  714  000016f4  afc30004	sw	4(r30),r3
  715  000016f8  80420000	lb	r2,(r2)
  716  000016fc  a0220000	sb	(r1),r2
  717  00001700  a3c2fff3	sb	-13(r30),r2
  718  00001704          	L17_LF2:
  719  00001704  93c1fff3	lbu	r1,-13(r30)
  720  00001708  64220000	snei	r2,r1,#0
  721  0000170c  1440000c	bnez	r2,L19_LF2
  722  00001710  54000000	nop; delay slot nop
  723  00001714  0800000c	j	L16_LF2
  724  00001718  54000000	nop; delay slot nop
  725  0000171c          	L19_LF2:
  726  0000171c  0bffffa0	j	L15_LF2
  727  00001720  54000000	nop; delay slot nop
  728  00001724          	L16_LF2:
  729  00001724  8fc1fff4	lw	r1,-12(r30)
  730  00001728  08000004	j	L14_LF2
  731  0000172c  54000000	nop; delay slot nop
  732  00001730          	L14_LF2:
  733  00001730  8fa20000	lw	r2,0(r29)
  734  00001734  8fa30004	lw	r3,4(r29)
  735  00001738  8fdffff8	lw	r31,-8(r30)
  736  0000173c  001ee820	add	r29,r0,r30
  737  00001740  8fdefffc	lw	r30,-4(r30)
  738  00001744  4be00000	jr	r31
  739  00001748  54000000	nop
  740  0000174c          	.endproc _dstrncpy
  741  0000174c          	.align 2
  742  0000174c          	.proc _dstrcat
  743  0000174c          	.global _dstrcat
  744  0000174c          	_dstrcat:
  745                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  746  0000174c  afbefffc	sw	-4(r29),r30; push fp
  747  00001750  001df020	add	r30,r0,r29; fp = sp
  748  00001754  afbffff8	sw	-8(r29),r31; push ret addr
  749  00001758  2fbd0018	subui	r29,r29,#24; alloc local storage
  750  0000175c  afa20000	sw	0(r29),r2
  751  00001760  8fc10000	lw	r1,(r30)
  752  00001764  afc1fff4	sw	-12(r30),r1
  753  00001768          	L21_LF2:
  754  00001768  8fc10000	lw	r1,(r30)
  755  0000176c  90220000	lbu	r2,(r1)
  756  00001770  64410000	snei	r1,r2,#0
  757  00001774  1420000c	bnez	r1,L23_LF2
  758  00001778  54000000	nop; delay slot nop
  759  0000177c  0800001c	j	L22_LF2
  760  00001780  54000000	nop; delay slot nop
  761  00001784          	L23_LF2:
  762  00001784  8fc20000	lw	r2,(r30)
  763  00001788  20410001	addi	r1,r2,#1
  764  0000178c  00011020	add	r2,r0,r1
  765  00001790  afc20000	sw	(r30),r2
  766  00001794  0bffffd0	j	L21_LF2
  767  00001798  54000000	nop; delay slot nop
  768  0000179c          	L22_LF2:
  769  0000179c  23bdfff8	addi	r29,r29,#-8
  770  000017a0  001d0820	add	r1,r0,r29
  771  000017a4  8fc20000	lw	r2,(r30)
  772  000017a8  ac220000	sw	(r1),r2
  773  000017ac  8fc20004	lw	r2,4(r30)
  774  000017b0  ac220004	sw	4(r1),r2
  775  000017b4  0ffffe5c	jal	_dstrcpy
  776  000017b8  54000000	nop; delay slot nop
  777  000017bc  23bd0008	addi	r29,r29,#8
  778  000017c0  8fc1fff4	lw	r1,-12(r30)
  779  000017c4  08000004	j	L20_LF2
  780  000017c8  54000000	nop; delay slot nop
  781  000017cc          	L20_LF2:
  782  000017cc  8fa20000	lw	r2,0(r29)
  783  000017d0  8fdffff8	lw	r31,-8(r30)
  784  000017d4  001ee820	add	r29,r0,r30
  785  000017d8  8fdefffc	lw	r30,-4(r30)
  786  000017dc  4be00000	jr	r31
  787  000017e0  54000000	nop
  788  000017e4          	.endproc _dstrcat
  789  000017e4          	.align 2
  790  000017e4          	.proc _dstrncmp
  791  000017e4          	.global _dstrncmp
  792  000017e4          	_dstrncmp:
  793                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  794  000017e4  afbefffc	sw	-4(r29),r30; push fp
  795  000017e8  001df020	add	r30,r0,r29; fp = sp
  796  000017ec  afbffff8	sw	-8(r29),r31; push ret addr
  797  000017f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  798  000017f4  afa20000	sw	0(r29),r2
  799  000017f8  afa30004	sw	4(r29),r3
  800  000017fc  54000000	nop
  801  00001800  20010000	addi	r1,r0,#0
  802  00001804  afc1fff4	sw	-12(r30),r1
  803  00001808          	L25_LF2:
  804  00001808  8fc1fff4	lw	r1,-12(r30)
  805  0000180c  8fc20008	lw	r2,8(r30)
  806  00001810  0022082a	slt	r1,r1,r2
  807  00001814  1420000c	bnez	r1,L28_LF2
  808  00001818  54000000	nop; delay slot nop
  809  0000181c  08000088	j	L26_LF2
  810  00001820  54000000	nop; delay slot nop
  811  00001824          	L28_LF2:
  812  00001824  8fc10004	lw	r1,4(r30)
  813  00001828  90220000	lbu	r2,(r1)
  814  0000182c  64410000	snei	r1,r2,#0
  815  00001830  14200018	bnez	r1,L29_LF2
  816  00001834  54000000	nop; delay slot nop
  817  00001838  20010000	addi	r1,r0,#0
  818  0000183c  080000d8	j	L24_LF2
  819  00001840  54000000	nop; delay slot nop
  820  00001844  08000028	j	L30_LF2
  821  00001848  54000000	nop; delay slot nop
  822  0000184c          	L29_LF2:
  823  0000184c  8fc10000	lw	r1,(r30)
  824  00001850  8fc20004	lw	r2,4(r30)
  825  00001854  90210000	lbu	r1,(r1)
  826  00001858  90420000	lbu	r2,(r2)
  827  0000185c  00220829	sne	r1,r1,r2
  828  00001860  1020000c	beqz	r1,L30_LF2
  829  00001864  54000000	nop; delay slot nop
  830  00001868  0800003c	j	L26_LF2
  831  0000186c  54000000	nop; delay slot nop
  832  00001870          	L31_LF2:
  833  00001870          	L30_LF2:
  834  00001870  8fc20000	lw	r2,(r30)
  835  00001874  20410001	addi	r1,r2,#1
  836  00001878  00011020	add	r2,r0,r1
  837  0000187c  afc20000	sw	(r30),r2
  838  00001880  8fc20004	lw	r2,4(r30)
  839  00001884  20410001	addi	r1,r2,#1
  840  00001888  00011020	add	r2,r0,r1
  841  0000188c  afc20004	sw	4(r30),r2
  842  00001890          	L27_LF2:
  843  00001890  8fc2fff4	lw	r2,-12(r30)
  844  00001894  20410001	addi	r1,r2,#1
  845  00001898  00011020	add	r2,r0,r1
  846  0000189c  afc2fff4	sw	-12(r30),r2
  847  000018a0  0bffff64	j	L25_LF2
  848  000018a4  54000000	nop; delay slot nop
  849  000018a8          	L26_LF2:
  850  000018a8  8fc1fff4	lw	r1,-12(r30)
  851  000018ac  8fc20008	lw	r2,8(r30)
  852  000018b0  00220828	seq	r1,r1,r2
  853  000018b4  10200018	beqz	r1,L32_LF2
  854  000018b8  54000000	nop; delay slot nop
  855  000018bc  20010000	addi	r1,r0,#0
  856  000018c0  08000054	j	L24_LF2
  857  000018c4  54000000	nop; delay slot nop
  858  000018c8  0800004c	j	L33_LF2
  859  000018cc  54000000	nop; delay slot nop
  860  000018d0          	L32_LF2:
  861  000018d0  8fc20000	lw	r2,(r30)
  862  000018d4  90410000	lbu	r1,(r2)
  863  000018d8  8fc20004	lw	r2,4(r30)
  864  000018dc  90430000	lbu	r3,(r2)
  865  000018e0  00230822	sub	r1,r1,r3
  866  000018e4  74220000	sgei	r2,r1,#0
  867  000018e8  10400020	beqz	r2,L34_LF2
  868  000018ec  54000000	nop; delay slot nop
  869  000018f0  8fc10000	lw	r1,(r30)
  870  000018f4  8fc20004	lw	r2,4(r30)
  871  000018f8  90210000	lbu	r1,(r1)
  872  000018fc  90420000	lbu	r2,(r2)
  873  00001900  00220829	sne	r1,r1,r2
  874  00001904  08000008	j	L35_LF2
  875  00001908  54000000	nop; delay slot nop
  876  0000190c          	L34_LF2:
  877  0000190c  2001ffff	addi	r1,r0,#-1
  878  00001910          	L35_LF2:
  879  00001910  08000004	j	L24_LF2
  880  00001914  54000000	nop; delay slot nop
  881  00001918          	L33_LF2:
  882  00001918          	L24_LF2:
  883  00001918  8fa20000	lw	r2,0(r29)
  884  0000191c  8fa30004	lw	r3,4(r29)
  885  00001920  8fdffff8	lw	r31,-8(r30)
  886  00001924  001ee820	add	r29,r0,r30
  887  00001928  8fdefffc	lw	r30,-4(r30)
  888  0000192c  4be00000	jr	r31
  889  00001930  54000000	nop
  890  00001934          	.endproc _dstrncmp
  891  00001934          	.align 2
  892  00001934          	.proc _dstrlen
  893  00001934          	.global _dstrlen
  894  00001934          	_dstrlen:
  895                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  896  00001934  afbefffc	sw	-4(r29),r30; push fp
  897  00001938  001df020	add	r30,r0,r29; fp = sp
  898  0000193c  afbffff8	sw	-8(r29),r31; push ret addr
  899  00001940  2fbd0018	subui	r29,r29,#24; alloc local storage
  900  00001944  afa20000	sw	0(r29),r2
  901  00001948  20010000	addi	r1,r0,#0
  902  0000194c  afc1fff4	sw	-12(r30),r1
  903  00001950          	L37_LF2:
  904  00001950  8fc10000	lw	r1,(r30)
  905  00001954  20220001	addi	r2,r1,#1
  906  00001958  afc20000	sw	(r30),r2
  907  0000195c  90210000	lbu	r1,(r1)
  908  00001960  64220000	snei	r2,r1,#0
  909  00001964  1440000c	bnez	r2,L39_LF2
  910  00001968  54000000	nop; delay slot nop
  911  0000196c  0800001c	j	L38_LF2
  912  00001970  54000000	nop; delay slot nop
  913  00001974          	L39_LF2:
  914  00001974  8fc2fff4	lw	r2,-12(r30)
  915  00001978  20410001	addi	r1,r2,#1
  916  0000197c  00011020	add	r2,r0,r1
  917  00001980  afc2fff4	sw	-12(r30),r2
  918  00001984  0bffffc8	j	L37_LF2
  919  00001988  54000000	nop; delay slot nop
  920  0000198c          	L38_LF2:
  921  0000198c  8fc1fff4	lw	r1,-12(r30)
  922  00001990  08000004	j	L36_LF2
  923  00001994  54000000	nop; delay slot nop
  924  00001998          	L36_LF2:
  925  00001998  8fa20000	lw	r2,0(r29)
  926  0000199c  8fdffff8	lw	r31,-8(r30)
  927  000019a0  001ee820	add	r29,r0,r30
  928  000019a4  8fdefffc	lw	r30,-4(r30)
  929  000019a8  4be00000	jr	r31
  930  000019ac  54000000	nop
  931  000019b0          	.endproc _dstrlen
  932  000019b0          	.align 2
  933  000019b0          	.proc _dstrstr
  934  000019b0          	.global _dstrstr
  935  000019b0          	_dstrstr:
  936                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  937  000019b0  afbefffc	sw	-4(r29),r30; push fp
  938  000019b4  001df020	add	r30,r0,r29; fp = sp
  939  000019b8  afbffff8	sw	-8(r29),r31; push ret addr
  940  000019bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  941  000019c0  afa20000	sw	0(r29),r2
  942  000019c4  23bdfff8	addi	r29,r29,#-8
  943  000019c8  001d0820	add	r1,r0,r29
  944  000019cc  8fc20004	lw	r2,4(r30)
  945  000019d0  ac220000	sw	(r1),r2
  946  000019d4  0fffff5c	jal	_dstrlen
  947  000019d8  54000000	nop; delay slot nop
  948  000019dc  23bd0008	addi	r29,r29,#8
  949  000019e0  afc1fff4	sw	-12(r30),r1
  950  000019e4          	L41_LF2:
  951  000019e4  8fc10000	lw	r1,(r30)
  952  000019e8  90220000	lbu	r2,(r1)
  953  000019ec  64410000	snei	r1,r2,#0
  954  000019f0  1420000c	bnez	r1,L43_LF2
  955  000019f4  54000000	nop; delay slot nop
  956  000019f8  08000060	j	L42_LF2
  957  000019fc  54000000	nop; delay slot nop
  958  00001a00          	L43_LF2:
  959  00001a00  23bdfff0	addi	r29,r29,#-16
  960  00001a04  001d0820	add	r1,r0,r29
  961  00001a08  8fc20000	lw	r2,(r30)
  962  00001a0c  ac220000	sw	(r1),r2
  963  00001a10  8fc20004	lw	r2,4(r30)
  964  00001a14  ac220004	sw	4(r1),r2
  965  00001a18  8fc2fff4	lw	r2,-12(r30)
  966  00001a1c  ac220008	sw	8(r1),r2
  967  00001a20  0ffffdc0	jal	_dstrncmp
  968  00001a24  54000000	nop; delay slot nop
  969  00001a28  23bd0010	addi	r29,r29,#16
  970  00001a2c  64220000	snei	r2,r1,#0
  971  00001a30  14400010	bnez	r2,L44_LF2
  972  00001a34  54000000	nop; delay slot nop
  973  00001a38  8fc10000	lw	r1,(r30)
  974  00001a3c  08000028	j	L40_LF2
  975  00001a40  54000000	nop; delay slot nop
  976  00001a44          	L44_LF2:
  977  00001a44  8fc20000	lw	r2,(r30)
  978  00001a48  20410001	addi	r1,r2,#1
  979  00001a4c  00011020	add	r2,r0,r1
  980  00001a50  afc20000	sw	(r30),r2
  981  00001a54  0bffff8c	j	L41_LF2
  982  00001a58  54000000	nop; delay slot nop
  983  00001a5c          	L42_LF2:
  984  00001a5c  20010000	addi	r1,r0,#0
  985  00001a60  08000004	j	L40_LF2
  986  00001a64  54000000	nop; delay slot nop
  987  00001a68          	L40_LF2:
  988  00001a68  8fa20000	lw	r2,0(r29)
  989  00001a6c  8fdffff8	lw	r31,-8(r30)
  990  00001a70  001ee820	add	r29,r0,r30
  991  00001a74  8fdefffc	lw	r30,-4(r30)
  992  00001a78  4be00000	jr	r31
  993  00001a7c  54000000	nop
  994  00001a80          	.endproc _dstrstr
  995  00001a80          	.align 2
  996  00001a80          	.proc _dmindex
  997  00001a80          	.global _dmindex
  998  00001a80          	_dmindex:
  999                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1000  00001a80  afbefffc	sw	-4(r29),r30; push fp
 1001  00001a84  001df020	add	r30,r0,r29; fp = sp
 1002  00001a88  afbffff8	sw	-8(r29),r31; push ret addr
 1003  00001a8c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1004  00001a90  afa20000	sw	0(r29),r2
 1005  00001a94  54000000	nop
 1006  00001a98          	L46_LF2:
 1007  00001a98  8fc10000	lw	r1,(r30)
 1008  00001a9c  90220000	lbu	r2,(r1)
 1009  00001aa0  64410000	snei	r1,r2,#0
 1010  00001aa4  1420000c	bnez	r1,L48_LF2
 1011  00001aa8  54000000	nop; delay slot nop
 1012  00001aac  08000070	j	L47_LF2
 1013  00001ab0  54000000	nop; delay slot nop
 1014  00001ab4          	L48_LF2:
 1015  00001ab4  8fc10004	lw	r1,4(r30)
 1016  00001ab8  afc1fff4	sw	-12(r30),r1
 1017  00001abc          	L49_LF2:
 1018  00001abc  8fc1fff4	lw	r1,-12(r30)
 1019  00001ac0  90220000	lbu	r2,(r1)
 1020  00001ac4  64410000	snei	r1,r2,#0
 1021  00001ac8  1420000c	bnez	r1,L52_LF2
 1022  00001acc  54000000	nop; delay slot nop
 1023  00001ad0  08000044	j	L50_LF2
 1024  00001ad4  54000000	nop; delay slot nop
 1025  00001ad8          	L52_LF2:
 1026  00001ad8  8fc10000	lw	r1,(r30)
 1027  00001adc  8fc2fff4	lw	r2,-12(r30)
 1028  00001ae0  90210000	lbu	r1,(r1)
 1029  00001ae4  90420000	lbu	r2,(r2)
 1030  00001ae8  00220828	seq	r1,r1,r2
 1031  00001aec  10200010	beqz	r1,L51_LF2
 1032  00001af0  54000000	nop; delay slot nop
 1033  00001af4  8fc10000	lw	r1,(r30)
 1034  00001af8  08000030	j	L45_LF2
 1035  00001afc  54000000	nop; delay slot nop
 1036  00001b00          	L53_LF2:
 1037  00001b00          	L51_LF2:
 1038  00001b00  8fc2fff4	lw	r2,-12(r30)
 1039  00001b04  20410001	addi	r1,r2,#1
 1040  00001b08  00011020	add	r2,r0,r1
 1041  00001b0c  afc2fff4	sw	-12(r30),r2
 1042  00001b10  0bffffa8	j	L49_LF2
 1043  00001b14  54000000	nop; delay slot nop
 1044  00001b18          	L50_LF2:
 1045  00001b18  0bffff7c	j	L46_LF2
 1046  00001b1c  54000000	nop; delay slot nop
 1047  00001b20          	L47_LF2:
 1048  00001b20  20010000	addi	r1,r0,#0
 1049  00001b24  08000004	j	L45_LF2
 1050  00001b28  54000000	nop; delay slot nop
 1051  00001b2c          	L45_LF2:
 1052  00001b2c  8fa20000	lw	r2,0(r29)
 1053  00001b30  8fdffff8	lw	r31,-8(r30)
 1054  00001b34  001ee820	add	r29,r0,r30
 1055  00001b38  8fdefffc	lw	r30,-4(r30)
 1056  00001b3c  4be00000	jr	r31
 1057  00001b40  54000000	nop
 1058  00001b44          	.endproc _dmindex
 1059  00001b44          	.align 2
 1060  00001b44          	.proc _dindex
 1061  00001b44          	.global _dindex
 1062  00001b44          	_dindex:
 1063                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1064  00001b44  afbefffc	sw	-4(r29),r30; push fp
 1065  00001b48  001df020	add	r30,r0,r29; fp = sp
 1066  00001b4c  afbffff8	sw	-8(r29),r31; push ret addr
 1067  00001b50  2fbd0010	subui	r29,r29,#16; alloc local storage
 1068  00001b54  afa20000	sw	0(r29),r2
 1069  00001b58  54000000	nop
 1070  00001b5c          	L55_LF2:
 1071  00001b5c  8fc10000	lw	r1,(r30)
 1072  00001b60  90220000	lbu	r2,(r1)
 1073  00001b64  64410000	snei	r1,r2,#0
 1074  00001b68  1420000c	bnez	r1,L57_LF2
 1075  00001b6c  54000000	nop; delay slot nop
 1076  00001b70  08000040	j	L56_LF2
 1077  00001b74  54000000	nop; delay slot nop
 1078  00001b78          	L57_LF2:
 1079  00001b78  8fc10000	lw	r1,(r30)
 1080  00001b7c  90220000	lbu	r2,(r1)
 1081  00001b80  8fc10004	lw	r1,4(r30)
 1082  00001b84  00411028	seq	r2,r2,r1
 1083  00001b88  10400010	beqz	r2,L58_LF2
 1084  00001b8c  54000000	nop; delay slot nop
 1085  00001b90  8fc10000	lw	r1,(r30)
 1086  00001b94  08000028	j	L54_LF2
 1087  00001b98  54000000	nop; delay slot nop
 1088  00001b9c          	L58_LF2:
 1089  00001b9c  8fc20000	lw	r2,(r30)
 1090  00001ba0  20410001	addi	r1,r2,#1
 1091  00001ba4  00011020	add	r2,r0,r1
 1092  00001ba8  afc20000	sw	(r30),r2
 1093  00001bac  0bffffac	j	L55_LF2
 1094  00001bb0  54000000	nop; delay slot nop
 1095  00001bb4          	L56_LF2:
 1096  00001bb4  20010000	addi	r1,r0,#0
 1097  00001bb8  08000004	j	L54_LF2
 1098  00001bbc  54000000	nop; delay slot nop
 1099  00001bc0          	L54_LF2:
 1100  00001bc0  8fa20000	lw	r2,0(r29)
 1101  00001bc4  8fdffff8	lw	r31,-8(r30)
 1102  00001bc8  001ee820	add	r29,r0,r30
 1103  00001bcc  8fdefffc	lw	r30,-4(r30)
 1104  00001bd0  4be00000	jr	r31
 1105  00001bd4  54000000	nop
 1106  00001bd8          	.endproc _dindex
 1107  00001bd8          	.align 2
 1108  00001bd8          	.proc _ditoa
 1109  00001bd8          	.global _ditoa
 1110  00001bd8          	_ditoa:
 1111                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1112  00001bd8  afbefffc	sw	-4(r29),r30; push fp
 1113  00001bdc  001df020	add	r30,r0,r29; fp = sp
 1114  00001be0  afbffff8	sw	-8(r29),r31; push ret addr
 1115  00001be4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1116  00001be8  afa20000	sw	0(r29),r2
 1117  00001bec  afa30004	sw	4(r29),r3
 1118  00001bf0  8fc10000	lw	r1,(r30)
 1119  00001bf4  68220000	slti	r2,r1,#0
 1120  00001bf8  1040002c	beqz	r2,L60_LF2
 1121  00001bfc  54000000	nop; delay slot nop
 1122  00001c00  8fc10004	lw	r1,4(r30)
 1123  00001c04  20220001	addi	r2,r1,#1
 1124  00001c08  afc20004	sw	4(r30),r2
 1125  00001c0c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1126  00001c10  a0220000	sb	(r1),r2
 1127  00001c14  8fc10000	lw	r1,(r30)
 1128  00001c18  00011022	sub	r2,r0,r1
 1129  00001c1c  afc20000	sw	(r30),r2
 1130  00001c20  08000118	j	L61_LF2
 1131  00001c24  54000000	nop; delay slot nop
 1132  00001c28          	L60_LF2:
 1133  00001c28  8fc10000	lw	r1,(r30)
 1134  00001c2c  64220000	snei	r2,r1,#0
 1135  00001c30  14400020	bnez	r2,L62_LF2
 1136  00001c34  54000000	nop; delay slot nop
 1137  00001c38  8fc10004	lw	r1,4(r30)
 1138  00001c3c  20220001	addi	r2,r1,#1
 1139  00001c40  afc20004	sw	4(r30),r2
 1140  00001c44  20020030	addi	r2,r0,(#0x30)&0xff
 1141  00001c48  a0220000	sb	(r1),r2
 1142  00001c4c  080000ec	j	L61_LF2
 1143  00001c50  54000000	nop; delay slot nop
 1144  00001c54          	L62_LF2:
 1145  00001c54  20010001	addi	r1,r0,#1
 1146  00001c58  afc1fff4	sw	-12(r30),r1
 1147  00001c5c          	L64_LF2:
 1148  00001c5c  8fc1fff4	lw	r1,-12(r30)
 1149  00001c60  8fc20000	lw	r2,(r30)
 1150  00001c64  0022082c	sle	r1,r1,r2
 1151  00001c68  1420000c	bnez	r1,L66_LF2
 1152  00001c6c  54000000	nop; delay slot nop
 1153  00001c70  08000024	j	L65_LF2
 1154  00001c74  54000000	nop; delay slot nop
 1155  00001c78          	L67_LF2:
 1156  00001c78          	L66_LF2:
 1157  00001c78  8fc1fff4	lw	r1,-12(r30)
 1158  00001c7c  00011820	add	r3,r0,r1
 1159  00001c80  50620002	slli	r2,r3,#0x2
 1160  00001c84  00411020	add	r2,r2,r1
 1161  00001c88  50410001	slli	r1,r2,#0x1
 1162  00001c8c  afc1fff4	sw	-12(r30),r1
 1163  00001c90  0bffffc8	j	L64_LF2
 1164  00001c94  54000000	nop; delay slot nop
 1165  00001c98          	L65_LF2:
 1166  00001c98  54000000	nop
 1167  00001c9c          	L68_LF2:
 1168  00001c9c  8fc1fff4	lw	r1,-12(r30)
 1169  00001ca0  2002000a	addi	r2,r0,#10
 1170  00001ca4  00200035	movi2fp	f0,r1
 1171  00001ca8  00400835	movi2fp	f1,r2
 1172  00001cac  0401000f	div	f0,f0,f1
 1173  00001cb0  00000834	movfp2i	r1,f0
 1174  00001cb4  afc1fff4	sw	-12(r30),r1
 1175  00001cb8  8fc10004	lw	r1,4(r30)
 1176  00001cbc  20220001	addi	r2,r1,#1
 1177  00001cc0  afc20004	sw	4(r30),r2
 1178  00001cc4  8fc20000	lw	r2,(r30)
 1179  00001cc8  8fc3fff4	lw	r3,-12(r30)
 1180  00001ccc  00400035	movi2fp	f0,r2
 1181  00001cd0  00600835	movi2fp	f1,r3
 1182  00001cd4  0401000f	div	f0,f0,f1
 1183  00001cd8  00001034	movfp2i	r2,f0
 1184  00001cdc  00021820	add	r3,r0,r2
 1185  00001ce0  20620030	addi	r2,r3,#48
 1186  00001ce4  a0220000	sb	(r1),r2
 1187  00001ce8  8fc10000	lw	r1,(r30)
 1188  00001cec  8fc3fff4	lw	r3,-12(r30)
 1189  00001cf0  00200035	movi2fp	f0,r1
 1190  00001cf4  00600835	movi2fp	f1,r3
 1191  00001cf8  0401000f	div	f0,f0,f1
 1192  00001cfc  00001034	movfp2i	r2,f0
 1193  00001d00  8fc3fff4	lw	r3,-12(r30)
 1194  00001d04  00400035	movi2fp	f0,r2
 1195  00001d08  00600835	movi2fp	f1,r3
 1196  00001d0c  0401000e	mult	f0,f0,f1
 1197  00001d10  00001034	movfp2i	r2,f0
 1198  00001d14  00220822	sub	r1,r1,r2
 1199  00001d18  afc10000	sw	(r30),r1
 1200  00001d1c          	L70_LF2:
 1201  00001d1c  8fc1fff4	lw	r1,-12(r30)
 1202  00001d20  6c220001	sgti	r2,r1,#1
 1203  00001d24  1440000c	bnez	r2,L71_LF2
 1204  00001d28  54000000	nop; delay slot nop
 1205  00001d2c  0800000c	j	L61_LF2
 1206  00001d30  54000000	nop; delay slot nop
 1207  00001d34          	L71_LF2:
 1208  00001d34  0bffff64	j	L68_LF2
 1209  00001d38  54000000	nop; delay slot nop
 1210  00001d3c          	L69_LF2:
 1211  00001d3c          	L63_LF2:
 1212  00001d3c          	L61_LF2:
 1213  00001d3c  8fc10004	lw	r1,4(r30)
 1214  00001d40  20020000	addi	r2,r0,(#0x0)&0xff
 1215  00001d44  a0220000	sb	(r1),r2
 1216  00001d48          	L59_LF2:
 1217  00001d48  8fa20000	lw	r2,0(r29)
 1218  00001d4c  8fa30004	lw	r3,4(r29)
 1219  00001d50  8fdffff8	lw	r31,-8(r30)
 1220  00001d54  001ee820	add	r29,r0,r30
 1221  00001d58  8fdefffc	lw	r30,-4(r30)
 1222  00001d5c  4be00000	jr	r31
 1223  00001d60  54000000	nop
 1224  00001d64          	.endproc _ditoa
 1225  00001d64          	.align 2
 1226  00001d64          	.proc _dstrtol
 1227  00001d64          	.global _dstrtol
 1228  00001d64          	_dstrtol:
 1229                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1230  00001d64  afbefffc	sw	-4(r29),r30; push fp
 1231  00001d68  001df020	add	r30,r0,r29; fp = sp
 1232  00001d6c  afbffff8	sw	-8(r29),r31; push ret addr
 1233  00001d70  2fbd0020	subui	r29,r29,#32; alloc local storage
 1234  00001d74  afa20000	sw	0(r29),r2
 1235  00001d78  20010000	addi	r1,r0,#0
 1236  00001d7c  afc1fff4	sw	-12(r30),r1
 1237  00001d80          	L73_LF2:
 1238  00001d80  8fc10000	lw	r1,(r30)
 1239  00001d84  90220000	lbu	r2,(r1)
 1240  00001d88  60410020	seqi	r1,r2,#32
 1241  00001d8c  14200034	bnez	r1,L75_LF2
 1242  00001d90  54000000	nop; delay slot nop
 1243  00001d94  8fc10000	lw	r1,(r30)
 1244  00001d98  90220000	lbu	r2,(r1)
 1245  00001d9c  60410009	seqi	r1,r2,#9
 1246  00001da0  14200020	bnez	r1,L75_LF2
 1247  00001da4  54000000	nop; delay slot nop
 1248  00001da8  8fc10000	lw	r1,(r30)
 1249  00001dac  90220000	lbu	r2,(r1)
 1250  00001db0  6041000a	seqi	r1,r2,#10
 1251  00001db4  1420000c	bnez	r1,L75_LF2
 1252  00001db8  54000000	nop; delay slot nop
 1253  00001dbc  0800001c	j	L74_LF2
 1254  00001dc0  54000000	nop; delay slot nop
 1255  00001dc4          	L75_LF2:
 1256  00001dc4  8fc20000	lw	r2,(r30)
 1257  00001dc8  20410001	addi	r1,r2,#1
 1258  00001dcc  00011020	add	r2,r0,r1
 1259  00001dd0  afc20000	sw	(r30),r2
 1260  00001dd4  0bffffa8	j	L73_LF2
 1261  00001dd8  54000000	nop; delay slot nop
 1262  00001ddc          	L74_LF2:
 1263  00001ddc  8fc10004	lw	r1,4(r30)
 1264  00001de0  64220000	snei	r2,r1,#0
 1265  00001de4  10400010	beqz	r2,L76_LF2
 1266  00001de8  54000000	nop; delay slot nop
 1267  00001dec  8fc10004	lw	r1,4(r30)
 1268  00001df0  8fc20000	lw	r2,(r30)
 1269  00001df4  ac220000	sw	(r1),r2
 1270  00001df8          	L76_LF2:
 1271  00001df8  8fc10000	lw	r1,(r30)
 1272  00001dfc  90220000	lbu	r2,(r1)
 1273  00001e00  64410000	snei	r1,r2,#0
 1274  00001e04  14200010	bnez	r1,L77_LF2
 1275  00001e08  54000000	nop; delay slot nop
 1276  00001e0c  8fc1fff4	lw	r1,-12(r30)
 1277  00001e10  08000294	j	L72_LF2
 1278  00001e14  54000000	nop; delay slot nop
 1279  00001e18          	L77_LF2:
 1280  00001e18  8fc10000	lw	r1,(r30)
 1281  00001e1c  90220000	lbu	r2,(r1)
 1282  00001e20  6041002d	seqi	r1,r2,#45
 1283  00001e24  10200024	beqz	r1,L78_LF2
 1284  00001e28  54000000	nop; delay slot nop
 1285  00001e2c  2001ffff	addi	r1,r0,#-1
 1286  00001e30  afc1ffec	sw	-20(r30),r1
 1287  00001e34  8fc20000	lw	r2,(r30)
 1288  00001e38  20410001	addi	r1,r2,#1
 1289  00001e3c  00011020	add	r2,r0,r1
 1290  00001e40  afc20000	sw	(r30),r2
 1291  00001e44  0800000c	j	L79_LF2
 1292  00001e48  54000000	nop; delay slot nop
 1293  00001e4c          	L78_LF2:
 1294  00001e4c  20010001	addi	r1,r0,#1
 1295  00001e50  afc1ffec	sw	-20(r30),r1
 1296  00001e54          	L79_LF2:
 1297  00001e54  8fc10008	lw	r1,8(r30)
 1298  00001e58  64220000	snei	r2,r1,#0
 1299  00001e5c  14400090	bnez	r2,L80_LF2
 1300  00001e60  54000000	nop; delay slot nop
 1301  00001e64  8fc10000	lw	r1,(r30)
 1302  00001e68  90220000	lbu	r2,(r1)
 1303  00001e6c  60410030	seqi	r1,r2,#48
 1304  00001e70  10200074	beqz	r1,L81_LF2
 1305  00001e74  54000000	nop; delay slot nop
 1306  00001e78  8fc20000	lw	r2,(r30)
 1307  00001e7c  20410001	addi	r1,r2,#1
 1308  00001e80  00011020	add	r2,r0,r1
 1309  00001e84  afc20000	sw	(r30),r2
 1310  00001e88  8fc10000	lw	r1,(r30)
 1311  00001e8c  90220000	lbu	r2,(r1)
 1312  00001e90  60410078	seqi	r1,r2,#120
 1313  00001e94  14200020	bnez	r1,L83_LF2
 1314  00001e98  54000000	nop; delay slot nop
 1315  00001e9c  8fc10000	lw	r1,(r30)
 1316  00001ea0  90220000	lbu	r2,(r1)
 1317  00001ea4  60410058	seqi	r1,r2,#88
 1318  00001ea8  1420000c	bnez	r1,L83_LF2
 1319  00001eac  54000000	nop; delay slot nop
 1320  00001eb0  08000024	j	L82_LF2
 1321  00001eb4  54000000	nop; delay slot nop
 1322  00001eb8          	L83_LF2:
 1323  00001eb8  20010010	addi	r1,r0,#16
 1324  00001ebc  afc10008	sw	8(r30),r1
 1325  00001ec0  8fc20000	lw	r2,(r30)
 1326  00001ec4  20410001	addi	r1,r2,#1
 1327  00001ec8  00011020	add	r2,r0,r1
 1328  00001ecc  afc20000	sw	(r30),r2
 1329  00001ed0  0800000c	j	L84_LF2
 1330  00001ed4  54000000	nop; delay slot nop
 1331  00001ed8          	L82_LF2:
 1332  00001ed8  20010008	addi	r1,r0,#8
 1333  00001edc  afc10008	sw	8(r30),r1
 1334  00001ee0          	L84_LF2:
 1335  00001ee0  0800000c	j	L80_LF2
 1336  00001ee4  54000000	nop; delay slot nop
 1337  00001ee8          	L81_LF2:
 1338  00001ee8  2001000a	addi	r1,r0,#10
 1339  00001eec  afc10008	sw	8(r30),r1
 1340  00001ef0          	L85_LF2:
 1341  00001ef0          	L80_LF2:
 1342  00001ef0  8fc10008	lw	r1,8(r30)
 1343  00001ef4  70220000	slei	r2,r1,#0
 1344  00001ef8  1440001c	bnez	r2,L87_LF2
 1345  00001efc  54000000	nop; delay slot nop
 1346  00001f00  8fc10008	lw	r1,8(r30)
 1347  00001f04  6c220010	sgti	r2,r1,#16
 1348  00001f08  1440000c	bnez	r2,L87_LF2
 1349  00001f0c  54000000	nop; delay slot nop
 1350  00001f10  08000010	j	L86_LF2
 1351  00001f14  54000000	nop; delay slot nop
 1352  00001f18          	L87_LF2:
 1353  00001f18  8fc1fff4	lw	r1,-12(r30)
 1354  00001f1c  08000188	j	L72_LF2
 1355  00001f20  54000000	nop; delay slot nop
 1356  00001f24          	L86_LF2:
 1357  00001f24  54000000	nop
 1358  00001f28          	L88_LF2:
 1359  00001f28  8fc10000	lw	r1,(r30)
 1360  00001f2c  90220000	lbu	r2,(r1)
 1361  00001f30  6c41002f	sgtui	r1,r2,#47
 1362  00001f34  10200030	beqz	r1,L91_LF2
 1363  00001f38  54000000	nop; delay slot nop
 1364  00001f3c  8fc10000	lw	r1,(r30)
 1365  00001f40  90220000	lbu	r2,(r1)
 1366  00001f44  70410039	sleui	r1,r2,#57
 1367  00001f48  1020001c	beqz	r1,L91_LF2
 1368  00001f4c  54000000	nop; delay slot nop
 1369  00001f50  8fc10000	lw	r1,(r30)
 1370  00001f54  90220000	lbu	r2,(r1)
 1371  00001f58  2041ffd0	addi	r1,r2,#-48
 1372  00001f5c  afc1fff0	sw	-16(r30),r1
 1373  00001f60  0800008c	j	L92_LF2
 1374  00001f64  54000000	nop; delay slot nop
 1375  00001f68          	L91_LF2:
 1376  00001f68  8fc10000	lw	r1,(r30)
 1377  00001f6c  90220000	lbu	r2,(r1)
 1378  00001f70  6c410060	sgtui	r1,r2,#96
 1379  00001f74  10200030	beqz	r1,L93_LF2
 1380  00001f78  54000000	nop; delay slot nop
 1381  00001f7c  8fc10000	lw	r1,(r30)
 1382  00001f80  90220000	lbu	r2,(r1)
 1383  00001f84  7041007a	sleui	r1,r2,#122
 1384  00001f88  1020001c	beqz	r1,L93_LF2
 1385  00001f8c  54000000	nop; delay slot nop
 1386  00001f90  8fc10000	lw	r1,(r30)
 1387  00001f94  90220000	lbu	r2,(r1)
 1388  00001f98  2041ffa9	addi	r1,r2,#-87
 1389  00001f9c  afc1fff0	sw	-16(r30),r1
 1390  00001fa0  0800004c	j	L92_LF2
 1391  00001fa4  54000000	nop; delay slot nop
 1392  00001fa8          	L93_LF2:
 1393  00001fa8  8fc10000	lw	r1,(r30)
 1394  00001fac  90220000	lbu	r2,(r1)
 1395  00001fb0  6c410040	sgtui	r1,r2,#64
 1396  00001fb4  10200030	beqz	r1,L95_LF2
 1397  00001fb8  54000000	nop; delay slot nop
 1398  00001fbc  8fc10000	lw	r1,(r30)
 1399  00001fc0  90220000	lbu	r2,(r1)
 1400  00001fc4  7041005a	sleui	r1,r2,#90
 1401  00001fc8  1020001c	beqz	r1,L95_LF2
 1402  00001fcc  54000000	nop; delay slot nop
 1403  00001fd0  8fc10000	lw	r1,(r30)
 1404  00001fd4  90220000	lbu	r2,(r1)
 1405  00001fd8  2041ffc9	addi	r1,r2,#-55
 1406  00001fdc  afc1fff0	sw	-16(r30),r1
 1407  00001fe0  0800000c	j	L92_LF2
 1408  00001fe4  54000000	nop; delay slot nop
 1409  00001fe8          	L95_LF2:
 1410  00001fe8  200103e8	addi	r1,r0,#1000
 1411  00001fec  afc1fff0	sw	-16(r30),r1
 1412  00001ff0          	L96_LF2:
 1413  00001ff0          	L94_LF2:
 1414  00001ff0          	L92_LF2:
 1415  00001ff0  8fc1fff0	lw	r1,-16(r30)
 1416  00001ff4  8fc20008	lw	r2,8(r30)
 1417  00001ff8  0022082a	slt	r1,r1,r2
 1418  00001ffc  10200040	beqz	r1,L90_LF2
 1419  00002000  54000000	nop; delay slot nop
 1420  00002004  8fc1fff4	lw	r1,-12(r30)
 1421  00002008  8fc20008	lw	r2,8(r30)
 1422  0000200c  00200035	movi2fp	f0,r1
 1423  00002010  00400835	movi2fp	f1,r2
 1424  00002014  0401000e	mult	f0,f0,f1
 1425  00002018  00000834	movfp2i	r1,f0
 1426  0000201c  afc1fff4	sw	-12(r30),r1
 1427  00002020  8fc1fff4	lw	r1,-12(r30)
 1428  00002024  8fc2fff0	lw	r2,-16(r30)
 1429  00002028  00220820	add	r1,r1,r2
 1430  0000202c  afc1fff4	sw	-12(r30),r1
 1431  00002030  8fc20000	lw	r2,(r30)
 1432  00002034  20410001	addi	r1,r2,#1
 1433  00002038  00011020	add	r2,r0,r1
 1434  0000203c  afc20000	sw	(r30),r2
 1435  00002040          	L97_LF2:
 1436  00002040          	L90_LF2:
 1437  00002040  8fc1fff0	lw	r1,-16(r30)
 1438  00002044  8fc20008	lw	r2,8(r30)
 1439  00002048  0022082a	slt	r1,r1,r2
 1440  0000204c  1420000c	bnez	r1,L98_LF2
 1441  00002050  54000000	nop; delay slot nop
 1442  00002054  0800000c	j	L89_LF2
 1443  00002058  54000000	nop; delay slot nop
 1444  0000205c          	L98_LF2:
 1445  0000205c  0bfffec8	j	L88_LF2
 1446  00002060  54000000	nop; delay slot nop
 1447  00002064          	L89_LF2:
 1448  00002064  8fc10004	lw	r1,4(r30)
 1449  00002068  64220000	snei	r2,r1,#0
 1450  0000206c  10400010	beqz	r2,L99_LF2
 1451  00002070  54000000	nop; delay slot nop
 1452  00002074  8fc10004	lw	r1,4(r30)
 1453  00002078  8fc20000	lw	r2,(r30)
 1454  0000207c  ac220000	sw	(r1),r2
 1455  00002080          	L99_LF2:
 1456  00002080  8fc1fff4	lw	r1,-12(r30)
 1457  00002084  8fc2ffec	lw	r2,-20(r30)
 1458  00002088  00200035	movi2fp	f0,r1
 1459  0000208c  00400835	movi2fp	f1,r2
 1460  00002090  0401000e	mult	f0,f0,f1
 1461  00002094  00000834	movfp2i	r1,f0
 1462  00002098  afc1fff4	sw	-12(r30),r1
 1463  0000209c  8fc1fff4	lw	r1,-12(r30)
 1464  000020a0  08000004	j	L72_LF2
 1465  000020a4  54000000	nop; delay slot nop
 1466  000020a8          	L72_LF2:
 1467  000020a8  8fa20000	lw	r2,0(r29)
 1468  000020ac  8fdffff8	lw	r31,-8(r30)
 1469  000020b0  001ee820	add	r29,r0,r30
 1470  000020b4  8fdefffc	lw	r30,-4(r30)
 1471  000020b8  4be00000	jr	r31
 1472  000020bc  54000000	nop
 1473  000020c0          	.endproc _dstrtol
 1474  000020c0          	.align 2
 1475  000020c0          	.proc _bcopy
 1476  000020c0          	.global _bcopy
 1477  000020c0          	_bcopy:
 1478                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1479  000020c0  afbefffc	sw	-4(r29),r30; push fp
 1480  000020c4  001df020	add	r30,r0,r29; fp = sp
 1481  000020c8  afbffff8	sw	-8(r29),r31; push ret addr
 1482  000020cc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1483  000020d0  afa20000	sw	0(r29),r2
 1484  000020d4  afa30004	sw	4(r29),r3
 1485  000020d8  54000000	nop
 1486  000020dc          	L101_LF2:
 1487  000020dc  8fc10008	lw	r1,8(r30)
 1488  000020e0  2022ffff	addi	r2,r1,#-1
 1489  000020e4  afc20008	sw	8(r30),r2
 1490  000020e8  6c210000	sgti	r1,r1,#0
 1491  000020ec  1420000c	bnez	r1,L103_LF2
 1492  000020f0  54000000	nop; delay slot nop
 1493  000020f4  0800002c	j	L102_LF2
 1494  000020f8  54000000	nop; delay slot nop
 1495  000020fc          	L103_LF2:
 1496  000020fc  8fc10004	lw	r1,4(r30)
 1497  00002100  20220001	addi	r2,r1,#1
 1498  00002104  afc20004	sw	4(r30),r2
 1499  00002108  8fc20000	lw	r2,(r30)
 1500  0000210c  20430001	addi	r3,r2,#1
 1501  00002110  afc30000	sw	(r30),r3
 1502  00002114  80420000	lb	r2,(r2)
 1503  00002118  a0220000	sb	(r1),r2
 1504  0000211c  0bffffbc	j	L101_LF2
 1505  00002120  54000000	nop; delay slot nop
 1506  00002124          	L102_LF2:
 1507  00002124          	L100_LF2:
 1508  00002124  8fa20000	lw	r2,0(r29)
 1509  00002128  8fa30004	lw	r3,4(r29)
 1510  0000212c  8fdffff8	lw	r31,-8(r30)
 1511  00002130  001ee820	add	r29,r0,r30
 1512  00002134  8fdefffc	lw	r30,-4(r30)
 1513  00002138  4be00000	jr	r31
 1514  0000213c  54000000	nop
 1515  00002140          	.endproc _bcopy
 1516  00002140          	.align 2
 1517  00002140          	.proc _bzero
 1518  00002140          	.global _bzero
 1519  00002140          	_bzero:
 1520                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1521  00002140  afbefffc	sw	-4(r29),r30; push fp
 1522  00002144  001df020	add	r30,r0,r29; fp = sp
 1523  00002148  afbffff8	sw	-8(r29),r31; push ret addr
 1524  0000214c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1525  00002150  afa20000	sw	0(r29),r2
 1526  00002154  54000000	nop
 1527  00002158          	L105_LF2:
 1528  00002158  8fc10004	lw	r1,4(r30)
 1529  0000215c  2022ffff	addi	r2,r1,#-1
 1530  00002160  afc20004	sw	4(r30),r2
 1531  00002164  6c210000	sgti	r1,r1,#0
 1532  00002168  1420000c	bnez	r1,L107_LF2
 1533  0000216c  54000000	nop; delay slot nop
 1534  00002170  08000020	j	L106_LF2
 1535  00002174  54000000	nop; delay slot nop
 1536  00002178          	L107_LF2:
 1537  00002178  8fc10000	lw	r1,(r30)
 1538  0000217c  20220001	addi	r2,r1,#1
 1539  00002180  afc20000	sw	(r30),r2
 1540  00002184  20020000	addi	r2,r0,(#0x0)&0xff
 1541  00002188  a0220000	sb	(r1),r2
 1542  0000218c  0bffffc8	j	L105_LF2
 1543  00002190  54000000	nop; delay slot nop
 1544  00002194          	L106_LF2:
 1545  00002194          	L104_LF2:
 1546  00002194  8fa20000	lw	r2,0(r29)
 1547  00002198  8fdffff8	lw	r31,-8(r30)
 1548  0000219c  001ee820	add	r29,r0,r30
 1549  000021a0  8fdefffc	lw	r30,-4(r30)
 1550  000021a4  4be00000	jr	r31
 1551  000021a8  54000000	nop
 1552  000021ac          	.endproc _bzero
 1553  000021ac          	.align 2
 1554  000021ac          	.proc _min
 1555  000021ac          	.global _min
 1556  000021ac          	_min:
 1557                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1558  000021ac  afbefffc	sw	-4(r29),r30; push fp
 1559  000021b0  001df020	add	r30,r0,r29; fp = sp
 1560  000021b4  afbffff8	sw	-8(r29),r31; push ret addr
 1561  000021b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1562  000021bc  afa20000	sw	0(r29),r2
 1563  000021c0  afa30004	sw	4(r29),r3
 1564  000021c4  8fc10000	lw	r1,(r30)
 1565  000021c8  8fc20004	lw	r2,4(r30)
 1566  000021cc  0022182c	sle	r3,r1,r2
 1567  000021d0  14600008	bnez	r3,L109_LF2
 1568  000021d4  54000000	nop; delay slot nop
 1569  000021d8  8fc10004	lw	r1,4(r30)
 1570  000021dc          	L109_LF2:
 1571  000021dc  08000004	j	L108_LF2
 1572  000021e0  54000000	nop; delay slot nop
 1573  000021e4          	L108_LF2:
 1574  000021e4  8fa20000	lw	r2,0(r29)
 1575  000021e8  8fa30004	lw	r3,4(r29)
 1576  000021ec  8fdffff8	lw	r31,-8(r30)
 1577  000021f0  001ee820	add	r29,r0,r30
 1578  000021f4  8fdefffc	lw	r30,-4(r30)
 1579  000021f8  4be00000	jr	r31
 1580  000021fc  54000000	nop
 1581  00002200          	.endproc _min
 1582  00002200          	.align 2
 1583  00002200          	.proc _max
 1584  00002200          	.global _max
 1585  00002200          	_max:
 1586                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1587  00002200  afbefffc	sw	-4(r29),r30; push fp
 1588  00002204  001df020	add	r30,r0,r29; fp = sp
 1589  00002208  afbffff8	sw	-8(r29),r31; push ret addr
 1590  0000220c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1591  00002210  afa20000	sw	0(r29),r2
 1592  00002214  afa30004	sw	4(r29),r3
 1593  00002218  8fc10000	lw	r1,(r30)
 1594  0000221c  8fc20004	lw	r2,4(r30)
 1595  00002220  0022182d	sge	r3,r1,r2
 1596  00002224  14600008	bnez	r3,L111_LF2
 1597  00002228  54000000	nop; delay slot nop
 1598  0000222c  8fc10004	lw	r1,4(r30)
 1599  00002230          	L111_LF2:
 1600  00002230  08000004	j	L110_LF2
 1601  00002234  54000000	nop; delay slot nop
 1602  00002238          	L110_LF2:
 1603  00002238  8fa20000	lw	r2,0(r29)
 1604  0000223c  8fa30004	lw	r3,4(r29)
 1605  00002240  8fdffff8	lw	r31,-8(r30)
 1606  00002244  001ee820	add	r29,r0,r30
 1607  00002248  8fdefffc	lw	r30,-4(r30)
 1608  0000224c  4be00000	jr	r31
 1609  00002250  54000000	nop
 1610  00002254          	.endproc _max
 1611                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1612                      ;;;
 1613                      ;;; Most of the traps are called in files from libtraps.
 1616  00002254          	.align 2
 1617  00002254          	.proc _exit
 1618  00002254          	.global _exit
 1619  00002254          	_exit:
 1620  00002254  44000300	trap	#0x300
 1621  00002258  4be00000	jr	r31
 1622  0000225c  54000000	nop
 1623  00002260          	.endproc _exit
 1625                      ; for the benefit of gcc.
 1626  00002260          	.proc ___main
 1627  00002260          	.global ___main
 1628  00002260          	___main:
 1629  00002260  4be00000	jr	r31
 1630  00002264  54000000	nop
 1631  00002268          	.endproc ___main
 1632  00002268          	.text
 1633  00002268          	.global _etext
 1634  00002268          	_etext:
 1635  00002268          	.align 3
 1636  00002268          	.data
 1637  000030da          	.global _edata
 1638  000030da          	_edata:
