 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 214
    4                      ; Text size: 4620
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  5300    	.ascii "S\000"
   83  00003002          	.align 2
   84  00003004          	LC1_LF0:
   85  00003004  32204f32	.ascii "2 O2\000"
   85  00003008  00      	
   86  00003009          	.align 2
   87  0000300c          	LC2_LF0:
   88  0000300c  55736167	.ascii "Usage: \000"
   88  00003010  653a2000	
   89  00003014          	.align 2
   90  00003014          	LC3_LF0:
   91  00003014  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   91  00003018  6e646c65	
   91  0000301c  5f746f5f	
   91  00003020  73686172	
   91  00003024  65645f6d	
   91  00003028  656d6f72	
   91  0000302c  795f7061	
   91  00003030  67653e20	
   91  00003034  3c68616e	
   91  00003038  646c655f	
   91  0000303c  746f5f70	
   91  00003040  6167655f	
   91  00003044  6d617070	
   91  00003048  65645f73	
   91  0000304c  656d6170	
   91  00003050  686f7265	
   91  00003054  3e0a00  	
   92  00003057          	.align 2
   93  00003058          	LC4_LF0:
   94  00003058  4572726f	.ascii "Error Opening sulfur_two mailbox.\n\000"
   94  0000305c  72204f70	
   94  00003060  656e696e	
   94  00003064  67207375	
   94  00003068  6c667572	
   94  0000306c  5f74776f	
   94  00003070  206d6169	
   94  00003074  6c626f78	
   94  00003078  2e0a00  	
   95  0000307b          	.align 2
   96  0000307c          	LC5_LF0:
   97  0000307c  25732052	.ascii "%s Recieved!\n\000"
   97  00003080  65636965	
   97  00003084  76656421	
   97  00003088  0a00    	
   98  0000308a          	.align 2
   99  0000308c          	LC6_LF0:
  100  0000308c  534f3420	.ascii "SO4 Created!\n\000"
  100  00003090  43726561	
  100  00003094  74656421	
  100  00003098  0a00    	
  101  0000309a          	.align 2
  102  0000309c          	LC7_LF0:
  103  0000309c  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  103  000030a0  73656d61	
  103  000030a4  70686f72	
  103  000030a8  6520735f	
  103  000030ac  70726f63	
  103  000030b0  735f636f	
  103  000030b4  6d706c65	
  103  000030b8  74656420	
  103  000030bc  28256429	
  103  000030c0  20696e20	
  103  000030c4  00      	
  104  000030c5          	.align 2
  105  000030c8          	LC8_LF0:
  106  000030c8  2c206578	.ascii ", exiting...\n\000"
  106  000030cc  6974696e	
  106  000030d0  672e2e2e	
  106  000030d4  0a00    	
  107  000030d6          	.text
  108  000010d4          	.align 2
  109  000010d4          	.proc _main
  110  000010d4          	.global _main
  111  000010d4          	_main:
  112                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  113  000010d4  afbefffc	sw	-4(r29),r30; push fp
  114  000010d8  001df020	add	r30,r0,r29; fp = sp
  115  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  116  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  117  000010e4  8fc20000	lw	r2,(r30)
  118  000010e8  8fc50004	lw	r5,4(r30)
  119  000010ec  0c001114	jal	___main
  120  000010f0  54000000	nop; not filled.
  121  000010f4  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  122  000010f8  24c63004	addui	r6,r6,(LC1_LF0)&0xffff
  123  000010fc  64410004	snei	r1,r2,#4
  124  00001100  1020004c	beqz	r1,L14_LF0
  125  00001104  54000000	nop; not filled.
  126  00001108  23bdfff8	addi	r29,r29,#-8
  127  0000110c  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  128  00001110  2508300c	addui	r8,r8,(LC2_LF0)&0xffff
  129  00001114  afa80000	sw	(r29),r8
  130  00001118  0c000238	jal	_Printf
  131  0000111c  54000000	nop; not filled.
  132  00001120  8ca80000	lw	r8,(r5)
  133  00001124  afa80000	sw	(r29),r8
  134  00001128  0c000228	jal	_Printf
  135  0000112c  54000000	nop; not filled.
  136  00001130  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  137  00001134  25083014	addui	r8,r8,(LC3_LF0)&0xffff
  138  00001138  afa80000	sw	(r29),r8
  139  0000113c  0c000214	jal	_Printf
  140  00001140  54000000	nop; not filled.
  141  00001144  0c000314	jal	_Exit
  142  00001148  54000000	nop; not filled.
  143  0000114c  23bd0008	addi	r29,r29,#8
  144  00001150          	L14_LF0:
  145  00001150  23bdfff0	addi	r29,r29,#-16
  146  00001154  8ca80004	lw	r8,4(r5)
  147  00001158  afa80000	sw	(r29),r8
  148  0000115c  20080000	addi	r8,r0,#0
  149  00001160  afa80004	sw	4(r29),r8
  150  00001164  2008000a	addi	r8,r0,#10
  151  00001168  afa80008	sw	8(r29),r8
  152  0000116c  0c000b98	jal	_dstrtol
  153  00001170  54000000	nop; not filled.
  154  00001174  00013820	add	r7,r0,r1
  155  00001178  8ca80008	lw	r8,8(r5)
  156  0000117c  afa80000	sw	(r29),r8
  157  00001180  20080000	addi	r8,r0,#0
  158  00001184  afa80004	sw	4(r29),r8
  159  00001188  2008000a	addi	r8,r0,#10
  160  0000118c  afa80008	sw	8(r29),r8
  161  00001190  0c000b74	jal	_dstrtol
  162  00001194  54000000	nop; not filled.
  163  00001198  00012020	add	r4,r0,r1
  164  0000119c  8ca8000c	lw	r8,12(r5)
  165  000011a0  afa80000	sw	(r29),r8
  166  000011a4  20080000	addi	r8,r0,#0
  167  000011a8  afa80004	sw	4(r29),r8
  168  000011ac  2008000a	addi	r8,r0,#10
  169  000011b0  afa80008	sw	8(r29),r8
  170  000011b4  0c000b50	jal	_dstrtol
  171  000011b8  54000000	nop; not filled.
  172  000011bc  00011820	add	r3,r0,r1
  173  000011c0  afa30000	sw	(r29),r3
  174  000011c4  0c00024c	jal	_mbox_open
  175  000011c8  54000000	nop; not filled.
  176  000011cc  23bd0010	addi	r29,r29,#16
  177  000011d0  64210000	snei	r1,r1,#0
  178  000011d4  14200028	bnez	r1,L15_LF0
  179  000011d8  54000000	nop; not filled.
  180  000011dc  23bdfff8	addi	r29,r29,#-8
  181  000011e0  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  182  000011e4  25083058	addui	r8,r8,(LC4_LF0)&0xffff
  183  000011e8  afa80000	sw	(r29),r8
  184  000011ec  0c000164	jal	_Printf
  185  000011f0  54000000	nop; not filled.
  186  000011f4  0c000264	jal	_Exit
  187  000011f8  54000000	nop; not filled.
  188  000011fc  23bd0008	addi	r29,r29,#8
  189  00001200          	L15_LF0:
  190  00001200  23bdfff0	addi	r29,r29,#-16
  191  00001204  afa30000	sw	(r29),r3
  192  00001208  20080005	addi	r8,r0,#5
  193  0000120c  afa80004	sw	4(r29),r8
  194  00001210  afa60008	sw	8(r29),r6
  195  00001214  0c000220	jal	_mbox_recv
  196  00001218  54000000	nop; not filled.
  197  0000121c  3c020000	lhi	r2,((LC5_LF0)>>16)&0xffff
  198  00001220  2442307c	addui	r2,r2,(LC5_LF0)&0xffff
  199  00001224  afa20000	sw	(r29),r2
  200  00001228  afa60004	sw	4(r29),r6
  201  0000122c  0c000124	jal	_Printf
  202  00001230  54000000	nop; not filled.
  203  00001234  afa30000	sw	(r29),r3
  204  00001238  0c0001e4	jal	_mbox_close
  205  0000123c  54000000	nop; not filled.
  206  00001240  afa40000	sw	(r29),r4
  207  00001244  0c0001cc	jal	_mbox_open
  208  00001248  54000000	nop; not filled.
  209  0000124c  afa40000	sw	(r29),r4
  210  00001250  20080002	addi	r8,r0,#2
  211  00001254  afa80004	sw	4(r29),r8
  212  00001258  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  213  0000125c  25083000	addui	r8,r8,(LC0_LF0)&0xffff
  214  00001260  afa80008	sw	8(r29),r8
  215  00001264  0c0001d0	jal	_mbox_recv
  216  00001268  54000000	nop; not filled.
  217  0000126c  afa20000	sw	(r29),r2
  218  00001270  afa60004	sw	4(r29),r6
  219  00001274  0c0000dc	jal	_Printf
  220  00001278  54000000	nop; not filled.
  221  0000127c  afa30000	sw	(r29),r3
  222  00001280  0c00019c	jal	_mbox_close
  223  00001284  54000000	nop; not filled.
  224  00001288  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  225  0000128c  2508308c	addui	r8,r8,(LC6_LF0)&0xffff
  226  00001290  afa80000	sw	(r29),r8
  227  00001294  0c0000bc	jal	_Printf
  228  00001298  54000000	nop; not filled.
  229  0000129c  afa70000	sw	(r29),r7
  230  000012a0  0c000104	jal	_sem_signal
  231  000012a4  54000000	nop; not filled.
  232  000012a8  23bd0010	addi	r29,r29,#16
  233  000012ac  64210001	snei	r1,r1,#1
  234  000012b0  10200050	beqz	r1,L16_LF0
  235  000012b4  54000000	nop; not filled.
  236  000012b8  23bdfff8	addi	r29,r29,#-8
  237  000012bc  3c080000	lhi	r8,((LC7_LF0)>>16)&0xffff
  238  000012c0  2508309c	addui	r8,r8,(LC7_LF0)&0xffff
  239  000012c4  afa80000	sw	(r29),r8
  240  000012c8  afa70004	sw	4(r29),r7
  241  000012cc  0c000084	jal	_Printf
  242  000012d0  54000000	nop; not filled.
  243  000012d4  8ca50000	lw	r5,(r5)
  244  000012d8  afa50000	sw	(r29),r5
  245  000012dc  0c000074	jal	_Printf
  246  000012e0  54000000	nop; not filled.
  247  000012e4  3c080000	lhi	r8,((LC8_LF0)>>16)&0xffff
  248  000012e8  250830c8	addui	r8,r8,(LC8_LF0)&0xffff
  249  000012ec  afa80000	sw	(r29),r8
  250  000012f0  0c000060	jal	_Printf
  251  000012f4  54000000	nop; not filled.
  252  000012f8  0c000160	jal	_Exit
  253  000012fc  54000000	nop; not filled.
  254  00001300  23bd0008	addi	r29,r29,#8
  255  00001304          	L16_LF0:
  256  00001304  0c000ef0	jal	_exit
  257  00001308  54000000	nop
  258  0000130c          	.endproc _main
  259                      ;;;
  260                      ;;; Stub functions for DLX traps.
  261                      ;;;
  262                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  263                      ;;;
  264                      ;;; The traps such as Open and Close
  265                      ;;; (note the capital letters) are for use by user programs.  The traps
  266                      ;;; with names such as open and close (lower case) are for use by the OS.
  267                      ;;;
  270  0000130c          	.align 2
  272                      ;;; The following are the traps to be used by user-level programs
  273                      ;;;
  275  0000130c          	.align 2
  276  0000130c          	.proc _Open
  277  0000130c          	.global _Open
  278  0000130c          	_Open:
  279                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  280                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  281                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  282  0000130c  44000213	trap	#0x213
  283  00001310  4be00000	jr	r31
  284  00001314  54000000	nop
  285  00001318          	.endproc _Open
  287  00001318          	.proc _Close
  288  00001318          	.global _Close
  289  00001318          	_Close:
  290  00001318  44000214	trap	#0x214
  291  0000131c  4be00000	jr	r31
  292  00001320  54000000	nop
  293  00001324          	.endproc _Close
  295  00001324          	.proc _Read
  296  00001324          	.global _Read
  297  00001324          	_Read:
  298  00001324  44000210	trap	#0x210
  299  00001328  4be00000	jr	r31
  300  0000132c  54000000	nop
  301  00001330          	.endproc _Read
  303  00001330          	.proc _Write
  304  00001330          	.global _Write
  305  00001330          	_Write:
  306  00001330  44000211	trap	#0x211
  307  00001334  4be00000	jr	r31
  308  00001338  54000000	nop
  309  0000133c          	.endproc _Write
  311  0000133c          	.proc _Lseek
  312  0000133c          	.global _Lseek
  313  0000133c          	_Lseek:
  314  0000133c  44000212	trap	#0x212
  315  00001340  4be00000	jr	r31
  316  00001344  54000000	nop
  317  00001348          	.endproc _Lseek
  319  00001348          	.proc _Putchar
  320  00001348          	.global _Putchar
  321  00001348          	_Putchar:
  322  00001348  44000280	trap	#0x280
  323  0000134c  4be00000	jr	r31
  324  00001350  54000000	nop
  325  00001354          	.endproc _Putchar
  327  00001354          	.proc _Printf
  328  00001354          	.global _Printf
  329  00001354          	_Printf:
  330  00001354  44000201	trap	#0x201
  331  00001358  4be00000	jr	r31
  332  0000135c  54000000	nop
  333  00001360          	.endproc _Printf
  335  00001360          	.proc _getpid
  336  00001360          	.global _getpid
  337  00001360          	_getpid:
  338  00001360  44000431	trap	#0x431
  339  00001364  4be00000	jr	r31
  340  00001368  54000000	nop
  341  0000136c          	.endproc _getpid
  343  0000136c          	.proc _process_create
  344  0000136c          	.global _process_create
  345  0000136c          	_process_create:
  346  0000136c  44000432	trap	#0x432
  347  00001370  4be00000	jr	r31
  348  00001374  54000000	nop
  349  00001378          	.endproc _process_create
  351  00001378          	.proc _shmget
  352  00001378          	.global _shmget
  353  00001378          	_shmget:
  354  00001378  44000440	trap	#0x440
  355  0000137c  4be00000	jr	r31
  356  00001380  54000000	nop
  357  00001384          	.endproc _shmget
  359  00001384          	.proc _shmat
  360  00001384          	.global _shmat
  361  00001384          	_shmat:
  362  00001384  44000441	trap	#0x441
  363  00001388  4be00000	jr	r31
  364  0000138c  54000000	nop
  365  00001390          	.endproc _shmat
  367  00001390          	.proc _sem_create
  368  00001390          	.global _sem_create
  369  00001390          	_sem_create:
  370  00001390  44000450	trap	#0x450
  371  00001394  4be00000	jr	r31
  372  00001398  54000000	nop
  373  0000139c          	.endproc _sem_create
  375  0000139c          	.proc _sem_wait
  376  0000139c          	.global _sem_wait
  377  0000139c          	_sem_wait:
  378  0000139c  44000451	trap	#0x451
  379  000013a0  4be00000	jr	r31
  380  000013a4  54000000	nop
  381  000013a8          	.endproc _sem_wait
  383  000013a8          	.proc _sem_signal
  384  000013a8          	.global _sem_signal
  385  000013a8          	_sem_signal:
  386  000013a8  44000452	trap	#0x452
  387  000013ac  4be00000	jr	r31
  388  000013b0  54000000	nop
  389  000013b4          	.endproc _sem_signal
  391  000013b4          	.proc _lock_create
  392  000013b4          	.global _lock_create
  393  000013b4          	_lock_create:
  394  000013b4  44000453	trap	#0x453
  395  000013b8  4be00000	jr	r31
  396  000013bc  54000000	nop
  397  000013c0          	.endproc _lock_create
  399  000013c0          	.proc _lock_acquire
  400  000013c0          	.global _lock_acquire
  401  000013c0          	_lock_acquire:
  402  000013c0  44000454	trap	#0x454
  403  000013c4  4be00000	jr	r31
  404  000013c8  54000000	nop
  405  000013cc          	.endproc _lock_acquire
  407  000013cc          	.proc _lock_release
  408  000013cc          	.global _lock_release
  409  000013cc          	_lock_release:
  410  000013cc  44000455	trap	#0x455
  411  000013d0  4be00000	jr	r31
  412  000013d4  54000000	nop
  413  000013d8          	.endproc _lock_release
  415  000013d8          	.proc _cond_create
  416  000013d8          	.global _cond_create
  417  000013d8          	_cond_create:
  418  000013d8  44000456	trap	#0x456
  419  000013dc  4be00000	jr	r31
  420  000013e0  54000000	nop
  421  000013e4          	.endproc _cond_create
  423  000013e4          	.proc _cond_wait
  424  000013e4          	.global _cond_wait
  425  000013e4          	_cond_wait:
  426  000013e4  44000457	trap	#0x457
  427  000013e8  4be00000	jr	r31
  428  000013ec  54000000	nop
  429  000013f0          	.endproc _cond_wait
  431  000013f0          	.proc _cond_signal
  432  000013f0          	.global _cond_signal
  433  000013f0          	_cond_signal:
  434  000013f0  44000458	trap	#0x458
  435  000013f4  4be00000	jr	r31
  436  000013f8  54000000	nop
  437  000013fc          	.endproc _cond_signal
  439  000013fc          	.proc _cond_broadcast
  440  000013fc          	.global _cond_broadcast
  441  000013fc          	_cond_broadcast:
  442  000013fc  44000459	trap	#0x459
  443  00001400  4be00000	jr	r31
  444  00001404  54000000	nop
  445  00001408          	.endproc _cond_broadcast
  447  00001408          	.proc _mbox_create
  448  00001408          	.global _mbox_create
  449  00001408          	_mbox_create:
  450  00001408  44000460	trap	#0x460
  451  0000140c  4be00000	jr	r31
  452  00001410  54000000	nop
  453  00001414          	.endproc _mbox_create
  455  00001414          	.proc _mbox_open
  456  00001414          	.global _mbox_open
  457  00001414          	_mbox_open:
  458  00001414  44000461	trap	#0x461
  459  00001418  4be00000	jr	r31
  460  0000141c  54000000	nop
  461  00001420          	.endproc _mbox_open
  463  00001420          	.proc _mbox_close
  464  00001420          	.global _mbox_close
  465  00001420          	_mbox_close:
  466  00001420  44000462	trap	#0x462
  467  00001424  4be00000	jr	r31
  468  00001428  54000000	nop
  469  0000142c          	.endproc _mbox_close
  471  0000142c          	.proc _mbox_send
  472  0000142c          	.global _mbox_send
  473  0000142c          	_mbox_send:
  474  0000142c  44000463	trap	#0x463
  475  00001430  4be00000	jr	r31
  476  00001434  54000000	nop
  477  00001438          	.endproc _mbox_send
  479  00001438          	.proc _mbox_recv
  480  00001438          	.global _mbox_recv
  481  00001438          	_mbox_recv:
  482  00001438  44000464	trap	#0x464
  483  0000143c  4be00000	jr	r31
  484  00001440  54000000	nop
  485  00001444          	.endproc _mbox_recv
  487  00001444          	.proc _sleep
  488  00001444          	.global _sleep
  489  00001444          	_sleep:
  490  00001444  44000465	trap	#0x465
  491  00001448  4be00000	jr	r31
  492  0000144c  54000000	nop
  493  00001450          	.endproc _sleep
  495  00001450          	.proc _yield
  496  00001450          	.global _yield
  497  00001450          	_yield:
  498  00001450  44000466	trap	#0x466
  499  00001454  4be00000	jr	r31
  500  00001458  54000000	nop
  501  0000145c          	.endproc _yield
  504  0000145c          	.proc _Exit
  505  0000145c          	.global _Exit
  506  0000145c          	_Exit:
  507  0000145c  44000500	trap	#0x500
  508  00001460  4be00000	jr	r31
  509  00001464  54000000	nop
  510  00001468          	.endproc _Exit
  511                      ; Compiled by GCC
  513  00001468          	.align 2
  514  00001468          	.proc _isspace
  515  00001468          	.global _isspace
  516  00001468          	_isspace:
  517                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  518  00001468  afbefffc	sw	-4(r29),r30; push fp
  519  0000146c  001df020	add	r30,r0,r29; fp = sp
  520  00001470  afbffff8	sw	-8(r29),r31; push ret addr
  521  00001474  2fbd0018	subui	r29,r29,#24; alloc local storage
  522  00001478  afa20000	sw	0(r29),r2
  523  0000147c  afa30004	sw	4(r29),r3
  524  00001480  afa40008	sw	8(r29),r4
  525  00001484  83c20003	lb	r2,3(r30)
  526  00001488  20010000	addi	r1,r0,#0
  527  0000148c  304300ff	andi	r3,r2,#0x00ff
  528  00001490  60640020	seqi	r4,r3,#32
  529  00001494  1480002c	bnez	r4,L3_LF2
  530  00001498  54000000	nop; delay slot nop
  531  0000149c  304300ff	andi	r3,r2,#0x00ff
  532  000014a0  60640009	seqi	r4,r3,#9
  533  000014a4  1480001c	bnez	r4,L3_LF2
  534  000014a8  54000000	nop; delay slot nop
  535  000014ac  304300ff	andi	r3,r2,#0x00ff
  536  000014b0  6064000a	seqi	r4,r3,#10
  537  000014b4  1480000c	bnez	r4,L3_LF2
  538  000014b8  54000000	nop; delay slot nop
  539  000014bc  08000008	j	L2_LF2
  540  000014c0  54000000	nop; delay slot nop
  541  000014c4          	L3_LF2:
  542  000014c4  20010001	addi	r1,r0,#1
  543  000014c8          	L2_LF2:
  544  000014c8  08000004	j	L1_LF2
  545  000014cc  54000000	nop; delay slot nop
  546  000014d0          	L1_LF2:
  547  000014d0  8fa20000	lw	r2,0(r29)
  548  000014d4  8fa30004	lw	r3,4(r29)
  549  000014d8  8fa40008	lw	r4,8(r29)
  550  000014dc  8fdffff8	lw	r31,-8(r30)
  551  000014e0  001ee820	add	r29,r0,r30
  552  000014e4  8fdefffc	lw	r30,-4(r30)
  553  000014e8  4be00000	jr	r31
  554  000014ec  54000000	nop
  555  000014f0          	.endproc _isspace
  556  000014f0          	.align 2
  557  000014f0          	.proc _isxdigit
  558  000014f0          	.global _isxdigit
  559  000014f0          	_isxdigit:
  560                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  561  000014f0  afbefffc	sw	-4(r29),r30; push fp
  562  000014f4  001df020	add	r30,r0,r29; fp = sp
  563  000014f8  afbffff8	sw	-8(r29),r31; push ret addr
  564  000014fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  565  00001500  afa20000	sw	0(r29),r2
  566  00001504  afa30004	sw	4(r29),r3
  567  00001508  afa40008	sw	8(r29),r4
  568  0000150c  83c20003	lb	r2,3(r30)
  569  00001510  20010000	addi	r1,r0,#0
  570  00001514  304300ff	andi	r3,r2,#0x00ff
  571  00001518  6c64002f	sgtui	r4,r3,#47
  572  0000151c  1080001c	beqz	r4,L7_LF2
  573  00001520  54000000	nop; delay slot nop
  574  00001524  304300ff	andi	r3,r2,#0x00ff
  575  00001528  70640039	sleui	r4,r3,#57
  576  0000152c  1480005c	bnez	r4,L6_LF2
  577  00001530  54000000	nop; delay slot nop
  578  00001534  08000004	j	L7_LF2
  579  00001538  54000000	nop; delay slot nop
  580  0000153c          	L7_LF2:
  581  0000153c  304300ff	andi	r3,r2,#0x00ff
  582  00001540  6c640060	sgtui	r4,r3,#96
  583  00001544  1080001c	beqz	r4,L8_LF2
  584  00001548  54000000	nop; delay slot nop
  585  0000154c  304300ff	andi	r3,r2,#0x00ff
  586  00001550  70640066	sleui	r4,r3,#102
  587  00001554  14800034	bnez	r4,L6_LF2
  588  00001558  54000000	nop; delay slot nop
  589  0000155c  08000004	j	L8_LF2
  590  00001560  54000000	nop; delay slot nop
  591  00001564          	L8_LF2:
  592  00001564  304300ff	andi	r3,r2,#0x00ff
  593  00001568  6c640040	sgtui	r4,r3,#64
  594  0000156c  10800020	beqz	r4,L5_LF2
  595  00001570  54000000	nop; delay slot nop
  596  00001574  304300ff	andi	r3,r2,#0x00ff
  597  00001578  70640041	sleui	r4,r3,#65
  598  0000157c  1480000c	bnez	r4,L6_LF2
  599  00001580  54000000	nop; delay slot nop
  600  00001584  08000008	j	L5_LF2
  601  00001588  54000000	nop; delay slot nop
  602  0000158c          	L6_LF2:
  603  0000158c  20010001	addi	r1,r0,#1
  604  00001590          	L5_LF2:
  605  00001590  08000004	j	L4_LF2
  606  00001594  54000000	nop; delay slot nop
  607  00001598          	L4_LF2:
  608  00001598  8fa20000	lw	r2,0(r29)
  609  0000159c  8fa30004	lw	r3,4(r29)
  610  000015a0  8fa40008	lw	r4,8(r29)
  611  000015a4  8fdffff8	lw	r31,-8(r30)
  612  000015a8  001ee820	add	r29,r0,r30
  613  000015ac  8fdefffc	lw	r30,-4(r30)
  614  000015b0  4be00000	jr	r31
  615  000015b4  54000000	nop
  616  000015b8          	.endproc _isxdigit
  617  000015b8          	.align 2
  618  000015b8          	.proc _dstrcpy
  619  000015b8          	.global _dstrcpy
  620  000015b8          	_dstrcpy:
  621                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  622  000015b8  afbefffc	sw	-4(r29),r30; push fp
  623  000015bc  001df020	add	r30,r0,r29; fp = sp
  624  000015c0  afbffff8	sw	-8(r29),r31; push ret addr
  625  000015c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  626  000015c8  afa20000	sw	0(r29),r2
  627  000015cc  afa30004	sw	4(r29),r3
  628  000015d0  8fc10000	lw	r1,(r30)
  629  000015d4  afc1fff4	sw	-12(r30),r1
  630  000015d8          	L10_LF2:
  631  000015d8  8fc10000	lw	r1,(r30)
  632  000015dc  20220001	addi	r2,r1,#1
  633  000015e0  afc20000	sw	(r30),r2
  634  000015e4  8fc20004	lw	r2,4(r30)
  635  000015e8  20430001	addi	r3,r2,#1
  636  000015ec  afc30004	sw	4(r30),r3
  637  000015f0  80420000	lb	r2,(r2)
  638  000015f4  a0220000	sb	(r1),r2
  639  000015f8  a3c2fff3	sb	-13(r30),r2
  640  000015fc          	L12_LF2:
  641  000015fc  93c1fff3	lbu	r1,-13(r30)
  642  00001600  64220000	snei	r2,r1,#0
  643  00001604  1440000c	bnez	r2,L13_LF2
  644  00001608  54000000	nop; delay slot nop
  645  0000160c  0800000c	j	L11_LF2
  646  00001610  54000000	nop; delay slot nop
  647  00001614          	L13_LF2:
  648  00001614  0bffffc0	j	L10_LF2
  649  00001618  54000000	nop; delay slot nop
  650  0000161c          	L11_LF2:
  651  0000161c  8fc1fff4	lw	r1,-12(r30)
  652  00001620  08000004	j	L9_LF2
  653  00001624  54000000	nop; delay slot nop
  654  00001628          	L9_LF2:
  655  00001628  8fa20000	lw	r2,0(r29)
  656  0000162c  8fa30004	lw	r3,4(r29)
  657  00001630  8fdffff8	lw	r31,-8(r30)
  658  00001634  001ee820	add	r29,r0,r30
  659  00001638  8fdefffc	lw	r30,-4(r30)
  660  0000163c  4be00000	jr	r31
  661  00001640  54000000	nop
  662  00001644          	.endproc _dstrcpy
  663  00001644          	.align 2
  664  00001644          	.proc _dstrncpy
  665  00001644          	.global _dstrncpy
  666  00001644          	_dstrncpy:
  667                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  668  00001644  afbefffc	sw	-4(r29),r30; push fp
  669  00001648  001df020	add	r30,r0,r29; fp = sp
  670  0000164c  afbffff8	sw	-8(r29),r31; push ret addr
  671  00001650  2fbd0018	subui	r29,r29,#24; alloc local storage
  672  00001654  afa20000	sw	0(r29),r2
  673  00001658  afa30004	sw	4(r29),r3
  674  0000165c  8fc10000	lw	r1,(r30)
  675  00001660  afc1fff4	sw	-12(r30),r1
  676  00001664          	L15_LF2:
  677  00001664  8fc10008	lw	r1,8(r30)
  678  00001668  2022ffff	addi	r2,r1,#-1
  679  0000166c  afc20008	sw	8(r30),r2
  680  00001670  70210000	slei	r1,r1,#0
  681  00001674  1020000c	beqz	r1,L18_LF2
  682  00001678  54000000	nop; delay slot nop
  683  0000167c  08000048	j	L16_LF2
  684  00001680  54000000	nop; delay slot nop
  685  00001684          	L18_LF2:
  686  00001684  8fc10000	lw	r1,(r30)
  687  00001688  20220001	addi	r2,r1,#1
  688  0000168c  afc20000	sw	(r30),r2
  689  00001690  8fc20004	lw	r2,4(r30)
  690  00001694  20430001	addi	r3,r2,#1
  691  00001698  afc30004	sw	4(r30),r3
  692  0000169c  80420000	lb	r2,(r2)
  693  000016a0  a0220000	sb	(r1),r2
  694  000016a4  a3c2fff3	sb	-13(r30),r2
  695  000016a8          	L17_LF2:
  696  000016a8  93c1fff3	lbu	r1,-13(r30)
  697  000016ac  64220000	snei	r2,r1,#0
  698  000016b0  1440000c	bnez	r2,L19_LF2
  699  000016b4  54000000	nop; delay slot nop
  700  000016b8  0800000c	j	L16_LF2
  701  000016bc  54000000	nop; delay slot nop
  702  000016c0          	L19_LF2:
  703  000016c0  0bffffa0	j	L15_LF2
  704  000016c4  54000000	nop; delay slot nop
  705  000016c8          	L16_LF2:
  706  000016c8  8fc1fff4	lw	r1,-12(r30)
  707  000016cc  08000004	j	L14_LF2
  708  000016d0  54000000	nop; delay slot nop
  709  000016d4          	L14_LF2:
  710  000016d4  8fa20000	lw	r2,0(r29)
  711  000016d8  8fa30004	lw	r3,4(r29)
  712  000016dc  8fdffff8	lw	r31,-8(r30)
  713  000016e0  001ee820	add	r29,r0,r30
  714  000016e4  8fdefffc	lw	r30,-4(r30)
  715  000016e8  4be00000	jr	r31
  716  000016ec  54000000	nop
  717  000016f0          	.endproc _dstrncpy
  718  000016f0          	.align 2
  719  000016f0          	.proc _dstrcat
  720  000016f0          	.global _dstrcat
  721  000016f0          	_dstrcat:
  722                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  723  000016f0  afbefffc	sw	-4(r29),r30; push fp
  724  000016f4  001df020	add	r30,r0,r29; fp = sp
  725  000016f8  afbffff8	sw	-8(r29),r31; push ret addr
  726  000016fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  727  00001700  afa20000	sw	0(r29),r2
  728  00001704  8fc10000	lw	r1,(r30)
  729  00001708  afc1fff4	sw	-12(r30),r1
  730  0000170c          	L21_LF2:
  731  0000170c  8fc10000	lw	r1,(r30)
  732  00001710  90220000	lbu	r2,(r1)
  733  00001714  64410000	snei	r1,r2,#0
  734  00001718  1420000c	bnez	r1,L23_LF2
  735  0000171c  54000000	nop; delay slot nop
  736  00001720  0800001c	j	L22_LF2
  737  00001724  54000000	nop; delay slot nop
  738  00001728          	L23_LF2:
  739  00001728  8fc20000	lw	r2,(r30)
  740  0000172c  20410001	addi	r1,r2,#1
  741  00001730  00011020	add	r2,r0,r1
  742  00001734  afc20000	sw	(r30),r2
  743  00001738  0bffffd0	j	L21_LF2
  744  0000173c  54000000	nop; delay slot nop
  745  00001740          	L22_LF2:
  746  00001740  23bdfff8	addi	r29,r29,#-8
  747  00001744  001d0820	add	r1,r0,r29
  748  00001748  8fc20000	lw	r2,(r30)
  749  0000174c  ac220000	sw	(r1),r2
  750  00001750  8fc20004	lw	r2,4(r30)
  751  00001754  ac220004	sw	4(r1),r2
  752  00001758  0ffffe5c	jal	_dstrcpy
  753  0000175c  54000000	nop; delay slot nop
  754  00001760  23bd0008	addi	r29,r29,#8
  755  00001764  8fc1fff4	lw	r1,-12(r30)
  756  00001768  08000004	j	L20_LF2
  757  0000176c  54000000	nop; delay slot nop
  758  00001770          	L20_LF2:
  759  00001770  8fa20000	lw	r2,0(r29)
  760  00001774  8fdffff8	lw	r31,-8(r30)
  761  00001778  001ee820	add	r29,r0,r30
  762  0000177c  8fdefffc	lw	r30,-4(r30)
  763  00001780  4be00000	jr	r31
  764  00001784  54000000	nop
  765  00001788          	.endproc _dstrcat
  766  00001788          	.align 2
  767  00001788          	.proc _dstrncmp
  768  00001788          	.global _dstrncmp
  769  00001788          	_dstrncmp:
  770                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  771  00001788  afbefffc	sw	-4(r29),r30; push fp
  772  0000178c  001df020	add	r30,r0,r29; fp = sp
  773  00001790  afbffff8	sw	-8(r29),r31; push ret addr
  774  00001794  2fbd0018	subui	r29,r29,#24; alloc local storage
  775  00001798  afa20000	sw	0(r29),r2
  776  0000179c  afa30004	sw	4(r29),r3
  777  000017a0  54000000	nop
  778  000017a4  20010000	addi	r1,r0,#0
  779  000017a8  afc1fff4	sw	-12(r30),r1
  780  000017ac          	L25_LF2:
  781  000017ac  8fc1fff4	lw	r1,-12(r30)
  782  000017b0  8fc20008	lw	r2,8(r30)
  783  000017b4  0022082a	slt	r1,r1,r2
  784  000017b8  1420000c	bnez	r1,L28_LF2
  785  000017bc  54000000	nop; delay slot nop
  786  000017c0  08000088	j	L26_LF2
  787  000017c4  54000000	nop; delay slot nop
  788  000017c8          	L28_LF2:
  789  000017c8  8fc10004	lw	r1,4(r30)
  790  000017cc  90220000	lbu	r2,(r1)
  791  000017d0  64410000	snei	r1,r2,#0
  792  000017d4  14200018	bnez	r1,L29_LF2
  793  000017d8  54000000	nop; delay slot nop
  794  000017dc  20010000	addi	r1,r0,#0
  795  000017e0  080000d8	j	L24_LF2
  796  000017e4  54000000	nop; delay slot nop
  797  000017e8  08000028	j	L30_LF2
  798  000017ec  54000000	nop; delay slot nop
  799  000017f0          	L29_LF2:
  800  000017f0  8fc10000	lw	r1,(r30)
  801  000017f4  8fc20004	lw	r2,4(r30)
  802  000017f8  90210000	lbu	r1,(r1)
  803  000017fc  90420000	lbu	r2,(r2)
  804  00001800  00220829	sne	r1,r1,r2
  805  00001804  1020000c	beqz	r1,L30_LF2
  806  00001808  54000000	nop; delay slot nop
  807  0000180c  0800003c	j	L26_LF2
  808  00001810  54000000	nop; delay slot nop
  809  00001814          	L31_LF2:
  810  00001814          	L30_LF2:
  811  00001814  8fc20000	lw	r2,(r30)
  812  00001818  20410001	addi	r1,r2,#1
  813  0000181c  00011020	add	r2,r0,r1
  814  00001820  afc20000	sw	(r30),r2
  815  00001824  8fc20004	lw	r2,4(r30)
  816  00001828  20410001	addi	r1,r2,#1
  817  0000182c  00011020	add	r2,r0,r1
  818  00001830  afc20004	sw	4(r30),r2
  819  00001834          	L27_LF2:
  820  00001834  8fc2fff4	lw	r2,-12(r30)
  821  00001838  20410001	addi	r1,r2,#1
  822  0000183c  00011020	add	r2,r0,r1
  823  00001840  afc2fff4	sw	-12(r30),r2
  824  00001844  0bffff64	j	L25_LF2
  825  00001848  54000000	nop; delay slot nop
  826  0000184c          	L26_LF2:
  827  0000184c  8fc1fff4	lw	r1,-12(r30)
  828  00001850  8fc20008	lw	r2,8(r30)
  829  00001854  00220828	seq	r1,r1,r2
  830  00001858  10200018	beqz	r1,L32_LF2
  831  0000185c  54000000	nop; delay slot nop
  832  00001860  20010000	addi	r1,r0,#0
  833  00001864  08000054	j	L24_LF2
  834  00001868  54000000	nop; delay slot nop
  835  0000186c  0800004c	j	L33_LF2
  836  00001870  54000000	nop; delay slot nop
  837  00001874          	L32_LF2:
  838  00001874  8fc20000	lw	r2,(r30)
  839  00001878  90410000	lbu	r1,(r2)
  840  0000187c  8fc20004	lw	r2,4(r30)
  841  00001880  90430000	lbu	r3,(r2)
  842  00001884  00230822	sub	r1,r1,r3
  843  00001888  74220000	sgei	r2,r1,#0
  844  0000188c  10400020	beqz	r2,L34_LF2
  845  00001890  54000000	nop; delay slot nop
  846  00001894  8fc10000	lw	r1,(r30)
  847  00001898  8fc20004	lw	r2,4(r30)
  848  0000189c  90210000	lbu	r1,(r1)
  849  000018a0  90420000	lbu	r2,(r2)
  850  000018a4  00220829	sne	r1,r1,r2
  851  000018a8  08000008	j	L35_LF2
  852  000018ac  54000000	nop; delay slot nop
  853  000018b0          	L34_LF2:
  854  000018b0  2001ffff	addi	r1,r0,#-1
  855  000018b4          	L35_LF2:
  856  000018b4  08000004	j	L24_LF2
  857  000018b8  54000000	nop; delay slot nop
  858  000018bc          	L33_LF2:
  859  000018bc          	L24_LF2:
  860  000018bc  8fa20000	lw	r2,0(r29)
  861  000018c0  8fa30004	lw	r3,4(r29)
  862  000018c4  8fdffff8	lw	r31,-8(r30)
  863  000018c8  001ee820	add	r29,r0,r30
  864  000018cc  8fdefffc	lw	r30,-4(r30)
  865  000018d0  4be00000	jr	r31
  866  000018d4  54000000	nop
  867  000018d8          	.endproc _dstrncmp
  868  000018d8          	.align 2
  869  000018d8          	.proc _dstrlen
  870  000018d8          	.global _dstrlen
  871  000018d8          	_dstrlen:
  872                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  873  000018d8  afbefffc	sw	-4(r29),r30; push fp
  874  000018dc  001df020	add	r30,r0,r29; fp = sp
  875  000018e0  afbffff8	sw	-8(r29),r31; push ret addr
  876  000018e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  877  000018e8  afa20000	sw	0(r29),r2
  878  000018ec  20010000	addi	r1,r0,#0
  879  000018f0  afc1fff4	sw	-12(r30),r1
  880  000018f4          	L37_LF2:
  881  000018f4  8fc10000	lw	r1,(r30)
  882  000018f8  20220001	addi	r2,r1,#1
  883  000018fc  afc20000	sw	(r30),r2
  884  00001900  90210000	lbu	r1,(r1)
  885  00001904  64220000	snei	r2,r1,#0
  886  00001908  1440000c	bnez	r2,L39_LF2
  887  0000190c  54000000	nop; delay slot nop
  888  00001910  0800001c	j	L38_LF2
  889  00001914  54000000	nop; delay slot nop
  890  00001918          	L39_LF2:
  891  00001918  8fc2fff4	lw	r2,-12(r30)
  892  0000191c  20410001	addi	r1,r2,#1
  893  00001920  00011020	add	r2,r0,r1
  894  00001924  afc2fff4	sw	-12(r30),r2
  895  00001928  0bffffc8	j	L37_LF2
  896  0000192c  54000000	nop; delay slot nop
  897  00001930          	L38_LF2:
  898  00001930  8fc1fff4	lw	r1,-12(r30)
  899  00001934  08000004	j	L36_LF2
  900  00001938  54000000	nop; delay slot nop
  901  0000193c          	L36_LF2:
  902  0000193c  8fa20000	lw	r2,0(r29)
  903  00001940  8fdffff8	lw	r31,-8(r30)
  904  00001944  001ee820	add	r29,r0,r30
  905  00001948  8fdefffc	lw	r30,-4(r30)
  906  0000194c  4be00000	jr	r31
  907  00001950  54000000	nop
  908  00001954          	.endproc _dstrlen
  909  00001954          	.align 2
  910  00001954          	.proc _dstrstr
  911  00001954          	.global _dstrstr
  912  00001954          	_dstrstr:
  913                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  914  00001954  afbefffc	sw	-4(r29),r30; push fp
  915  00001958  001df020	add	r30,r0,r29; fp = sp
  916  0000195c  afbffff8	sw	-8(r29),r31; push ret addr
  917  00001960  2fbd0018	subui	r29,r29,#24; alloc local storage
  918  00001964  afa20000	sw	0(r29),r2
  919  00001968  23bdfff8	addi	r29,r29,#-8
  920  0000196c  001d0820	add	r1,r0,r29
  921  00001970  8fc20004	lw	r2,4(r30)
  922  00001974  ac220000	sw	(r1),r2
  923  00001978  0fffff5c	jal	_dstrlen
  924  0000197c  54000000	nop; delay slot nop
  925  00001980  23bd0008	addi	r29,r29,#8
  926  00001984  afc1fff4	sw	-12(r30),r1
  927  00001988          	L41_LF2:
  928  00001988  8fc10000	lw	r1,(r30)
  929  0000198c  90220000	lbu	r2,(r1)
  930  00001990  64410000	snei	r1,r2,#0
  931  00001994  1420000c	bnez	r1,L43_LF2
  932  00001998  54000000	nop; delay slot nop
  933  0000199c  08000060	j	L42_LF2
  934  000019a0  54000000	nop; delay slot nop
  935  000019a4          	L43_LF2:
  936  000019a4  23bdfff0	addi	r29,r29,#-16
  937  000019a8  001d0820	add	r1,r0,r29
  938  000019ac  8fc20000	lw	r2,(r30)
  939  000019b0  ac220000	sw	(r1),r2
  940  000019b4  8fc20004	lw	r2,4(r30)
  941  000019b8  ac220004	sw	4(r1),r2
  942  000019bc  8fc2fff4	lw	r2,-12(r30)
  943  000019c0  ac220008	sw	8(r1),r2
  944  000019c4  0ffffdc0	jal	_dstrncmp
  945  000019c8  54000000	nop; delay slot nop
  946  000019cc  23bd0010	addi	r29,r29,#16
  947  000019d0  64220000	snei	r2,r1,#0
  948  000019d4  14400010	bnez	r2,L44_LF2
  949  000019d8  54000000	nop; delay slot nop
  950  000019dc  8fc10000	lw	r1,(r30)
  951  000019e0  08000028	j	L40_LF2
  952  000019e4  54000000	nop; delay slot nop
  953  000019e8          	L44_LF2:
  954  000019e8  8fc20000	lw	r2,(r30)
  955  000019ec  20410001	addi	r1,r2,#1
  956  000019f0  00011020	add	r2,r0,r1
  957  000019f4  afc20000	sw	(r30),r2
  958  000019f8  0bffff8c	j	L41_LF2
  959  000019fc  54000000	nop; delay slot nop
  960  00001a00          	L42_LF2:
  961  00001a00  20010000	addi	r1,r0,#0
  962  00001a04  08000004	j	L40_LF2
  963  00001a08  54000000	nop; delay slot nop
  964  00001a0c          	L40_LF2:
  965  00001a0c  8fa20000	lw	r2,0(r29)
  966  00001a10  8fdffff8	lw	r31,-8(r30)
  967  00001a14  001ee820	add	r29,r0,r30
  968  00001a18  8fdefffc	lw	r30,-4(r30)
  969  00001a1c  4be00000	jr	r31
  970  00001a20  54000000	nop
  971  00001a24          	.endproc _dstrstr
  972  00001a24          	.align 2
  973  00001a24          	.proc _dmindex
  974  00001a24          	.global _dmindex
  975  00001a24          	_dmindex:
  976                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  977  00001a24  afbefffc	sw	-4(r29),r30; push fp
  978  00001a28  001df020	add	r30,r0,r29; fp = sp
  979  00001a2c  afbffff8	sw	-8(r29),r31; push ret addr
  980  00001a30  2fbd0018	subui	r29,r29,#24; alloc local storage
  981  00001a34  afa20000	sw	0(r29),r2
  982  00001a38  54000000	nop
  983  00001a3c          	L46_LF2:
  984  00001a3c  8fc10000	lw	r1,(r30)
  985  00001a40  90220000	lbu	r2,(r1)
  986  00001a44  64410000	snei	r1,r2,#0
  987  00001a48  1420000c	bnez	r1,L48_LF2
  988  00001a4c  54000000	nop; delay slot nop
  989  00001a50  08000070	j	L47_LF2
  990  00001a54  54000000	nop; delay slot nop
  991  00001a58          	L48_LF2:
  992  00001a58  8fc10004	lw	r1,4(r30)
  993  00001a5c  afc1fff4	sw	-12(r30),r1
  994  00001a60          	L49_LF2:
  995  00001a60  8fc1fff4	lw	r1,-12(r30)
  996  00001a64  90220000	lbu	r2,(r1)
  997  00001a68  64410000	snei	r1,r2,#0
  998  00001a6c  1420000c	bnez	r1,L52_LF2
  999  00001a70  54000000	nop; delay slot nop
 1000  00001a74  08000044	j	L50_LF2
 1001  00001a78  54000000	nop; delay slot nop
 1002  00001a7c          	L52_LF2:
 1003  00001a7c  8fc10000	lw	r1,(r30)
 1004  00001a80  8fc2fff4	lw	r2,-12(r30)
 1005  00001a84  90210000	lbu	r1,(r1)
 1006  00001a88  90420000	lbu	r2,(r2)
 1007  00001a8c  00220828	seq	r1,r1,r2
 1008  00001a90  10200010	beqz	r1,L51_LF2
 1009  00001a94  54000000	nop; delay slot nop
 1010  00001a98  8fc10000	lw	r1,(r30)
 1011  00001a9c  08000030	j	L45_LF2
 1012  00001aa0  54000000	nop; delay slot nop
 1013  00001aa4          	L53_LF2:
 1014  00001aa4          	L51_LF2:
 1015  00001aa4  8fc2fff4	lw	r2,-12(r30)
 1016  00001aa8  20410001	addi	r1,r2,#1
 1017  00001aac  00011020	add	r2,r0,r1
 1018  00001ab0  afc2fff4	sw	-12(r30),r2
 1019  00001ab4  0bffffa8	j	L49_LF2
 1020  00001ab8  54000000	nop; delay slot nop
 1021  00001abc          	L50_LF2:
 1022  00001abc  0bffff7c	j	L46_LF2
 1023  00001ac0  54000000	nop; delay slot nop
 1024  00001ac4          	L47_LF2:
 1025  00001ac4  20010000	addi	r1,r0,#0
 1026  00001ac8  08000004	j	L45_LF2
 1027  00001acc  54000000	nop; delay slot nop
 1028  00001ad0          	L45_LF2:
 1029  00001ad0  8fa20000	lw	r2,0(r29)
 1030  00001ad4  8fdffff8	lw	r31,-8(r30)
 1031  00001ad8  001ee820	add	r29,r0,r30
 1032  00001adc  8fdefffc	lw	r30,-4(r30)
 1033  00001ae0  4be00000	jr	r31
 1034  00001ae4  54000000	nop
 1035  00001ae8          	.endproc _dmindex
 1036  00001ae8          	.align 2
 1037  00001ae8          	.proc _dindex
 1038  00001ae8          	.global _dindex
 1039  00001ae8          	_dindex:
 1040                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1041  00001ae8  afbefffc	sw	-4(r29),r30; push fp
 1042  00001aec  001df020	add	r30,r0,r29; fp = sp
 1043  00001af0  afbffff8	sw	-8(r29),r31; push ret addr
 1044  00001af4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1045  00001af8  afa20000	sw	0(r29),r2
 1046  00001afc  54000000	nop
 1047  00001b00          	L55_LF2:
 1048  00001b00  8fc10000	lw	r1,(r30)
 1049  00001b04  90220000	lbu	r2,(r1)
 1050  00001b08  64410000	snei	r1,r2,#0
 1051  00001b0c  1420000c	bnez	r1,L57_LF2
 1052  00001b10  54000000	nop; delay slot nop
 1053  00001b14  08000040	j	L56_LF2
 1054  00001b18  54000000	nop; delay slot nop
 1055  00001b1c          	L57_LF2:
 1056  00001b1c  8fc10000	lw	r1,(r30)
 1057  00001b20  90220000	lbu	r2,(r1)
 1058  00001b24  8fc10004	lw	r1,4(r30)
 1059  00001b28  00411028	seq	r2,r2,r1
 1060  00001b2c  10400010	beqz	r2,L58_LF2
 1061  00001b30  54000000	nop; delay slot nop
 1062  00001b34  8fc10000	lw	r1,(r30)
 1063  00001b38  08000028	j	L54_LF2
 1064  00001b3c  54000000	nop; delay slot nop
 1065  00001b40          	L58_LF2:
 1066  00001b40  8fc20000	lw	r2,(r30)
 1067  00001b44  20410001	addi	r1,r2,#1
 1068  00001b48  00011020	add	r2,r0,r1
 1069  00001b4c  afc20000	sw	(r30),r2
 1070  00001b50  0bffffac	j	L55_LF2
 1071  00001b54  54000000	nop; delay slot nop
 1072  00001b58          	L56_LF2:
 1073  00001b58  20010000	addi	r1,r0,#0
 1074  00001b5c  08000004	j	L54_LF2
 1075  00001b60  54000000	nop; delay slot nop
 1076  00001b64          	L54_LF2:
 1077  00001b64  8fa20000	lw	r2,0(r29)
 1078  00001b68  8fdffff8	lw	r31,-8(r30)
 1079  00001b6c  001ee820	add	r29,r0,r30
 1080  00001b70  8fdefffc	lw	r30,-4(r30)
 1081  00001b74  4be00000	jr	r31
 1082  00001b78  54000000	nop
 1083  00001b7c          	.endproc _dindex
 1084  00001b7c          	.align 2
 1085  00001b7c          	.proc _ditoa
 1086  00001b7c          	.global _ditoa
 1087  00001b7c          	_ditoa:
 1088                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1089  00001b7c  afbefffc	sw	-4(r29),r30; push fp
 1090  00001b80  001df020	add	r30,r0,r29; fp = sp
 1091  00001b84  afbffff8	sw	-8(r29),r31; push ret addr
 1092  00001b88  2fbd0018	subui	r29,r29,#24; alloc local storage
 1093  00001b8c  afa20000	sw	0(r29),r2
 1094  00001b90  afa30004	sw	4(r29),r3
 1095  00001b94  8fc10000	lw	r1,(r30)
 1096  00001b98  68220000	slti	r2,r1,#0
 1097  00001b9c  1040002c	beqz	r2,L60_LF2
 1098  00001ba0  54000000	nop; delay slot nop
 1099  00001ba4  8fc10004	lw	r1,4(r30)
 1100  00001ba8  20220001	addi	r2,r1,#1
 1101  00001bac  afc20004	sw	4(r30),r2
 1102  00001bb0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1103  00001bb4  a0220000	sb	(r1),r2
 1104  00001bb8  8fc10000	lw	r1,(r30)
 1105  00001bbc  00011022	sub	r2,r0,r1
 1106  00001bc0  afc20000	sw	(r30),r2
 1107  00001bc4  08000118	j	L61_LF2
 1108  00001bc8  54000000	nop; delay slot nop
 1109  00001bcc          	L60_LF2:
 1110  00001bcc  8fc10000	lw	r1,(r30)
 1111  00001bd0  64220000	snei	r2,r1,#0
 1112  00001bd4  14400020	bnez	r2,L62_LF2
 1113  00001bd8  54000000	nop; delay slot nop
 1114  00001bdc  8fc10004	lw	r1,4(r30)
 1115  00001be0  20220001	addi	r2,r1,#1
 1116  00001be4  afc20004	sw	4(r30),r2
 1117  00001be8  20020030	addi	r2,r0,(#0x30)&0xff
 1118  00001bec  a0220000	sb	(r1),r2
 1119  00001bf0  080000ec	j	L61_LF2
 1120  00001bf4  54000000	nop; delay slot nop
 1121  00001bf8          	L62_LF2:
 1122  00001bf8  20010001	addi	r1,r0,#1
 1123  00001bfc  afc1fff4	sw	-12(r30),r1
 1124  00001c00          	L64_LF2:
 1125  00001c00  8fc1fff4	lw	r1,-12(r30)
 1126  00001c04  8fc20000	lw	r2,(r30)
 1127  00001c08  0022082c	sle	r1,r1,r2
 1128  00001c0c  1420000c	bnez	r1,L66_LF2
 1129  00001c10  54000000	nop; delay slot nop
 1130  00001c14  08000024	j	L65_LF2
 1131  00001c18  54000000	nop; delay slot nop
 1132  00001c1c          	L67_LF2:
 1133  00001c1c          	L66_LF2:
 1134  00001c1c  8fc1fff4	lw	r1,-12(r30)
 1135  00001c20  00011820	add	r3,r0,r1
 1136  00001c24  50620002	slli	r2,r3,#0x2
 1137  00001c28  00411020	add	r2,r2,r1
 1138  00001c2c  50410001	slli	r1,r2,#0x1
 1139  00001c30  afc1fff4	sw	-12(r30),r1
 1140  00001c34  0bffffc8	j	L64_LF2
 1141  00001c38  54000000	nop; delay slot nop
 1142  00001c3c          	L65_LF2:
 1143  00001c3c  54000000	nop
 1144  00001c40          	L68_LF2:
 1145  00001c40  8fc1fff4	lw	r1,-12(r30)
 1146  00001c44  2002000a	addi	r2,r0,#10
 1147  00001c48  00200035	movi2fp	f0,r1
 1148  00001c4c  00400835	movi2fp	f1,r2
 1149  00001c50  0401000f	div	f0,f0,f1
 1150  00001c54  00000834	movfp2i	r1,f0
 1151  00001c58  afc1fff4	sw	-12(r30),r1
 1152  00001c5c  8fc10004	lw	r1,4(r30)
 1153  00001c60  20220001	addi	r2,r1,#1
 1154  00001c64  afc20004	sw	4(r30),r2
 1155  00001c68  8fc20000	lw	r2,(r30)
 1156  00001c6c  8fc3fff4	lw	r3,-12(r30)
 1157  00001c70  00400035	movi2fp	f0,r2
 1158  00001c74  00600835	movi2fp	f1,r3
 1159  00001c78  0401000f	div	f0,f0,f1
 1160  00001c7c  00001034	movfp2i	r2,f0
 1161  00001c80  00021820	add	r3,r0,r2
 1162  00001c84  20620030	addi	r2,r3,#48
 1163  00001c88  a0220000	sb	(r1),r2
 1164  00001c8c  8fc10000	lw	r1,(r30)
 1165  00001c90  8fc3fff4	lw	r3,-12(r30)
 1166  00001c94  00200035	movi2fp	f0,r1
 1167  00001c98  00600835	movi2fp	f1,r3
 1168  00001c9c  0401000f	div	f0,f0,f1
 1169  00001ca0  00001034	movfp2i	r2,f0
 1170  00001ca4  8fc3fff4	lw	r3,-12(r30)
 1171  00001ca8  00400035	movi2fp	f0,r2
 1172  00001cac  00600835	movi2fp	f1,r3
 1173  00001cb0  0401000e	mult	f0,f0,f1
 1174  00001cb4  00001034	movfp2i	r2,f0
 1175  00001cb8  00220822	sub	r1,r1,r2
 1176  00001cbc  afc10000	sw	(r30),r1
 1177  00001cc0          	L70_LF2:
 1178  00001cc0  8fc1fff4	lw	r1,-12(r30)
 1179  00001cc4  6c220001	sgti	r2,r1,#1
 1180  00001cc8  1440000c	bnez	r2,L71_LF2
 1181  00001ccc  54000000	nop; delay slot nop
 1182  00001cd0  0800000c	j	L61_LF2
 1183  00001cd4  54000000	nop; delay slot nop
 1184  00001cd8          	L71_LF2:
 1185  00001cd8  0bffff64	j	L68_LF2
 1186  00001cdc  54000000	nop; delay slot nop
 1187  00001ce0          	L69_LF2:
 1188  00001ce0          	L63_LF2:
 1189  00001ce0          	L61_LF2:
 1190  00001ce0  8fc10004	lw	r1,4(r30)
 1191  00001ce4  20020000	addi	r2,r0,(#0x0)&0xff
 1192  00001ce8  a0220000	sb	(r1),r2
 1193  00001cec          	L59_LF2:
 1194  00001cec  8fa20000	lw	r2,0(r29)
 1195  00001cf0  8fa30004	lw	r3,4(r29)
 1196  00001cf4  8fdffff8	lw	r31,-8(r30)
 1197  00001cf8  001ee820	add	r29,r0,r30
 1198  00001cfc  8fdefffc	lw	r30,-4(r30)
 1199  00001d00  4be00000	jr	r31
 1200  00001d04  54000000	nop
 1201  00001d08          	.endproc _ditoa
 1202  00001d08          	.align 2
 1203  00001d08          	.proc _dstrtol
 1204  00001d08          	.global _dstrtol
 1205  00001d08          	_dstrtol:
 1206                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1207  00001d08  afbefffc	sw	-4(r29),r30; push fp
 1208  00001d0c  001df020	add	r30,r0,r29; fp = sp
 1209  00001d10  afbffff8	sw	-8(r29),r31; push ret addr
 1210  00001d14  2fbd0020	subui	r29,r29,#32; alloc local storage
 1211  00001d18  afa20000	sw	0(r29),r2
 1212  00001d1c  20010000	addi	r1,r0,#0
 1213  00001d20  afc1fff4	sw	-12(r30),r1
 1214  00001d24          	L73_LF2:
 1215  00001d24  8fc10000	lw	r1,(r30)
 1216  00001d28  90220000	lbu	r2,(r1)
 1217  00001d2c  60410020	seqi	r1,r2,#32
 1218  00001d30  14200034	bnez	r1,L75_LF2
 1219  00001d34  54000000	nop; delay slot nop
 1220  00001d38  8fc10000	lw	r1,(r30)
 1221  00001d3c  90220000	lbu	r2,(r1)
 1222  00001d40  60410009	seqi	r1,r2,#9
 1223  00001d44  14200020	bnez	r1,L75_LF2
 1224  00001d48  54000000	nop; delay slot nop
 1225  00001d4c  8fc10000	lw	r1,(r30)
 1226  00001d50  90220000	lbu	r2,(r1)
 1227  00001d54  6041000a	seqi	r1,r2,#10
 1228  00001d58  1420000c	bnez	r1,L75_LF2
 1229  00001d5c  54000000	nop; delay slot nop
 1230  00001d60  0800001c	j	L74_LF2
 1231  00001d64  54000000	nop; delay slot nop
 1232  00001d68          	L75_LF2:
 1233  00001d68  8fc20000	lw	r2,(r30)
 1234  00001d6c  20410001	addi	r1,r2,#1
 1235  00001d70  00011020	add	r2,r0,r1
 1236  00001d74  afc20000	sw	(r30),r2
 1237  00001d78  0bffffa8	j	L73_LF2
 1238  00001d7c  54000000	nop; delay slot nop
 1239  00001d80          	L74_LF2:
 1240  00001d80  8fc10004	lw	r1,4(r30)
 1241  00001d84  64220000	snei	r2,r1,#0
 1242  00001d88  10400010	beqz	r2,L76_LF2
 1243  00001d8c  54000000	nop; delay slot nop
 1244  00001d90  8fc10004	lw	r1,4(r30)
 1245  00001d94  8fc20000	lw	r2,(r30)
 1246  00001d98  ac220000	sw	(r1),r2
 1247  00001d9c          	L76_LF2:
 1248  00001d9c  8fc10000	lw	r1,(r30)
 1249  00001da0  90220000	lbu	r2,(r1)
 1250  00001da4  64410000	snei	r1,r2,#0
 1251  00001da8  14200010	bnez	r1,L77_LF2
 1252  00001dac  54000000	nop; delay slot nop
 1253  00001db0  8fc1fff4	lw	r1,-12(r30)
 1254  00001db4  08000294	j	L72_LF2
 1255  00001db8  54000000	nop; delay slot nop
 1256  00001dbc          	L77_LF2:
 1257  00001dbc  8fc10000	lw	r1,(r30)
 1258  00001dc0  90220000	lbu	r2,(r1)
 1259  00001dc4  6041002d	seqi	r1,r2,#45
 1260  00001dc8  10200024	beqz	r1,L78_LF2
 1261  00001dcc  54000000	nop; delay slot nop
 1262  00001dd0  2001ffff	addi	r1,r0,#-1
 1263  00001dd4  afc1ffec	sw	-20(r30),r1
 1264  00001dd8  8fc20000	lw	r2,(r30)
 1265  00001ddc  20410001	addi	r1,r2,#1
 1266  00001de0  00011020	add	r2,r0,r1
 1267  00001de4  afc20000	sw	(r30),r2
 1268  00001de8  0800000c	j	L79_LF2
 1269  00001dec  54000000	nop; delay slot nop
 1270  00001df0          	L78_LF2:
 1271  00001df0  20010001	addi	r1,r0,#1
 1272  00001df4  afc1ffec	sw	-20(r30),r1
 1273  00001df8          	L79_LF2:
 1274  00001df8  8fc10008	lw	r1,8(r30)
 1275  00001dfc  64220000	snei	r2,r1,#0
 1276  00001e00  14400090	bnez	r2,L80_LF2
 1277  00001e04  54000000	nop; delay slot nop
 1278  00001e08  8fc10000	lw	r1,(r30)
 1279  00001e0c  90220000	lbu	r2,(r1)
 1280  00001e10  60410030	seqi	r1,r2,#48
 1281  00001e14  10200074	beqz	r1,L81_LF2
 1282  00001e18  54000000	nop; delay slot nop
 1283  00001e1c  8fc20000	lw	r2,(r30)
 1284  00001e20  20410001	addi	r1,r2,#1
 1285  00001e24  00011020	add	r2,r0,r1
 1286  00001e28  afc20000	sw	(r30),r2
 1287  00001e2c  8fc10000	lw	r1,(r30)
 1288  00001e30  90220000	lbu	r2,(r1)
 1289  00001e34  60410078	seqi	r1,r2,#120
 1290  00001e38  14200020	bnez	r1,L83_LF2
 1291  00001e3c  54000000	nop; delay slot nop
 1292  00001e40  8fc10000	lw	r1,(r30)
 1293  00001e44  90220000	lbu	r2,(r1)
 1294  00001e48  60410058	seqi	r1,r2,#88
 1295  00001e4c  1420000c	bnez	r1,L83_LF2
 1296  00001e50  54000000	nop; delay slot nop
 1297  00001e54  08000024	j	L82_LF2
 1298  00001e58  54000000	nop; delay slot nop
 1299  00001e5c          	L83_LF2:
 1300  00001e5c  20010010	addi	r1,r0,#16
 1301  00001e60  afc10008	sw	8(r30),r1
 1302  00001e64  8fc20000	lw	r2,(r30)
 1303  00001e68  20410001	addi	r1,r2,#1
 1304  00001e6c  00011020	add	r2,r0,r1
 1305  00001e70  afc20000	sw	(r30),r2
 1306  00001e74  0800000c	j	L84_LF2
 1307  00001e78  54000000	nop; delay slot nop
 1308  00001e7c          	L82_LF2:
 1309  00001e7c  20010008	addi	r1,r0,#8
 1310  00001e80  afc10008	sw	8(r30),r1
 1311  00001e84          	L84_LF2:
 1312  00001e84  0800000c	j	L80_LF2
 1313  00001e88  54000000	nop; delay slot nop
 1314  00001e8c          	L81_LF2:
 1315  00001e8c  2001000a	addi	r1,r0,#10
 1316  00001e90  afc10008	sw	8(r30),r1
 1317  00001e94          	L85_LF2:
 1318  00001e94          	L80_LF2:
 1319  00001e94  8fc10008	lw	r1,8(r30)
 1320  00001e98  70220000	slei	r2,r1,#0
 1321  00001e9c  1440001c	bnez	r2,L87_LF2
 1322  00001ea0  54000000	nop; delay slot nop
 1323  00001ea4  8fc10008	lw	r1,8(r30)
 1324  00001ea8  6c220010	sgti	r2,r1,#16
 1325  00001eac  1440000c	bnez	r2,L87_LF2
 1326  00001eb0  54000000	nop; delay slot nop
 1327  00001eb4  08000010	j	L86_LF2
 1328  00001eb8  54000000	nop; delay slot nop
 1329  00001ebc          	L87_LF2:
 1330  00001ebc  8fc1fff4	lw	r1,-12(r30)
 1331  00001ec0  08000188	j	L72_LF2
 1332  00001ec4  54000000	nop; delay slot nop
 1333  00001ec8          	L86_LF2:
 1334  00001ec8  54000000	nop
 1335  00001ecc          	L88_LF2:
 1336  00001ecc  8fc10000	lw	r1,(r30)
 1337  00001ed0  90220000	lbu	r2,(r1)
 1338  00001ed4  6c41002f	sgtui	r1,r2,#47
 1339  00001ed8  10200030	beqz	r1,L91_LF2
 1340  00001edc  54000000	nop; delay slot nop
 1341  00001ee0  8fc10000	lw	r1,(r30)
 1342  00001ee4  90220000	lbu	r2,(r1)
 1343  00001ee8  70410039	sleui	r1,r2,#57
 1344  00001eec  1020001c	beqz	r1,L91_LF2
 1345  00001ef0  54000000	nop; delay slot nop
 1346  00001ef4  8fc10000	lw	r1,(r30)
 1347  00001ef8  90220000	lbu	r2,(r1)
 1348  00001efc  2041ffd0	addi	r1,r2,#-48
 1349  00001f00  afc1fff0	sw	-16(r30),r1
 1350  00001f04  0800008c	j	L92_LF2
 1351  00001f08  54000000	nop; delay slot nop
 1352  00001f0c          	L91_LF2:
 1353  00001f0c  8fc10000	lw	r1,(r30)
 1354  00001f10  90220000	lbu	r2,(r1)
 1355  00001f14  6c410060	sgtui	r1,r2,#96
 1356  00001f18  10200030	beqz	r1,L93_LF2
 1357  00001f1c  54000000	nop; delay slot nop
 1358  00001f20  8fc10000	lw	r1,(r30)
 1359  00001f24  90220000	lbu	r2,(r1)
 1360  00001f28  7041007a	sleui	r1,r2,#122
 1361  00001f2c  1020001c	beqz	r1,L93_LF2
 1362  00001f30  54000000	nop; delay slot nop
 1363  00001f34  8fc10000	lw	r1,(r30)
 1364  00001f38  90220000	lbu	r2,(r1)
 1365  00001f3c  2041ffa9	addi	r1,r2,#-87
 1366  00001f40  afc1fff0	sw	-16(r30),r1
 1367  00001f44  0800004c	j	L92_LF2
 1368  00001f48  54000000	nop; delay slot nop
 1369  00001f4c          	L93_LF2:
 1370  00001f4c  8fc10000	lw	r1,(r30)
 1371  00001f50  90220000	lbu	r2,(r1)
 1372  00001f54  6c410040	sgtui	r1,r2,#64
 1373  00001f58  10200030	beqz	r1,L95_LF2
 1374  00001f5c  54000000	nop; delay slot nop
 1375  00001f60  8fc10000	lw	r1,(r30)
 1376  00001f64  90220000	lbu	r2,(r1)
 1377  00001f68  7041005a	sleui	r1,r2,#90
 1378  00001f6c  1020001c	beqz	r1,L95_LF2
 1379  00001f70  54000000	nop; delay slot nop
 1380  00001f74  8fc10000	lw	r1,(r30)
 1381  00001f78  90220000	lbu	r2,(r1)
 1382  00001f7c  2041ffc9	addi	r1,r2,#-55
 1383  00001f80  afc1fff0	sw	-16(r30),r1
 1384  00001f84  0800000c	j	L92_LF2
 1385  00001f88  54000000	nop; delay slot nop
 1386  00001f8c          	L95_LF2:
 1387  00001f8c  200103e8	addi	r1,r0,#1000
 1388  00001f90  afc1fff0	sw	-16(r30),r1
 1389  00001f94          	L96_LF2:
 1390  00001f94          	L94_LF2:
 1391  00001f94          	L92_LF2:
 1392  00001f94  8fc1fff0	lw	r1,-16(r30)
 1393  00001f98  8fc20008	lw	r2,8(r30)
 1394  00001f9c  0022082a	slt	r1,r1,r2
 1395  00001fa0  10200040	beqz	r1,L90_LF2
 1396  00001fa4  54000000	nop; delay slot nop
 1397  00001fa8  8fc1fff4	lw	r1,-12(r30)
 1398  00001fac  8fc20008	lw	r2,8(r30)
 1399  00001fb0  00200035	movi2fp	f0,r1
 1400  00001fb4  00400835	movi2fp	f1,r2
 1401  00001fb8  0401000e	mult	f0,f0,f1
 1402  00001fbc  00000834	movfp2i	r1,f0
 1403  00001fc0  afc1fff4	sw	-12(r30),r1
 1404  00001fc4  8fc1fff4	lw	r1,-12(r30)
 1405  00001fc8  8fc2fff0	lw	r2,-16(r30)
 1406  00001fcc  00220820	add	r1,r1,r2
 1407  00001fd0  afc1fff4	sw	-12(r30),r1
 1408  00001fd4  8fc20000	lw	r2,(r30)
 1409  00001fd8  20410001	addi	r1,r2,#1
 1410  00001fdc  00011020	add	r2,r0,r1
 1411  00001fe0  afc20000	sw	(r30),r2
 1412  00001fe4          	L97_LF2:
 1413  00001fe4          	L90_LF2:
 1414  00001fe4  8fc1fff0	lw	r1,-16(r30)
 1415  00001fe8  8fc20008	lw	r2,8(r30)
 1416  00001fec  0022082a	slt	r1,r1,r2
 1417  00001ff0  1420000c	bnez	r1,L98_LF2
 1418  00001ff4  54000000	nop; delay slot nop
 1419  00001ff8  0800000c	j	L89_LF2
 1420  00001ffc  54000000	nop; delay slot nop
 1421  00002000          	L98_LF2:
 1422  00002000  0bfffec8	j	L88_LF2
 1423  00002004  54000000	nop; delay slot nop
 1424  00002008          	L89_LF2:
 1425  00002008  8fc10004	lw	r1,4(r30)
 1426  0000200c  64220000	snei	r2,r1,#0
 1427  00002010  10400010	beqz	r2,L99_LF2
 1428  00002014  54000000	nop; delay slot nop
 1429  00002018  8fc10004	lw	r1,4(r30)
 1430  0000201c  8fc20000	lw	r2,(r30)
 1431  00002020  ac220000	sw	(r1),r2
 1432  00002024          	L99_LF2:
 1433  00002024  8fc1fff4	lw	r1,-12(r30)
 1434  00002028  8fc2ffec	lw	r2,-20(r30)
 1435  0000202c  00200035	movi2fp	f0,r1
 1436  00002030  00400835	movi2fp	f1,r2
 1437  00002034  0401000e	mult	f0,f0,f1
 1438  00002038  00000834	movfp2i	r1,f0
 1439  0000203c  afc1fff4	sw	-12(r30),r1
 1440  00002040  8fc1fff4	lw	r1,-12(r30)
 1441  00002044  08000004	j	L72_LF2
 1442  00002048  54000000	nop; delay slot nop
 1443  0000204c          	L72_LF2:
 1444  0000204c  8fa20000	lw	r2,0(r29)
 1445  00002050  8fdffff8	lw	r31,-8(r30)
 1446  00002054  001ee820	add	r29,r0,r30
 1447  00002058  8fdefffc	lw	r30,-4(r30)
 1448  0000205c  4be00000	jr	r31
 1449  00002060  54000000	nop
 1450  00002064          	.endproc _dstrtol
 1451  00002064          	.align 2
 1452  00002064          	.proc _bcopy
 1453  00002064          	.global _bcopy
 1454  00002064          	_bcopy:
 1455                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1456  00002064  afbefffc	sw	-4(r29),r30; push fp
 1457  00002068  001df020	add	r30,r0,r29; fp = sp
 1458  0000206c  afbffff8	sw	-8(r29),r31; push ret addr
 1459  00002070  2fbd0010	subui	r29,r29,#16; alloc local storage
 1460  00002074  afa20000	sw	0(r29),r2
 1461  00002078  afa30004	sw	4(r29),r3
 1462  0000207c  54000000	nop
 1463  00002080          	L101_LF2:
 1464  00002080  8fc10008	lw	r1,8(r30)
 1465  00002084  2022ffff	addi	r2,r1,#-1
 1466  00002088  afc20008	sw	8(r30),r2
 1467  0000208c  6c210000	sgti	r1,r1,#0
 1468  00002090  1420000c	bnez	r1,L103_LF2
 1469  00002094  54000000	nop; delay slot nop
 1470  00002098  0800002c	j	L102_LF2
 1471  0000209c  54000000	nop; delay slot nop
 1472  000020a0          	L103_LF2:
 1473  000020a0  8fc10004	lw	r1,4(r30)
 1474  000020a4  20220001	addi	r2,r1,#1
 1475  000020a8  afc20004	sw	4(r30),r2
 1476  000020ac  8fc20000	lw	r2,(r30)
 1477  000020b0  20430001	addi	r3,r2,#1
 1478  000020b4  afc30000	sw	(r30),r3
 1479  000020b8  80420000	lb	r2,(r2)
 1480  000020bc  a0220000	sb	(r1),r2
 1481  000020c0  0bffffbc	j	L101_LF2
 1482  000020c4  54000000	nop; delay slot nop
 1483  000020c8          	L102_LF2:
 1484  000020c8          	L100_LF2:
 1485  000020c8  8fa20000	lw	r2,0(r29)
 1486  000020cc  8fa30004	lw	r3,4(r29)
 1487  000020d0  8fdffff8	lw	r31,-8(r30)
 1488  000020d4  001ee820	add	r29,r0,r30
 1489  000020d8  8fdefffc	lw	r30,-4(r30)
 1490  000020dc  4be00000	jr	r31
 1491  000020e0  54000000	nop
 1492  000020e4          	.endproc _bcopy
 1493  000020e4          	.align 2
 1494  000020e4          	.proc _bzero
 1495  000020e4          	.global _bzero
 1496  000020e4          	_bzero:
 1497                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1498  000020e4  afbefffc	sw	-4(r29),r30; push fp
 1499  000020e8  001df020	add	r30,r0,r29; fp = sp
 1500  000020ec  afbffff8	sw	-8(r29),r31; push ret addr
 1501  000020f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1502  000020f4  afa20000	sw	0(r29),r2
 1503  000020f8  54000000	nop
 1504  000020fc          	L105_LF2:
 1505  000020fc  8fc10004	lw	r1,4(r30)
 1506  00002100  2022ffff	addi	r2,r1,#-1
 1507  00002104  afc20004	sw	4(r30),r2
 1508  00002108  6c210000	sgti	r1,r1,#0
 1509  0000210c  1420000c	bnez	r1,L107_LF2
 1510  00002110  54000000	nop; delay slot nop
 1511  00002114  08000020	j	L106_LF2
 1512  00002118  54000000	nop; delay slot nop
 1513  0000211c          	L107_LF2:
 1514  0000211c  8fc10000	lw	r1,(r30)
 1515  00002120  20220001	addi	r2,r1,#1
 1516  00002124  afc20000	sw	(r30),r2
 1517  00002128  20020000	addi	r2,r0,(#0x0)&0xff
 1518  0000212c  a0220000	sb	(r1),r2
 1519  00002130  0bffffc8	j	L105_LF2
 1520  00002134  54000000	nop; delay slot nop
 1521  00002138          	L106_LF2:
 1522  00002138          	L104_LF2:
 1523  00002138  8fa20000	lw	r2,0(r29)
 1524  0000213c  8fdffff8	lw	r31,-8(r30)
 1525  00002140  001ee820	add	r29,r0,r30
 1526  00002144  8fdefffc	lw	r30,-4(r30)
 1527  00002148  4be00000	jr	r31
 1528  0000214c  54000000	nop
 1529  00002150          	.endproc _bzero
 1530  00002150          	.align 2
 1531  00002150          	.proc _min
 1532  00002150          	.global _min
 1533  00002150          	_min:
 1534                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1535  00002150  afbefffc	sw	-4(r29),r30; push fp
 1536  00002154  001df020	add	r30,r0,r29; fp = sp
 1537  00002158  afbffff8	sw	-8(r29),r31; push ret addr
 1538  0000215c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1539  00002160  afa20000	sw	0(r29),r2
 1540  00002164  afa30004	sw	4(r29),r3
 1541  00002168  8fc10000	lw	r1,(r30)
 1542  0000216c  8fc20004	lw	r2,4(r30)
 1543  00002170  0022182c	sle	r3,r1,r2
 1544  00002174  14600008	bnez	r3,L109_LF2
 1545  00002178  54000000	nop; delay slot nop
 1546  0000217c  8fc10004	lw	r1,4(r30)
 1547  00002180          	L109_LF2:
 1548  00002180  08000004	j	L108_LF2
 1549  00002184  54000000	nop; delay slot nop
 1550  00002188          	L108_LF2:
 1551  00002188  8fa20000	lw	r2,0(r29)
 1552  0000218c  8fa30004	lw	r3,4(r29)
 1553  00002190  8fdffff8	lw	r31,-8(r30)
 1554  00002194  001ee820	add	r29,r0,r30
 1555  00002198  8fdefffc	lw	r30,-4(r30)
 1556  0000219c  4be00000	jr	r31
 1557  000021a0  54000000	nop
 1558  000021a4          	.endproc _min
 1559  000021a4          	.align 2
 1560  000021a4          	.proc _max
 1561  000021a4          	.global _max
 1562  000021a4          	_max:
 1563                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1564  000021a4  afbefffc	sw	-4(r29),r30; push fp
 1565  000021a8  001df020	add	r30,r0,r29; fp = sp
 1566  000021ac  afbffff8	sw	-8(r29),r31; push ret addr
 1567  000021b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1568  000021b4  afa20000	sw	0(r29),r2
 1569  000021b8  afa30004	sw	4(r29),r3
 1570  000021bc  8fc10000	lw	r1,(r30)
 1571  000021c0  8fc20004	lw	r2,4(r30)
 1572  000021c4  0022182d	sge	r3,r1,r2
 1573  000021c8  14600008	bnez	r3,L111_LF2
 1574  000021cc  54000000	nop; delay slot nop
 1575  000021d0  8fc10004	lw	r1,4(r30)
 1576  000021d4          	L111_LF2:
 1577  000021d4  08000004	j	L110_LF2
 1578  000021d8  54000000	nop; delay slot nop
 1579  000021dc          	L110_LF2:
 1580  000021dc  8fa20000	lw	r2,0(r29)
 1581  000021e0  8fa30004	lw	r3,4(r29)
 1582  000021e4  8fdffff8	lw	r31,-8(r30)
 1583  000021e8  001ee820	add	r29,r0,r30
 1584  000021ec  8fdefffc	lw	r30,-4(r30)
 1585  000021f0  4be00000	jr	r31
 1586  000021f4  54000000	nop
 1587  000021f8          	.endproc _max
 1588                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1589                      ;;;
 1590                      ;;; Most of the traps are called in files from libtraps.
 1593  000021f8          	.align 2
 1594  000021f8          	.proc _exit
 1595  000021f8          	.global _exit
 1596  000021f8          	_exit:
 1597  000021f8  44000300	trap	#0x300
 1598  000021fc  4be00000	jr	r31
 1599  00002200  54000000	nop
 1600  00002204          	.endproc _exit
 1602                      ; for the benefit of gcc.
 1603  00002204          	.proc ___main
 1604  00002204          	.global ___main
 1605  00002204          	___main:
 1606  00002204  4be00000	jr	r31
 1607  00002208  54000000	nop
 1608  0000220c          	.endproc ___main
 1609  0000220c          	.text
 1610  0000220c          	.global _etext
 1611  0000220c          	_etext:
 1612  0000220c          	.align 3
 1613  00002210          	.data
 1614  000030d6          	.global _edata
 1615  000030d6          	_edata:
