 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 126
    4                      ; Text size: 4544
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  533200  	.ascii "S2\000"
   83  00003003          	.align 2
   84  00003004          	LC1_LF0:
   85  00003004  55736167	.ascii "Usage: \000"
   85  00003008  653a2000	
   86  0000300c          	.align 2
   87  0000300c          	LC2_LF0:
   88  0000300c  0a00    	.ascii "\n\000"
   89  0000300e          	.align 2
   90  00003010          	LC3_LF0:
   91  00003010  4572726f	.ascii "Error Opening sulfur_two mailbox.\n\000"
   91  00003014  72204f70	
   91  00003018  656e696e	
   91  0000301c  67207375	
   91  00003020  6c667572	
   91  00003024  5f74776f	
   91  00003028  206d6169	
   91  0000302c  6c626f78	
   91  00003030  2e0a00  	
   92  00003033          	.align 2
   93  00003034          	LC4_LF0:
   94  00003034  53322049	.ascii "S2 Injected!\n\000"
   94  00003038  6e6a6563	
   94  0000303c  74656421	
   94  00003040  0a00    	
   95  00003042          	.align 2
   96  00003044          	LC5_LF0:
   97  00003044  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   97  00003048  73656d61	
   97  0000304c  70686f72	
   97  00003050  6520735f	
   97  00003054  70726f63	
   97  00003058  735f636f	
   97  0000305c  6d706c65	
   97  00003060  74656420	
   97  00003064  28256429	
   97  00003068  20696e20	
   97  0000306c  00      	
   98  0000306d          	.align 2
   99  00003070          	LC6_LF0:
  100  00003070  2c206578	.ascii ", exiting...\n\000"
  100  00003074  6974696e	
  100  00003078  672e2e2e	
  100  0000307c  0a00    	
  101  0000307e          	.text
  102  000010d4          	.align 2
  103  000010d4          	.proc _main
  104  000010d4          	.global _main
  105  000010d4          	_main:
  106                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  107  000010d4  afbefffc	sw	-4(r29),r30; push fp
  108  000010d8  001df020	add	r30,r0,r29; fp = sp
  109  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  110  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  111  000010e4  8fc20000	lw	r2,(r30)
  112  000010e8  8fc30004	lw	r3,4(r30)
  113  000010ec  0c0010c8	jal	___main
  114  000010f0  54000000	nop; not filled.
  115  000010f4  64410003	snei	r1,r2,#3
  116  000010f8  10200084	beqz	r1,L14_LF0
  117  000010fc  54000000	nop; not filled.
  118  00001100  23bdfff8	addi	r29,r29,#-8
  119  00001104  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  120  00001108  24a53004	addui	r5,r5,(LC1_LF0)&0xffff
  121  0000110c  afa50000	sw	(r29),r5
  122  00001110  0c0001f4	jal	_Printf
  123  00001114  54000000	nop; not filled.
  124  00001118  8c650000	lw	r5,(r3)
  125  0000111c  afa50000	sw	(r29),r5
  126  00001120  0c0001e4	jal	_Printf
  127  00001124  54000000	nop; not filled.
  128  00001128  3c020000	lhi	r2,((LC2_LF0)>>16)&0xffff
  129  0000112c  2442300c	addui	r2,r2,(LC2_LF0)&0xffff
  130  00001130  afa20000	sw	(r29),r2
  131  00001134  0c0001d0	jal	_Printf
  132  00001138  54000000	nop; not filled.
  133  0000113c  8c650004	lw	r5,4(r3)
  134  00001140  afa50000	sw	(r29),r5
  135  00001144  0c0001c0	jal	_Printf
  136  00001148  54000000	nop; not filled.
  137  0000114c  afa20000	sw	(r29),r2
  138  00001150  0c0001b4	jal	_Printf
  139  00001154  54000000	nop; not filled.
  140  00001158  8c650008	lw	r5,8(r3)
  141  0000115c  afa50000	sw	(r29),r5
  142  00001160  0c0001a4	jal	_Printf
  143  00001164  54000000	nop; not filled.
  144  00001168  afa20000	sw	(r29),r2
  145  0000116c  0c000198	jal	_Printf
  146  00001170  54000000	nop; not filled.
  147  00001174  0c000298	jal	_Exit
  148  00001178  54000000	nop; not filled.
  149  0000117c  23bd0008	addi	r29,r29,#8
  150  00001180          	L14_LF0:
  151  00001180  23bdfff0	addi	r29,r29,#-16
  152  00001184  8c650004	lw	r5,4(r3)
  153  00001188  afa50000	sw	(r29),r5
  154  0000118c  20050000	addi	r5,r0,#0
  155  00001190  afa50004	sw	4(r29),r5
  156  00001194  2005000a	addi	r5,r0,#10
  157  00001198  afa50008	sw	8(r29),r5
  158  0000119c  0c000b1c	jal	_dstrtol
  159  000011a0  54000000	nop; not filled.
  160  000011a4  00012020	add	r4,r0,r1
  161  000011a8  8c650008	lw	r5,8(r3)
  162  000011ac  afa50000	sw	(r29),r5
  163  000011b0  20050000	addi	r5,r0,#0
  164  000011b4  afa50004	sw	4(r29),r5
  165  000011b8  2005000a	addi	r5,r0,#10
  166  000011bc  afa50008	sw	8(r29),r5
  167  000011c0  0c000af8	jal	_dstrtol
  168  000011c4  54000000	nop; not filled.
  169  000011c8  00011020	add	r2,r0,r1
  170  000011cc  afa20000	sw	(r29),r2
  171  000011d0  0c0001f4	jal	_mbox_open
  172  000011d4  54000000	nop; not filled.
  173  000011d8  23bd0010	addi	r29,r29,#16
  174  000011dc  64210000	snei	r1,r1,#0
  175  000011e0  14200028	bnez	r1,L15_LF0
  176  000011e4  54000000	nop; not filled.
  177  000011e8  23bdfff8	addi	r29,r29,#-8
  178  000011ec  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  179  000011f0  24a53010	addui	r5,r5,(LC3_LF0)&0xffff
  180  000011f4  afa50000	sw	(r29),r5
  181  000011f8  0c00010c	jal	_Printf
  182  000011fc  54000000	nop; not filled.
  183  00001200  0c00020c	jal	_Exit
  184  00001204  54000000	nop; not filled.
  185  00001208  23bd0008	addi	r29,r29,#8
  186  0000120c          	L15_LF0:
  187  0000120c  23bdfff0	addi	r29,r29,#-16
  188  00001210  afa20000	sw	(r29),r2
  189  00001214  20050003	addi	r5,r0,#3
  190  00001218  afa50004	sw	4(r29),r5
  191  0000121c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  192  00001220  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  193  00001224  afa50008	sw	8(r29),r5
  194  00001228  0c0001b4	jal	_mbox_send
  195  0000122c  54000000	nop; not filled.
  196  00001230  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  197  00001234  24a53034	addui	r5,r5,(LC4_LF0)&0xffff
  198  00001238  afa50000	sw	(r29),r5
  199  0000123c  0c0000c8	jal	_Printf
  200  00001240  54000000	nop; not filled.
  201  00001244  afa20000	sw	(r29),r2
  202  00001248  0c000188	jal	_mbox_close
  203  0000124c  54000000	nop; not filled.
  204  00001250  afa40000	sw	(r29),r4
  205  00001254  0c000104	jal	_sem_signal
  206  00001258  54000000	nop; not filled.
  207  0000125c  23bd0010	addi	r29,r29,#16
  208  00001260  64210001	snei	r1,r1,#1
  209  00001264  10200050	beqz	r1,L16_LF0
  210  00001268  54000000	nop; not filled.
  211  0000126c  23bdfff8	addi	r29,r29,#-8
  212  00001270  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  213  00001274  24a53044	addui	r5,r5,(LC5_LF0)&0xffff
  214  00001278  afa50000	sw	(r29),r5
  215  0000127c  afa40004	sw	4(r29),r4
  216  00001280  0c000084	jal	_Printf
  217  00001284  54000000	nop; not filled.
  218  00001288  8c630000	lw	r3,(r3)
  219  0000128c  afa30000	sw	(r29),r3
  220  00001290  0c000074	jal	_Printf
  221  00001294  54000000	nop; not filled.
  222  00001298  3c050000	lhi	r5,((LC6_LF0)>>16)&0xffff
  223  0000129c  24a53070	addui	r5,r5,(LC6_LF0)&0xffff
  224  000012a0  afa50000	sw	(r29),r5
  225  000012a4  0c000060	jal	_Printf
  226  000012a8  54000000	nop; not filled.
  227  000012ac  0c000160	jal	_Exit
  228  000012b0  54000000	nop; not filled.
  229  000012b4  23bd0008	addi	r29,r29,#8
  230  000012b8          	L16_LF0:
  231  000012b8  0c000ef0	jal	_exit
  232  000012bc  54000000	nop
  233  000012c0          	.endproc _main
  234                      ;;;
  235                      ;;; Stub functions for DLX traps.
  236                      ;;;
  237                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  238                      ;;;
  239                      ;;; The traps such as Open and Close
  240                      ;;; (note the capital letters) are for use by user programs.  The traps
  241                      ;;; with names such as open and close (lower case) are for use by the OS.
  242                      ;;;
  245  000012c0          	.align 2
  247                      ;;; The following are the traps to be used by user-level programs
  248                      ;;;
  250  000012c0          	.align 2
  251  000012c0          	.proc _Open
  252  000012c0          	.global _Open
  253  000012c0          	_Open:
  254                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  255                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  256                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  257  000012c0  44000213	trap	#0x213
  258  000012c4  4be00000	jr	r31
  259  000012c8  54000000	nop
  260  000012cc          	.endproc _Open
  262  000012cc          	.proc _Close
  263  000012cc          	.global _Close
  264  000012cc          	_Close:
  265  000012cc  44000214	trap	#0x214
  266  000012d0  4be00000	jr	r31
  267  000012d4  54000000	nop
  268  000012d8          	.endproc _Close
  270  000012d8          	.proc _Read
  271  000012d8          	.global _Read
  272  000012d8          	_Read:
  273  000012d8  44000210	trap	#0x210
  274  000012dc  4be00000	jr	r31
  275  000012e0  54000000	nop
  276  000012e4          	.endproc _Read
  278  000012e4          	.proc _Write
  279  000012e4          	.global _Write
  280  000012e4          	_Write:
  281  000012e4  44000211	trap	#0x211
  282  000012e8  4be00000	jr	r31
  283  000012ec  54000000	nop
  284  000012f0          	.endproc _Write
  286  000012f0          	.proc _Lseek
  287  000012f0          	.global _Lseek
  288  000012f0          	_Lseek:
  289  000012f0  44000212	trap	#0x212
  290  000012f4  4be00000	jr	r31
  291  000012f8  54000000	nop
  292  000012fc          	.endproc _Lseek
  294  000012fc          	.proc _Putchar
  295  000012fc          	.global _Putchar
  296  000012fc          	_Putchar:
  297  000012fc  44000280	trap	#0x280
  298  00001300  4be00000	jr	r31
  299  00001304  54000000	nop
  300  00001308          	.endproc _Putchar
  302  00001308          	.proc _Printf
  303  00001308          	.global _Printf
  304  00001308          	_Printf:
  305  00001308  44000201	trap	#0x201
  306  0000130c  4be00000	jr	r31
  307  00001310  54000000	nop
  308  00001314          	.endproc _Printf
  310  00001314          	.proc _getpid
  311  00001314          	.global _getpid
  312  00001314          	_getpid:
  313  00001314  44000431	trap	#0x431
  314  00001318  4be00000	jr	r31
  315  0000131c  54000000	nop
  316  00001320          	.endproc _getpid
  318  00001320          	.proc _process_create
  319  00001320          	.global _process_create
  320  00001320          	_process_create:
  321  00001320  44000432	trap	#0x432
  322  00001324  4be00000	jr	r31
  323  00001328  54000000	nop
  324  0000132c          	.endproc _process_create
  326  0000132c          	.proc _shmget
  327  0000132c          	.global _shmget
  328  0000132c          	_shmget:
  329  0000132c  44000440	trap	#0x440
  330  00001330  4be00000	jr	r31
  331  00001334  54000000	nop
  332  00001338          	.endproc _shmget
  334  00001338          	.proc _shmat
  335  00001338          	.global _shmat
  336  00001338          	_shmat:
  337  00001338  44000441	trap	#0x441
  338  0000133c  4be00000	jr	r31
  339  00001340  54000000	nop
  340  00001344          	.endproc _shmat
  342  00001344          	.proc _sem_create
  343  00001344          	.global _sem_create
  344  00001344          	_sem_create:
  345  00001344  44000450	trap	#0x450
  346  00001348  4be00000	jr	r31
  347  0000134c  54000000	nop
  348  00001350          	.endproc _sem_create
  350  00001350          	.proc _sem_wait
  351  00001350          	.global _sem_wait
  352  00001350          	_sem_wait:
  353  00001350  44000451	trap	#0x451
  354  00001354  4be00000	jr	r31
  355  00001358  54000000	nop
  356  0000135c          	.endproc _sem_wait
  358  0000135c          	.proc _sem_signal
  359  0000135c          	.global _sem_signal
  360  0000135c          	_sem_signal:
  361  0000135c  44000452	trap	#0x452
  362  00001360  4be00000	jr	r31
  363  00001364  54000000	nop
  364  00001368          	.endproc _sem_signal
  366  00001368          	.proc _lock_create
  367  00001368          	.global _lock_create
  368  00001368          	_lock_create:
  369  00001368  44000453	trap	#0x453
  370  0000136c  4be00000	jr	r31
  371  00001370  54000000	nop
  372  00001374          	.endproc _lock_create
  374  00001374          	.proc _lock_acquire
  375  00001374          	.global _lock_acquire
  376  00001374          	_lock_acquire:
  377  00001374  44000454	trap	#0x454
  378  00001378  4be00000	jr	r31
  379  0000137c  54000000	nop
  380  00001380          	.endproc _lock_acquire
  382  00001380          	.proc _lock_release
  383  00001380          	.global _lock_release
  384  00001380          	_lock_release:
  385  00001380  44000455	trap	#0x455
  386  00001384  4be00000	jr	r31
  387  00001388  54000000	nop
  388  0000138c          	.endproc _lock_release
  390  0000138c          	.proc _cond_create
  391  0000138c          	.global _cond_create
  392  0000138c          	_cond_create:
  393  0000138c  44000456	trap	#0x456
  394  00001390  4be00000	jr	r31
  395  00001394  54000000	nop
  396  00001398          	.endproc _cond_create
  398  00001398          	.proc _cond_wait
  399  00001398          	.global _cond_wait
  400  00001398          	_cond_wait:
  401  00001398  44000457	trap	#0x457
  402  0000139c  4be00000	jr	r31
  403  000013a0  54000000	nop
  404  000013a4          	.endproc _cond_wait
  406  000013a4          	.proc _cond_signal
  407  000013a4          	.global _cond_signal
  408  000013a4          	_cond_signal:
  409  000013a4  44000458	trap	#0x458
  410  000013a8  4be00000	jr	r31
  411  000013ac  54000000	nop
  412  000013b0          	.endproc _cond_signal
  414  000013b0          	.proc _cond_broadcast
  415  000013b0          	.global _cond_broadcast
  416  000013b0          	_cond_broadcast:
  417  000013b0  44000459	trap	#0x459
  418  000013b4  4be00000	jr	r31
  419  000013b8  54000000	nop
  420  000013bc          	.endproc _cond_broadcast
  422  000013bc          	.proc _mbox_create
  423  000013bc          	.global _mbox_create
  424  000013bc          	_mbox_create:
  425  000013bc  44000460	trap	#0x460
  426  000013c0  4be00000	jr	r31
  427  000013c4  54000000	nop
  428  000013c8          	.endproc _mbox_create
  430  000013c8          	.proc _mbox_open
  431  000013c8          	.global _mbox_open
  432  000013c8          	_mbox_open:
  433  000013c8  44000461	trap	#0x461
  434  000013cc  4be00000	jr	r31
  435  000013d0  54000000	nop
  436  000013d4          	.endproc _mbox_open
  438  000013d4          	.proc _mbox_close
  439  000013d4          	.global _mbox_close
  440  000013d4          	_mbox_close:
  441  000013d4  44000462	trap	#0x462
  442  000013d8  4be00000	jr	r31
  443  000013dc  54000000	nop
  444  000013e0          	.endproc _mbox_close
  446  000013e0          	.proc _mbox_send
  447  000013e0          	.global _mbox_send
  448  000013e0          	_mbox_send:
  449  000013e0  44000463	trap	#0x463
  450  000013e4  4be00000	jr	r31
  451  000013e8  54000000	nop
  452  000013ec          	.endproc _mbox_send
  454  000013ec          	.proc _mbox_recv
  455  000013ec          	.global _mbox_recv
  456  000013ec          	_mbox_recv:
  457  000013ec  44000464	trap	#0x464
  458  000013f0  4be00000	jr	r31
  459  000013f4  54000000	nop
  460  000013f8          	.endproc _mbox_recv
  462  000013f8          	.proc _sleep
  463  000013f8          	.global _sleep
  464  000013f8          	_sleep:
  465  000013f8  44000465	trap	#0x465
  466  000013fc  4be00000	jr	r31
  467  00001400  54000000	nop
  468  00001404          	.endproc _sleep
  470  00001404          	.proc _yield
  471  00001404          	.global _yield
  472  00001404          	_yield:
  473  00001404  44000466	trap	#0x466
  474  00001408  4be00000	jr	r31
  475  0000140c  54000000	nop
  476  00001410          	.endproc _yield
  479  00001410          	.proc _Exit
  480  00001410          	.global _Exit
  481  00001410          	_Exit:
  482  00001410  44000500	trap	#0x500
  483  00001414  4be00000	jr	r31
  484  00001418  54000000	nop
  485  0000141c          	.endproc _Exit
  486                      ; Compiled by GCC
  488  0000141c          	.align 2
  489  0000141c          	.proc _isspace
  490  0000141c          	.global _isspace
  491  0000141c          	_isspace:
  492                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  493  0000141c  afbefffc	sw	-4(r29),r30; push fp
  494  00001420  001df020	add	r30,r0,r29; fp = sp
  495  00001424  afbffff8	sw	-8(r29),r31; push ret addr
  496  00001428  2fbd0018	subui	r29,r29,#24; alloc local storage
  497  0000142c  afa20000	sw	0(r29),r2
  498  00001430  afa30004	sw	4(r29),r3
  499  00001434  afa40008	sw	8(r29),r4
  500  00001438  83c20003	lb	r2,3(r30)
  501  0000143c  20010000	addi	r1,r0,#0
  502  00001440  304300ff	andi	r3,r2,#0x00ff
  503  00001444  60640020	seqi	r4,r3,#32
  504  00001448  1480002c	bnez	r4,L3_LF2
  505  0000144c  54000000	nop; delay slot nop
  506  00001450  304300ff	andi	r3,r2,#0x00ff
  507  00001454  60640009	seqi	r4,r3,#9
  508  00001458  1480001c	bnez	r4,L3_LF2
  509  0000145c  54000000	nop; delay slot nop
  510  00001460  304300ff	andi	r3,r2,#0x00ff
  511  00001464  6064000a	seqi	r4,r3,#10
  512  00001468  1480000c	bnez	r4,L3_LF2
  513  0000146c  54000000	nop; delay slot nop
  514  00001470  08000008	j	L2_LF2
  515  00001474  54000000	nop; delay slot nop
  516  00001478          	L3_LF2:
  517  00001478  20010001	addi	r1,r0,#1
  518  0000147c          	L2_LF2:
  519  0000147c  08000004	j	L1_LF2
  520  00001480  54000000	nop; delay slot nop
  521  00001484          	L1_LF2:
  522  00001484  8fa20000	lw	r2,0(r29)
  523  00001488  8fa30004	lw	r3,4(r29)
  524  0000148c  8fa40008	lw	r4,8(r29)
  525  00001490  8fdffff8	lw	r31,-8(r30)
  526  00001494  001ee820	add	r29,r0,r30
  527  00001498  8fdefffc	lw	r30,-4(r30)
  528  0000149c  4be00000	jr	r31
  529  000014a0  54000000	nop
  530  000014a4          	.endproc _isspace
  531  000014a4          	.align 2
  532  000014a4          	.proc _isxdigit
  533  000014a4          	.global _isxdigit
  534  000014a4          	_isxdigit:
  535                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  536  000014a4  afbefffc	sw	-4(r29),r30; push fp
  537  000014a8  001df020	add	r30,r0,r29; fp = sp
  538  000014ac  afbffff8	sw	-8(r29),r31; push ret addr
  539  000014b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  540  000014b4  afa20000	sw	0(r29),r2
  541  000014b8  afa30004	sw	4(r29),r3
  542  000014bc  afa40008	sw	8(r29),r4
  543  000014c0  83c20003	lb	r2,3(r30)
  544  000014c4  20010000	addi	r1,r0,#0
  545  000014c8  304300ff	andi	r3,r2,#0x00ff
  546  000014cc  6c64002f	sgtui	r4,r3,#47
  547  000014d0  1080001c	beqz	r4,L7_LF2
  548  000014d4  54000000	nop; delay slot nop
  549  000014d8  304300ff	andi	r3,r2,#0x00ff
  550  000014dc  70640039	sleui	r4,r3,#57
  551  000014e0  1480005c	bnez	r4,L6_LF2
  552  000014e4  54000000	nop; delay slot nop
  553  000014e8  08000004	j	L7_LF2
  554  000014ec  54000000	nop; delay slot nop
  555  000014f0          	L7_LF2:
  556  000014f0  304300ff	andi	r3,r2,#0x00ff
  557  000014f4  6c640060	sgtui	r4,r3,#96
  558  000014f8  1080001c	beqz	r4,L8_LF2
  559  000014fc  54000000	nop; delay slot nop
  560  00001500  304300ff	andi	r3,r2,#0x00ff
  561  00001504  70640066	sleui	r4,r3,#102
  562  00001508  14800034	bnez	r4,L6_LF2
  563  0000150c  54000000	nop; delay slot nop
  564  00001510  08000004	j	L8_LF2
  565  00001514  54000000	nop; delay slot nop
  566  00001518          	L8_LF2:
  567  00001518  304300ff	andi	r3,r2,#0x00ff
  568  0000151c  6c640040	sgtui	r4,r3,#64
  569  00001520  10800020	beqz	r4,L5_LF2
  570  00001524  54000000	nop; delay slot nop
  571  00001528  304300ff	andi	r3,r2,#0x00ff
  572  0000152c  70640041	sleui	r4,r3,#65
  573  00001530  1480000c	bnez	r4,L6_LF2
  574  00001534  54000000	nop; delay slot nop
  575  00001538  08000008	j	L5_LF2
  576  0000153c  54000000	nop; delay slot nop
  577  00001540          	L6_LF2:
  578  00001540  20010001	addi	r1,r0,#1
  579  00001544          	L5_LF2:
  580  00001544  08000004	j	L4_LF2
  581  00001548  54000000	nop; delay slot nop
  582  0000154c          	L4_LF2:
  583  0000154c  8fa20000	lw	r2,0(r29)
  584  00001550  8fa30004	lw	r3,4(r29)
  585  00001554  8fa40008	lw	r4,8(r29)
  586  00001558  8fdffff8	lw	r31,-8(r30)
  587  0000155c  001ee820	add	r29,r0,r30
  588  00001560  8fdefffc	lw	r30,-4(r30)
  589  00001564  4be00000	jr	r31
  590  00001568  54000000	nop
  591  0000156c          	.endproc _isxdigit
  592  0000156c          	.align 2
  593  0000156c          	.proc _dstrcpy
  594  0000156c          	.global _dstrcpy
  595  0000156c          	_dstrcpy:
  596                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  597  0000156c  afbefffc	sw	-4(r29),r30; push fp
  598  00001570  001df020	add	r30,r0,r29; fp = sp
  599  00001574  afbffff8	sw	-8(r29),r31; push ret addr
  600  00001578  2fbd0018	subui	r29,r29,#24; alloc local storage
  601  0000157c  afa20000	sw	0(r29),r2
  602  00001580  afa30004	sw	4(r29),r3
  603  00001584  8fc10000	lw	r1,(r30)
  604  00001588  afc1fff4	sw	-12(r30),r1
  605  0000158c          	L10_LF2:
  606  0000158c  8fc10000	lw	r1,(r30)
  607  00001590  20220001	addi	r2,r1,#1
  608  00001594  afc20000	sw	(r30),r2
  609  00001598  8fc20004	lw	r2,4(r30)
  610  0000159c  20430001	addi	r3,r2,#1
  611  000015a0  afc30004	sw	4(r30),r3
  612  000015a4  80420000	lb	r2,(r2)
  613  000015a8  a0220000	sb	(r1),r2
  614  000015ac  a3c2fff3	sb	-13(r30),r2
  615  000015b0          	L12_LF2:
  616  000015b0  93c1fff3	lbu	r1,-13(r30)
  617  000015b4  64220000	snei	r2,r1,#0
  618  000015b8  1440000c	bnez	r2,L13_LF2
  619  000015bc  54000000	nop; delay slot nop
  620  000015c0  0800000c	j	L11_LF2
  621  000015c4  54000000	nop; delay slot nop
  622  000015c8          	L13_LF2:
  623  000015c8  0bffffc0	j	L10_LF2
  624  000015cc  54000000	nop; delay slot nop
  625  000015d0          	L11_LF2:
  626  000015d0  8fc1fff4	lw	r1,-12(r30)
  627  000015d4  08000004	j	L9_LF2
  628  000015d8  54000000	nop; delay slot nop
  629  000015dc          	L9_LF2:
  630  000015dc  8fa20000	lw	r2,0(r29)
  631  000015e0  8fa30004	lw	r3,4(r29)
  632  000015e4  8fdffff8	lw	r31,-8(r30)
  633  000015e8  001ee820	add	r29,r0,r30
  634  000015ec  8fdefffc	lw	r30,-4(r30)
  635  000015f0  4be00000	jr	r31
  636  000015f4  54000000	nop
  637  000015f8          	.endproc _dstrcpy
  638  000015f8          	.align 2
  639  000015f8          	.proc _dstrncpy
  640  000015f8          	.global _dstrncpy
  641  000015f8          	_dstrncpy:
  642                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  643  000015f8  afbefffc	sw	-4(r29),r30; push fp
  644  000015fc  001df020	add	r30,r0,r29; fp = sp
  645  00001600  afbffff8	sw	-8(r29),r31; push ret addr
  646  00001604  2fbd0018	subui	r29,r29,#24; alloc local storage
  647  00001608  afa20000	sw	0(r29),r2
  648  0000160c  afa30004	sw	4(r29),r3
  649  00001610  8fc10000	lw	r1,(r30)
  650  00001614  afc1fff4	sw	-12(r30),r1
  651  00001618          	L15_LF2:
  652  00001618  8fc10008	lw	r1,8(r30)
  653  0000161c  2022ffff	addi	r2,r1,#-1
  654  00001620  afc20008	sw	8(r30),r2
  655  00001624  70210000	slei	r1,r1,#0
  656  00001628  1020000c	beqz	r1,L18_LF2
  657  0000162c  54000000	nop; delay slot nop
  658  00001630  08000048	j	L16_LF2
  659  00001634  54000000	nop; delay slot nop
  660  00001638          	L18_LF2:
  661  00001638  8fc10000	lw	r1,(r30)
  662  0000163c  20220001	addi	r2,r1,#1
  663  00001640  afc20000	sw	(r30),r2
  664  00001644  8fc20004	lw	r2,4(r30)
  665  00001648  20430001	addi	r3,r2,#1
  666  0000164c  afc30004	sw	4(r30),r3
  667  00001650  80420000	lb	r2,(r2)
  668  00001654  a0220000	sb	(r1),r2
  669  00001658  a3c2fff3	sb	-13(r30),r2
  670  0000165c          	L17_LF2:
  671  0000165c  93c1fff3	lbu	r1,-13(r30)
  672  00001660  64220000	snei	r2,r1,#0
  673  00001664  1440000c	bnez	r2,L19_LF2
  674  00001668  54000000	nop; delay slot nop
  675  0000166c  0800000c	j	L16_LF2
  676  00001670  54000000	nop; delay slot nop
  677  00001674          	L19_LF2:
  678  00001674  0bffffa0	j	L15_LF2
  679  00001678  54000000	nop; delay slot nop
  680  0000167c          	L16_LF2:
  681  0000167c  8fc1fff4	lw	r1,-12(r30)
  682  00001680  08000004	j	L14_LF2
  683  00001684  54000000	nop; delay slot nop
  684  00001688          	L14_LF2:
  685  00001688  8fa20000	lw	r2,0(r29)
  686  0000168c  8fa30004	lw	r3,4(r29)
  687  00001690  8fdffff8	lw	r31,-8(r30)
  688  00001694  001ee820	add	r29,r0,r30
  689  00001698  8fdefffc	lw	r30,-4(r30)
  690  0000169c  4be00000	jr	r31
  691  000016a0  54000000	nop
  692  000016a4          	.endproc _dstrncpy
  693  000016a4          	.align 2
  694  000016a4          	.proc _dstrcat
  695  000016a4          	.global _dstrcat
  696  000016a4          	_dstrcat:
  697                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  698  000016a4  afbefffc	sw	-4(r29),r30; push fp
  699  000016a8  001df020	add	r30,r0,r29; fp = sp
  700  000016ac  afbffff8	sw	-8(r29),r31; push ret addr
  701  000016b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  702  000016b4  afa20000	sw	0(r29),r2
  703  000016b8  8fc10000	lw	r1,(r30)
  704  000016bc  afc1fff4	sw	-12(r30),r1
  705  000016c0          	L21_LF2:
  706  000016c0  8fc10000	lw	r1,(r30)
  707  000016c4  90220000	lbu	r2,(r1)
  708  000016c8  64410000	snei	r1,r2,#0
  709  000016cc  1420000c	bnez	r1,L23_LF2
  710  000016d0  54000000	nop; delay slot nop
  711  000016d4  0800001c	j	L22_LF2
  712  000016d8  54000000	nop; delay slot nop
  713  000016dc          	L23_LF2:
  714  000016dc  8fc20000	lw	r2,(r30)
  715  000016e0  20410001	addi	r1,r2,#1
  716  000016e4  00011020	add	r2,r0,r1
  717  000016e8  afc20000	sw	(r30),r2
  718  000016ec  0bffffd0	j	L21_LF2
  719  000016f0  54000000	nop; delay slot nop
  720  000016f4          	L22_LF2:
  721  000016f4  23bdfff8	addi	r29,r29,#-8
  722  000016f8  001d0820	add	r1,r0,r29
  723  000016fc  8fc20000	lw	r2,(r30)
  724  00001700  ac220000	sw	(r1),r2
  725  00001704  8fc20004	lw	r2,4(r30)
  726  00001708  ac220004	sw	4(r1),r2
  727  0000170c  0ffffe5c	jal	_dstrcpy
  728  00001710  54000000	nop; delay slot nop
  729  00001714  23bd0008	addi	r29,r29,#8
  730  00001718  8fc1fff4	lw	r1,-12(r30)
  731  0000171c  08000004	j	L20_LF2
  732  00001720  54000000	nop; delay slot nop
  733  00001724          	L20_LF2:
  734  00001724  8fa20000	lw	r2,0(r29)
  735  00001728  8fdffff8	lw	r31,-8(r30)
  736  0000172c  001ee820	add	r29,r0,r30
  737  00001730  8fdefffc	lw	r30,-4(r30)
  738  00001734  4be00000	jr	r31
  739  00001738  54000000	nop
  740  0000173c          	.endproc _dstrcat
  741  0000173c          	.align 2
  742  0000173c          	.proc _dstrncmp
  743  0000173c          	.global _dstrncmp
  744  0000173c          	_dstrncmp:
  745                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  746  0000173c  afbefffc	sw	-4(r29),r30; push fp
  747  00001740  001df020	add	r30,r0,r29; fp = sp
  748  00001744  afbffff8	sw	-8(r29),r31; push ret addr
  749  00001748  2fbd0018	subui	r29,r29,#24; alloc local storage
  750  0000174c  afa20000	sw	0(r29),r2
  751  00001750  afa30004	sw	4(r29),r3
  752  00001754  54000000	nop
  753  00001758  20010000	addi	r1,r0,#0
  754  0000175c  afc1fff4	sw	-12(r30),r1
  755  00001760          	L25_LF2:
  756  00001760  8fc1fff4	lw	r1,-12(r30)
  757  00001764  8fc20008	lw	r2,8(r30)
  758  00001768  0022082a	slt	r1,r1,r2
  759  0000176c  1420000c	bnez	r1,L28_LF2
  760  00001770  54000000	nop; delay slot nop
  761  00001774  08000088	j	L26_LF2
  762  00001778  54000000	nop; delay slot nop
  763  0000177c          	L28_LF2:
  764  0000177c  8fc10004	lw	r1,4(r30)
  765  00001780  90220000	lbu	r2,(r1)
  766  00001784  64410000	snei	r1,r2,#0
  767  00001788  14200018	bnez	r1,L29_LF2
  768  0000178c  54000000	nop; delay slot nop
  769  00001790  20010000	addi	r1,r0,#0
  770  00001794  080000d8	j	L24_LF2
  771  00001798  54000000	nop; delay slot nop
  772  0000179c  08000028	j	L30_LF2
  773  000017a0  54000000	nop; delay slot nop
  774  000017a4          	L29_LF2:
  775  000017a4  8fc10000	lw	r1,(r30)
  776  000017a8  8fc20004	lw	r2,4(r30)
  777  000017ac  90210000	lbu	r1,(r1)
  778  000017b0  90420000	lbu	r2,(r2)
  779  000017b4  00220829	sne	r1,r1,r2
  780  000017b8  1020000c	beqz	r1,L30_LF2
  781  000017bc  54000000	nop; delay slot nop
  782  000017c0  0800003c	j	L26_LF2
  783  000017c4  54000000	nop; delay slot nop
  784  000017c8          	L31_LF2:
  785  000017c8          	L30_LF2:
  786  000017c8  8fc20000	lw	r2,(r30)
  787  000017cc  20410001	addi	r1,r2,#1
  788  000017d0  00011020	add	r2,r0,r1
  789  000017d4  afc20000	sw	(r30),r2
  790  000017d8  8fc20004	lw	r2,4(r30)
  791  000017dc  20410001	addi	r1,r2,#1
  792  000017e0  00011020	add	r2,r0,r1
  793  000017e4  afc20004	sw	4(r30),r2
  794  000017e8          	L27_LF2:
  795  000017e8  8fc2fff4	lw	r2,-12(r30)
  796  000017ec  20410001	addi	r1,r2,#1
  797  000017f0  00011020	add	r2,r0,r1
  798  000017f4  afc2fff4	sw	-12(r30),r2
  799  000017f8  0bffff64	j	L25_LF2
  800  000017fc  54000000	nop; delay slot nop
  801  00001800          	L26_LF2:
  802  00001800  8fc1fff4	lw	r1,-12(r30)
  803  00001804  8fc20008	lw	r2,8(r30)
  804  00001808  00220828	seq	r1,r1,r2
  805  0000180c  10200018	beqz	r1,L32_LF2
  806  00001810  54000000	nop; delay slot nop
  807  00001814  20010000	addi	r1,r0,#0
  808  00001818  08000054	j	L24_LF2
  809  0000181c  54000000	nop; delay slot nop
  810  00001820  0800004c	j	L33_LF2
  811  00001824  54000000	nop; delay slot nop
  812  00001828          	L32_LF2:
  813  00001828  8fc20000	lw	r2,(r30)
  814  0000182c  90410000	lbu	r1,(r2)
  815  00001830  8fc20004	lw	r2,4(r30)
  816  00001834  90430000	lbu	r3,(r2)
  817  00001838  00230822	sub	r1,r1,r3
  818  0000183c  74220000	sgei	r2,r1,#0
  819  00001840  10400020	beqz	r2,L34_LF2
  820  00001844  54000000	nop; delay slot nop
  821  00001848  8fc10000	lw	r1,(r30)
  822  0000184c  8fc20004	lw	r2,4(r30)
  823  00001850  90210000	lbu	r1,(r1)
  824  00001854  90420000	lbu	r2,(r2)
  825  00001858  00220829	sne	r1,r1,r2
  826  0000185c  08000008	j	L35_LF2
  827  00001860  54000000	nop; delay slot nop
  828  00001864          	L34_LF2:
  829  00001864  2001ffff	addi	r1,r0,#-1
  830  00001868          	L35_LF2:
  831  00001868  08000004	j	L24_LF2
  832  0000186c  54000000	nop; delay slot nop
  833  00001870          	L33_LF2:
  834  00001870          	L24_LF2:
  835  00001870  8fa20000	lw	r2,0(r29)
  836  00001874  8fa30004	lw	r3,4(r29)
  837  00001878  8fdffff8	lw	r31,-8(r30)
  838  0000187c  001ee820	add	r29,r0,r30
  839  00001880  8fdefffc	lw	r30,-4(r30)
  840  00001884  4be00000	jr	r31
  841  00001888  54000000	nop
  842  0000188c          	.endproc _dstrncmp
  843  0000188c          	.align 2
  844  0000188c          	.proc _dstrlen
  845  0000188c          	.global _dstrlen
  846  0000188c          	_dstrlen:
  847                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  848  0000188c  afbefffc	sw	-4(r29),r30; push fp
  849  00001890  001df020	add	r30,r0,r29; fp = sp
  850  00001894  afbffff8	sw	-8(r29),r31; push ret addr
  851  00001898  2fbd0018	subui	r29,r29,#24; alloc local storage
  852  0000189c  afa20000	sw	0(r29),r2
  853  000018a0  20010000	addi	r1,r0,#0
  854  000018a4  afc1fff4	sw	-12(r30),r1
  855  000018a8          	L37_LF2:
  856  000018a8  8fc10000	lw	r1,(r30)
  857  000018ac  20220001	addi	r2,r1,#1
  858  000018b0  afc20000	sw	(r30),r2
  859  000018b4  90210000	lbu	r1,(r1)
  860  000018b8  64220000	snei	r2,r1,#0
  861  000018bc  1440000c	bnez	r2,L39_LF2
  862  000018c0  54000000	nop; delay slot nop
  863  000018c4  0800001c	j	L38_LF2
  864  000018c8  54000000	nop; delay slot nop
  865  000018cc          	L39_LF2:
  866  000018cc  8fc2fff4	lw	r2,-12(r30)
  867  000018d0  20410001	addi	r1,r2,#1
  868  000018d4  00011020	add	r2,r0,r1
  869  000018d8  afc2fff4	sw	-12(r30),r2
  870  000018dc  0bffffc8	j	L37_LF2
  871  000018e0  54000000	nop; delay slot nop
  872  000018e4          	L38_LF2:
  873  000018e4  8fc1fff4	lw	r1,-12(r30)
  874  000018e8  08000004	j	L36_LF2
  875  000018ec  54000000	nop; delay slot nop
  876  000018f0          	L36_LF2:
  877  000018f0  8fa20000	lw	r2,0(r29)
  878  000018f4  8fdffff8	lw	r31,-8(r30)
  879  000018f8  001ee820	add	r29,r0,r30
  880  000018fc  8fdefffc	lw	r30,-4(r30)
  881  00001900  4be00000	jr	r31
  882  00001904  54000000	nop
  883  00001908          	.endproc _dstrlen
  884  00001908          	.align 2
  885  00001908          	.proc _dstrstr
  886  00001908          	.global _dstrstr
  887  00001908          	_dstrstr:
  888                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  889  00001908  afbefffc	sw	-4(r29),r30; push fp
  890  0000190c  001df020	add	r30,r0,r29; fp = sp
  891  00001910  afbffff8	sw	-8(r29),r31; push ret addr
  892  00001914  2fbd0018	subui	r29,r29,#24; alloc local storage
  893  00001918  afa20000	sw	0(r29),r2
  894  0000191c  23bdfff8	addi	r29,r29,#-8
  895  00001920  001d0820	add	r1,r0,r29
  896  00001924  8fc20004	lw	r2,4(r30)
  897  00001928  ac220000	sw	(r1),r2
  898  0000192c  0fffff5c	jal	_dstrlen
  899  00001930  54000000	nop; delay slot nop
  900  00001934  23bd0008	addi	r29,r29,#8
  901  00001938  afc1fff4	sw	-12(r30),r1
  902  0000193c          	L41_LF2:
  903  0000193c  8fc10000	lw	r1,(r30)
  904  00001940  90220000	lbu	r2,(r1)
  905  00001944  64410000	snei	r1,r2,#0
  906  00001948  1420000c	bnez	r1,L43_LF2
  907  0000194c  54000000	nop; delay slot nop
  908  00001950  08000060	j	L42_LF2
  909  00001954  54000000	nop; delay slot nop
  910  00001958          	L43_LF2:
  911  00001958  23bdfff0	addi	r29,r29,#-16
  912  0000195c  001d0820	add	r1,r0,r29
  913  00001960  8fc20000	lw	r2,(r30)
  914  00001964  ac220000	sw	(r1),r2
  915  00001968  8fc20004	lw	r2,4(r30)
  916  0000196c  ac220004	sw	4(r1),r2
  917  00001970  8fc2fff4	lw	r2,-12(r30)
  918  00001974  ac220008	sw	8(r1),r2
  919  00001978  0ffffdc0	jal	_dstrncmp
  920  0000197c  54000000	nop; delay slot nop
  921  00001980  23bd0010	addi	r29,r29,#16
  922  00001984  64220000	snei	r2,r1,#0
  923  00001988  14400010	bnez	r2,L44_LF2
  924  0000198c  54000000	nop; delay slot nop
  925  00001990  8fc10000	lw	r1,(r30)
  926  00001994  08000028	j	L40_LF2
  927  00001998  54000000	nop; delay slot nop
  928  0000199c          	L44_LF2:
  929  0000199c  8fc20000	lw	r2,(r30)
  930  000019a0  20410001	addi	r1,r2,#1
  931  000019a4  00011020	add	r2,r0,r1
  932  000019a8  afc20000	sw	(r30),r2
  933  000019ac  0bffff8c	j	L41_LF2
  934  000019b0  54000000	nop; delay slot nop
  935  000019b4          	L42_LF2:
  936  000019b4  20010000	addi	r1,r0,#0
  937  000019b8  08000004	j	L40_LF2
  938  000019bc  54000000	nop; delay slot nop
  939  000019c0          	L40_LF2:
  940  000019c0  8fa20000	lw	r2,0(r29)
  941  000019c4  8fdffff8	lw	r31,-8(r30)
  942  000019c8  001ee820	add	r29,r0,r30
  943  000019cc  8fdefffc	lw	r30,-4(r30)
  944  000019d0  4be00000	jr	r31
  945  000019d4  54000000	nop
  946  000019d8          	.endproc _dstrstr
  947  000019d8          	.align 2
  948  000019d8          	.proc _dmindex
  949  000019d8          	.global _dmindex
  950  000019d8          	_dmindex:
  951                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  952  000019d8  afbefffc	sw	-4(r29),r30; push fp
  953  000019dc  001df020	add	r30,r0,r29; fp = sp
  954  000019e0  afbffff8	sw	-8(r29),r31; push ret addr
  955  000019e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  956  000019e8  afa20000	sw	0(r29),r2
  957  000019ec  54000000	nop
  958  000019f0          	L46_LF2:
  959  000019f0  8fc10000	lw	r1,(r30)
  960  000019f4  90220000	lbu	r2,(r1)
  961  000019f8  64410000	snei	r1,r2,#0
  962  000019fc  1420000c	bnez	r1,L48_LF2
  963  00001a00  54000000	nop; delay slot nop
  964  00001a04  08000070	j	L47_LF2
  965  00001a08  54000000	nop; delay slot nop
  966  00001a0c          	L48_LF2:
  967  00001a0c  8fc10004	lw	r1,4(r30)
  968  00001a10  afc1fff4	sw	-12(r30),r1
  969  00001a14          	L49_LF2:
  970  00001a14  8fc1fff4	lw	r1,-12(r30)
  971  00001a18  90220000	lbu	r2,(r1)
  972  00001a1c  64410000	snei	r1,r2,#0
  973  00001a20  1420000c	bnez	r1,L52_LF2
  974  00001a24  54000000	nop; delay slot nop
  975  00001a28  08000044	j	L50_LF2
  976  00001a2c  54000000	nop; delay slot nop
  977  00001a30          	L52_LF2:
  978  00001a30  8fc10000	lw	r1,(r30)
  979  00001a34  8fc2fff4	lw	r2,-12(r30)
  980  00001a38  90210000	lbu	r1,(r1)
  981  00001a3c  90420000	lbu	r2,(r2)
  982  00001a40  00220828	seq	r1,r1,r2
  983  00001a44  10200010	beqz	r1,L51_LF2
  984  00001a48  54000000	nop; delay slot nop
  985  00001a4c  8fc10000	lw	r1,(r30)
  986  00001a50  08000030	j	L45_LF2
  987  00001a54  54000000	nop; delay slot nop
  988  00001a58          	L53_LF2:
  989  00001a58          	L51_LF2:
  990  00001a58  8fc2fff4	lw	r2,-12(r30)
  991  00001a5c  20410001	addi	r1,r2,#1
  992  00001a60  00011020	add	r2,r0,r1
  993  00001a64  afc2fff4	sw	-12(r30),r2
  994  00001a68  0bffffa8	j	L49_LF2
  995  00001a6c  54000000	nop; delay slot nop
  996  00001a70          	L50_LF2:
  997  00001a70  0bffff7c	j	L46_LF2
  998  00001a74  54000000	nop; delay slot nop
  999  00001a78          	L47_LF2:
 1000  00001a78  20010000	addi	r1,r0,#0
 1001  00001a7c  08000004	j	L45_LF2
 1002  00001a80  54000000	nop; delay slot nop
 1003  00001a84          	L45_LF2:
 1004  00001a84  8fa20000	lw	r2,0(r29)
 1005  00001a88  8fdffff8	lw	r31,-8(r30)
 1006  00001a8c  001ee820	add	r29,r0,r30
 1007  00001a90  8fdefffc	lw	r30,-4(r30)
 1008  00001a94  4be00000	jr	r31
 1009  00001a98  54000000	nop
 1010  00001a9c          	.endproc _dmindex
 1011  00001a9c          	.align 2
 1012  00001a9c          	.proc _dindex
 1013  00001a9c          	.global _dindex
 1014  00001a9c          	_dindex:
 1015                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1016  00001a9c  afbefffc	sw	-4(r29),r30; push fp
 1017  00001aa0  001df020	add	r30,r0,r29; fp = sp
 1018  00001aa4  afbffff8	sw	-8(r29),r31; push ret addr
 1019  00001aa8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1020  00001aac  afa20000	sw	0(r29),r2
 1021  00001ab0  54000000	nop
 1022  00001ab4          	L55_LF2:
 1023  00001ab4  8fc10000	lw	r1,(r30)
 1024  00001ab8  90220000	lbu	r2,(r1)
 1025  00001abc  64410000	snei	r1,r2,#0
 1026  00001ac0  1420000c	bnez	r1,L57_LF2
 1027  00001ac4  54000000	nop; delay slot nop
 1028  00001ac8  08000040	j	L56_LF2
 1029  00001acc  54000000	nop; delay slot nop
 1030  00001ad0          	L57_LF2:
 1031  00001ad0  8fc10000	lw	r1,(r30)
 1032  00001ad4  90220000	lbu	r2,(r1)
 1033  00001ad8  8fc10004	lw	r1,4(r30)
 1034  00001adc  00411028	seq	r2,r2,r1
 1035  00001ae0  10400010	beqz	r2,L58_LF2
 1036  00001ae4  54000000	nop; delay slot nop
 1037  00001ae8  8fc10000	lw	r1,(r30)
 1038  00001aec  08000028	j	L54_LF2
 1039  00001af0  54000000	nop; delay slot nop
 1040  00001af4          	L58_LF2:
 1041  00001af4  8fc20000	lw	r2,(r30)
 1042  00001af8  20410001	addi	r1,r2,#1
 1043  00001afc  00011020	add	r2,r0,r1
 1044  00001b00  afc20000	sw	(r30),r2
 1045  00001b04  0bffffac	j	L55_LF2
 1046  00001b08  54000000	nop; delay slot nop
 1047  00001b0c          	L56_LF2:
 1048  00001b0c  20010000	addi	r1,r0,#0
 1049  00001b10  08000004	j	L54_LF2
 1050  00001b14  54000000	nop; delay slot nop
 1051  00001b18          	L54_LF2:
 1052  00001b18  8fa20000	lw	r2,0(r29)
 1053  00001b1c  8fdffff8	lw	r31,-8(r30)
 1054  00001b20  001ee820	add	r29,r0,r30
 1055  00001b24  8fdefffc	lw	r30,-4(r30)
 1056  00001b28  4be00000	jr	r31
 1057  00001b2c  54000000	nop
 1058  00001b30          	.endproc _dindex
 1059  00001b30          	.align 2
 1060  00001b30          	.proc _ditoa
 1061  00001b30          	.global _ditoa
 1062  00001b30          	_ditoa:
 1063                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1064  00001b30  afbefffc	sw	-4(r29),r30; push fp
 1065  00001b34  001df020	add	r30,r0,r29; fp = sp
 1066  00001b38  afbffff8	sw	-8(r29),r31; push ret addr
 1067  00001b3c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1068  00001b40  afa20000	sw	0(r29),r2
 1069  00001b44  afa30004	sw	4(r29),r3
 1070  00001b48  8fc10000	lw	r1,(r30)
 1071  00001b4c  68220000	slti	r2,r1,#0
 1072  00001b50  1040002c	beqz	r2,L60_LF2
 1073  00001b54  54000000	nop; delay slot nop
 1074  00001b58  8fc10004	lw	r1,4(r30)
 1075  00001b5c  20220001	addi	r2,r1,#1
 1076  00001b60  afc20004	sw	4(r30),r2
 1077  00001b64  2002002d	addi	r2,r0,(#0x2d)&0xff
 1078  00001b68  a0220000	sb	(r1),r2
 1079  00001b6c  8fc10000	lw	r1,(r30)
 1080  00001b70  00011022	sub	r2,r0,r1
 1081  00001b74  afc20000	sw	(r30),r2
 1082  00001b78  08000118	j	L61_LF2
 1083  00001b7c  54000000	nop; delay slot nop
 1084  00001b80          	L60_LF2:
 1085  00001b80  8fc10000	lw	r1,(r30)
 1086  00001b84  64220000	snei	r2,r1,#0
 1087  00001b88  14400020	bnez	r2,L62_LF2
 1088  00001b8c  54000000	nop; delay slot nop
 1089  00001b90  8fc10004	lw	r1,4(r30)
 1090  00001b94  20220001	addi	r2,r1,#1
 1091  00001b98  afc20004	sw	4(r30),r2
 1092  00001b9c  20020030	addi	r2,r0,(#0x30)&0xff
 1093  00001ba0  a0220000	sb	(r1),r2
 1094  00001ba4  080000ec	j	L61_LF2
 1095  00001ba8  54000000	nop; delay slot nop
 1096  00001bac          	L62_LF2:
 1097  00001bac  20010001	addi	r1,r0,#1
 1098  00001bb0  afc1fff4	sw	-12(r30),r1
 1099  00001bb4          	L64_LF2:
 1100  00001bb4  8fc1fff4	lw	r1,-12(r30)
 1101  00001bb8  8fc20000	lw	r2,(r30)
 1102  00001bbc  0022082c	sle	r1,r1,r2
 1103  00001bc0  1420000c	bnez	r1,L66_LF2
 1104  00001bc4  54000000	nop; delay slot nop
 1105  00001bc8  08000024	j	L65_LF2
 1106  00001bcc  54000000	nop; delay slot nop
 1107  00001bd0          	L67_LF2:
 1108  00001bd0          	L66_LF2:
 1109  00001bd0  8fc1fff4	lw	r1,-12(r30)
 1110  00001bd4  00011820	add	r3,r0,r1
 1111  00001bd8  50620002	slli	r2,r3,#0x2
 1112  00001bdc  00411020	add	r2,r2,r1
 1113  00001be0  50410001	slli	r1,r2,#0x1
 1114  00001be4  afc1fff4	sw	-12(r30),r1
 1115  00001be8  0bffffc8	j	L64_LF2
 1116  00001bec  54000000	nop; delay slot nop
 1117  00001bf0          	L65_LF2:
 1118  00001bf0  54000000	nop
 1119  00001bf4          	L68_LF2:
 1120  00001bf4  8fc1fff4	lw	r1,-12(r30)
 1121  00001bf8  2002000a	addi	r2,r0,#10
 1122  00001bfc  00200035	movi2fp	f0,r1
 1123  00001c00  00400835	movi2fp	f1,r2
 1124  00001c04  0401000f	div	f0,f0,f1
 1125  00001c08  00000834	movfp2i	r1,f0
 1126  00001c0c  afc1fff4	sw	-12(r30),r1
 1127  00001c10  8fc10004	lw	r1,4(r30)
 1128  00001c14  20220001	addi	r2,r1,#1
 1129  00001c18  afc20004	sw	4(r30),r2
 1130  00001c1c  8fc20000	lw	r2,(r30)
 1131  00001c20  8fc3fff4	lw	r3,-12(r30)
 1132  00001c24  00400035	movi2fp	f0,r2
 1133  00001c28  00600835	movi2fp	f1,r3
 1134  00001c2c  0401000f	div	f0,f0,f1
 1135  00001c30  00001034	movfp2i	r2,f0
 1136  00001c34  00021820	add	r3,r0,r2
 1137  00001c38  20620030	addi	r2,r3,#48
 1138  00001c3c  a0220000	sb	(r1),r2
 1139  00001c40  8fc10000	lw	r1,(r30)
 1140  00001c44  8fc3fff4	lw	r3,-12(r30)
 1141  00001c48  00200035	movi2fp	f0,r1
 1142  00001c4c  00600835	movi2fp	f1,r3
 1143  00001c50  0401000f	div	f0,f0,f1
 1144  00001c54  00001034	movfp2i	r2,f0
 1145  00001c58  8fc3fff4	lw	r3,-12(r30)
 1146  00001c5c  00400035	movi2fp	f0,r2
 1147  00001c60  00600835	movi2fp	f1,r3
 1148  00001c64  0401000e	mult	f0,f0,f1
 1149  00001c68  00001034	movfp2i	r2,f0
 1150  00001c6c  00220822	sub	r1,r1,r2
 1151  00001c70  afc10000	sw	(r30),r1
 1152  00001c74          	L70_LF2:
 1153  00001c74  8fc1fff4	lw	r1,-12(r30)
 1154  00001c78  6c220001	sgti	r2,r1,#1
 1155  00001c7c  1440000c	bnez	r2,L71_LF2
 1156  00001c80  54000000	nop; delay slot nop
 1157  00001c84  0800000c	j	L61_LF2
 1158  00001c88  54000000	nop; delay slot nop
 1159  00001c8c          	L71_LF2:
 1160  00001c8c  0bffff64	j	L68_LF2
 1161  00001c90  54000000	nop; delay slot nop
 1162  00001c94          	L69_LF2:
 1163  00001c94          	L63_LF2:
 1164  00001c94          	L61_LF2:
 1165  00001c94  8fc10004	lw	r1,4(r30)
 1166  00001c98  20020000	addi	r2,r0,(#0x0)&0xff
 1167  00001c9c  a0220000	sb	(r1),r2
 1168  00001ca0          	L59_LF2:
 1169  00001ca0  8fa20000	lw	r2,0(r29)
 1170  00001ca4  8fa30004	lw	r3,4(r29)
 1171  00001ca8  8fdffff8	lw	r31,-8(r30)
 1172  00001cac  001ee820	add	r29,r0,r30
 1173  00001cb0  8fdefffc	lw	r30,-4(r30)
 1174  00001cb4  4be00000	jr	r31
 1175  00001cb8  54000000	nop
 1176  00001cbc          	.endproc _ditoa
 1177  00001cbc          	.align 2
 1178  00001cbc          	.proc _dstrtol
 1179  00001cbc          	.global _dstrtol
 1180  00001cbc          	_dstrtol:
 1181                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1182  00001cbc  afbefffc	sw	-4(r29),r30; push fp
 1183  00001cc0  001df020	add	r30,r0,r29; fp = sp
 1184  00001cc4  afbffff8	sw	-8(r29),r31; push ret addr
 1185  00001cc8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1186  00001ccc  afa20000	sw	0(r29),r2
 1187  00001cd0  20010000	addi	r1,r0,#0
 1188  00001cd4  afc1fff4	sw	-12(r30),r1
 1189  00001cd8          	L73_LF2:
 1190  00001cd8  8fc10000	lw	r1,(r30)
 1191  00001cdc  90220000	lbu	r2,(r1)
 1192  00001ce0  60410020	seqi	r1,r2,#32
 1193  00001ce4  14200034	bnez	r1,L75_LF2
 1194  00001ce8  54000000	nop; delay slot nop
 1195  00001cec  8fc10000	lw	r1,(r30)
 1196  00001cf0  90220000	lbu	r2,(r1)
 1197  00001cf4  60410009	seqi	r1,r2,#9
 1198  00001cf8  14200020	bnez	r1,L75_LF2
 1199  00001cfc  54000000	nop; delay slot nop
 1200  00001d00  8fc10000	lw	r1,(r30)
 1201  00001d04  90220000	lbu	r2,(r1)
 1202  00001d08  6041000a	seqi	r1,r2,#10
 1203  00001d0c  1420000c	bnez	r1,L75_LF2
 1204  00001d10  54000000	nop; delay slot nop
 1205  00001d14  0800001c	j	L74_LF2
 1206  00001d18  54000000	nop; delay slot nop
 1207  00001d1c          	L75_LF2:
 1208  00001d1c  8fc20000	lw	r2,(r30)
 1209  00001d20  20410001	addi	r1,r2,#1
 1210  00001d24  00011020	add	r2,r0,r1
 1211  00001d28  afc20000	sw	(r30),r2
 1212  00001d2c  0bffffa8	j	L73_LF2
 1213  00001d30  54000000	nop; delay slot nop
 1214  00001d34          	L74_LF2:
 1215  00001d34  8fc10004	lw	r1,4(r30)
 1216  00001d38  64220000	snei	r2,r1,#0
 1217  00001d3c  10400010	beqz	r2,L76_LF2
 1218  00001d40  54000000	nop; delay slot nop
 1219  00001d44  8fc10004	lw	r1,4(r30)
 1220  00001d48  8fc20000	lw	r2,(r30)
 1221  00001d4c  ac220000	sw	(r1),r2
 1222  00001d50          	L76_LF2:
 1223  00001d50  8fc10000	lw	r1,(r30)
 1224  00001d54  90220000	lbu	r2,(r1)
 1225  00001d58  64410000	snei	r1,r2,#0
 1226  00001d5c  14200010	bnez	r1,L77_LF2
 1227  00001d60  54000000	nop; delay slot nop
 1228  00001d64  8fc1fff4	lw	r1,-12(r30)
 1229  00001d68  08000294	j	L72_LF2
 1230  00001d6c  54000000	nop; delay slot nop
 1231  00001d70          	L77_LF2:
 1232  00001d70  8fc10000	lw	r1,(r30)
 1233  00001d74  90220000	lbu	r2,(r1)
 1234  00001d78  6041002d	seqi	r1,r2,#45
 1235  00001d7c  10200024	beqz	r1,L78_LF2
 1236  00001d80  54000000	nop; delay slot nop
 1237  00001d84  2001ffff	addi	r1,r0,#-1
 1238  00001d88  afc1ffec	sw	-20(r30),r1
 1239  00001d8c  8fc20000	lw	r2,(r30)
 1240  00001d90  20410001	addi	r1,r2,#1
 1241  00001d94  00011020	add	r2,r0,r1
 1242  00001d98  afc20000	sw	(r30),r2
 1243  00001d9c  0800000c	j	L79_LF2
 1244  00001da0  54000000	nop; delay slot nop
 1245  00001da4          	L78_LF2:
 1246  00001da4  20010001	addi	r1,r0,#1
 1247  00001da8  afc1ffec	sw	-20(r30),r1
 1248  00001dac          	L79_LF2:
 1249  00001dac  8fc10008	lw	r1,8(r30)
 1250  00001db0  64220000	snei	r2,r1,#0
 1251  00001db4  14400090	bnez	r2,L80_LF2
 1252  00001db8  54000000	nop; delay slot nop
 1253  00001dbc  8fc10000	lw	r1,(r30)
 1254  00001dc0  90220000	lbu	r2,(r1)
 1255  00001dc4  60410030	seqi	r1,r2,#48
 1256  00001dc8  10200074	beqz	r1,L81_LF2
 1257  00001dcc  54000000	nop; delay slot nop
 1258  00001dd0  8fc20000	lw	r2,(r30)
 1259  00001dd4  20410001	addi	r1,r2,#1
 1260  00001dd8  00011020	add	r2,r0,r1
 1261  00001ddc  afc20000	sw	(r30),r2
 1262  00001de0  8fc10000	lw	r1,(r30)
 1263  00001de4  90220000	lbu	r2,(r1)
 1264  00001de8  60410078	seqi	r1,r2,#120
 1265  00001dec  14200020	bnez	r1,L83_LF2
 1266  00001df0  54000000	nop; delay slot nop
 1267  00001df4  8fc10000	lw	r1,(r30)
 1268  00001df8  90220000	lbu	r2,(r1)
 1269  00001dfc  60410058	seqi	r1,r2,#88
 1270  00001e00  1420000c	bnez	r1,L83_LF2
 1271  00001e04  54000000	nop; delay slot nop
 1272  00001e08  08000024	j	L82_LF2
 1273  00001e0c  54000000	nop; delay slot nop
 1274  00001e10          	L83_LF2:
 1275  00001e10  20010010	addi	r1,r0,#16
 1276  00001e14  afc10008	sw	8(r30),r1
 1277  00001e18  8fc20000	lw	r2,(r30)
 1278  00001e1c  20410001	addi	r1,r2,#1
 1279  00001e20  00011020	add	r2,r0,r1
 1280  00001e24  afc20000	sw	(r30),r2
 1281  00001e28  0800000c	j	L84_LF2
 1282  00001e2c  54000000	nop; delay slot nop
 1283  00001e30          	L82_LF2:
 1284  00001e30  20010008	addi	r1,r0,#8
 1285  00001e34  afc10008	sw	8(r30),r1
 1286  00001e38          	L84_LF2:
 1287  00001e38  0800000c	j	L80_LF2
 1288  00001e3c  54000000	nop; delay slot nop
 1289  00001e40          	L81_LF2:
 1290  00001e40  2001000a	addi	r1,r0,#10
 1291  00001e44  afc10008	sw	8(r30),r1
 1292  00001e48          	L85_LF2:
 1293  00001e48          	L80_LF2:
 1294  00001e48  8fc10008	lw	r1,8(r30)
 1295  00001e4c  70220000	slei	r2,r1,#0
 1296  00001e50  1440001c	bnez	r2,L87_LF2
 1297  00001e54  54000000	nop; delay slot nop
 1298  00001e58  8fc10008	lw	r1,8(r30)
 1299  00001e5c  6c220010	sgti	r2,r1,#16
 1300  00001e60  1440000c	bnez	r2,L87_LF2
 1301  00001e64  54000000	nop; delay slot nop
 1302  00001e68  08000010	j	L86_LF2
 1303  00001e6c  54000000	nop; delay slot nop
 1304  00001e70          	L87_LF2:
 1305  00001e70  8fc1fff4	lw	r1,-12(r30)
 1306  00001e74  08000188	j	L72_LF2
 1307  00001e78  54000000	nop; delay slot nop
 1308  00001e7c          	L86_LF2:
 1309  00001e7c  54000000	nop
 1310  00001e80          	L88_LF2:
 1311  00001e80  8fc10000	lw	r1,(r30)
 1312  00001e84  90220000	lbu	r2,(r1)
 1313  00001e88  6c41002f	sgtui	r1,r2,#47
 1314  00001e8c  10200030	beqz	r1,L91_LF2
 1315  00001e90  54000000	nop; delay slot nop
 1316  00001e94  8fc10000	lw	r1,(r30)
 1317  00001e98  90220000	lbu	r2,(r1)
 1318  00001e9c  70410039	sleui	r1,r2,#57
 1319  00001ea0  1020001c	beqz	r1,L91_LF2
 1320  00001ea4  54000000	nop; delay slot nop
 1321  00001ea8  8fc10000	lw	r1,(r30)
 1322  00001eac  90220000	lbu	r2,(r1)
 1323  00001eb0  2041ffd0	addi	r1,r2,#-48
 1324  00001eb4  afc1fff0	sw	-16(r30),r1
 1325  00001eb8  0800008c	j	L92_LF2
 1326  00001ebc  54000000	nop; delay slot nop
 1327  00001ec0          	L91_LF2:
 1328  00001ec0  8fc10000	lw	r1,(r30)
 1329  00001ec4  90220000	lbu	r2,(r1)
 1330  00001ec8  6c410060	sgtui	r1,r2,#96
 1331  00001ecc  10200030	beqz	r1,L93_LF2
 1332  00001ed0  54000000	nop; delay slot nop
 1333  00001ed4  8fc10000	lw	r1,(r30)
 1334  00001ed8  90220000	lbu	r2,(r1)
 1335  00001edc  7041007a	sleui	r1,r2,#122
 1336  00001ee0  1020001c	beqz	r1,L93_LF2
 1337  00001ee4  54000000	nop; delay slot nop
 1338  00001ee8  8fc10000	lw	r1,(r30)
 1339  00001eec  90220000	lbu	r2,(r1)
 1340  00001ef0  2041ffa9	addi	r1,r2,#-87
 1341  00001ef4  afc1fff0	sw	-16(r30),r1
 1342  00001ef8  0800004c	j	L92_LF2
 1343  00001efc  54000000	nop; delay slot nop
 1344  00001f00          	L93_LF2:
 1345  00001f00  8fc10000	lw	r1,(r30)
 1346  00001f04  90220000	lbu	r2,(r1)
 1347  00001f08  6c410040	sgtui	r1,r2,#64
 1348  00001f0c  10200030	beqz	r1,L95_LF2
 1349  00001f10  54000000	nop; delay slot nop
 1350  00001f14  8fc10000	lw	r1,(r30)
 1351  00001f18  90220000	lbu	r2,(r1)
 1352  00001f1c  7041005a	sleui	r1,r2,#90
 1353  00001f20  1020001c	beqz	r1,L95_LF2
 1354  00001f24  54000000	nop; delay slot nop
 1355  00001f28  8fc10000	lw	r1,(r30)
 1356  00001f2c  90220000	lbu	r2,(r1)
 1357  00001f30  2041ffc9	addi	r1,r2,#-55
 1358  00001f34  afc1fff0	sw	-16(r30),r1
 1359  00001f38  0800000c	j	L92_LF2
 1360  00001f3c  54000000	nop; delay slot nop
 1361  00001f40          	L95_LF2:
 1362  00001f40  200103e8	addi	r1,r0,#1000
 1363  00001f44  afc1fff0	sw	-16(r30),r1
 1364  00001f48          	L96_LF2:
 1365  00001f48          	L94_LF2:
 1366  00001f48          	L92_LF2:
 1367  00001f48  8fc1fff0	lw	r1,-16(r30)
 1368  00001f4c  8fc20008	lw	r2,8(r30)
 1369  00001f50  0022082a	slt	r1,r1,r2
 1370  00001f54  10200040	beqz	r1,L90_LF2
 1371  00001f58  54000000	nop; delay slot nop
 1372  00001f5c  8fc1fff4	lw	r1,-12(r30)
 1373  00001f60  8fc20008	lw	r2,8(r30)
 1374  00001f64  00200035	movi2fp	f0,r1
 1375  00001f68  00400835	movi2fp	f1,r2
 1376  00001f6c  0401000e	mult	f0,f0,f1
 1377  00001f70  00000834	movfp2i	r1,f0
 1378  00001f74  afc1fff4	sw	-12(r30),r1
 1379  00001f78  8fc1fff4	lw	r1,-12(r30)
 1380  00001f7c  8fc2fff0	lw	r2,-16(r30)
 1381  00001f80  00220820	add	r1,r1,r2
 1382  00001f84  afc1fff4	sw	-12(r30),r1
 1383  00001f88  8fc20000	lw	r2,(r30)
 1384  00001f8c  20410001	addi	r1,r2,#1
 1385  00001f90  00011020	add	r2,r0,r1
 1386  00001f94  afc20000	sw	(r30),r2
 1387  00001f98          	L97_LF2:
 1388  00001f98          	L90_LF2:
 1389  00001f98  8fc1fff0	lw	r1,-16(r30)
 1390  00001f9c  8fc20008	lw	r2,8(r30)
 1391  00001fa0  0022082a	slt	r1,r1,r2
 1392  00001fa4  1420000c	bnez	r1,L98_LF2
 1393  00001fa8  54000000	nop; delay slot nop
 1394  00001fac  0800000c	j	L89_LF2
 1395  00001fb0  54000000	nop; delay slot nop
 1396  00001fb4          	L98_LF2:
 1397  00001fb4  0bfffec8	j	L88_LF2
 1398  00001fb8  54000000	nop; delay slot nop
 1399  00001fbc          	L89_LF2:
 1400  00001fbc  8fc10004	lw	r1,4(r30)
 1401  00001fc0  64220000	snei	r2,r1,#0
 1402  00001fc4  10400010	beqz	r2,L99_LF2
 1403  00001fc8  54000000	nop; delay slot nop
 1404  00001fcc  8fc10004	lw	r1,4(r30)
 1405  00001fd0  8fc20000	lw	r2,(r30)
 1406  00001fd4  ac220000	sw	(r1),r2
 1407  00001fd8          	L99_LF2:
 1408  00001fd8  8fc1fff4	lw	r1,-12(r30)
 1409  00001fdc  8fc2ffec	lw	r2,-20(r30)
 1410  00001fe0  00200035	movi2fp	f0,r1
 1411  00001fe4  00400835	movi2fp	f1,r2
 1412  00001fe8  0401000e	mult	f0,f0,f1
 1413  00001fec  00000834	movfp2i	r1,f0
 1414  00001ff0  afc1fff4	sw	-12(r30),r1
 1415  00001ff4  8fc1fff4	lw	r1,-12(r30)
 1416  00001ff8  08000004	j	L72_LF2
 1417  00001ffc  54000000	nop; delay slot nop
 1418  00002000          	L72_LF2:
 1419  00002000  8fa20000	lw	r2,0(r29)
 1420  00002004  8fdffff8	lw	r31,-8(r30)
 1421  00002008  001ee820	add	r29,r0,r30
 1422  0000200c  8fdefffc	lw	r30,-4(r30)
 1423  00002010  4be00000	jr	r31
 1424  00002014  54000000	nop
 1425  00002018          	.endproc _dstrtol
 1426  00002018          	.align 2
 1427  00002018          	.proc _bcopy
 1428  00002018          	.global _bcopy
 1429  00002018          	_bcopy:
 1430                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1431  00002018  afbefffc	sw	-4(r29),r30; push fp
 1432  0000201c  001df020	add	r30,r0,r29; fp = sp
 1433  00002020  afbffff8	sw	-8(r29),r31; push ret addr
 1434  00002024  2fbd0010	subui	r29,r29,#16; alloc local storage
 1435  00002028  afa20000	sw	0(r29),r2
 1436  0000202c  afa30004	sw	4(r29),r3
 1437  00002030  54000000	nop
 1438  00002034          	L101_LF2:
 1439  00002034  8fc10008	lw	r1,8(r30)
 1440  00002038  2022ffff	addi	r2,r1,#-1
 1441  0000203c  afc20008	sw	8(r30),r2
 1442  00002040  6c210000	sgti	r1,r1,#0
 1443  00002044  1420000c	bnez	r1,L103_LF2
 1444  00002048  54000000	nop; delay slot nop
 1445  0000204c  0800002c	j	L102_LF2
 1446  00002050  54000000	nop; delay slot nop
 1447  00002054          	L103_LF2:
 1448  00002054  8fc10004	lw	r1,4(r30)
 1449  00002058  20220001	addi	r2,r1,#1
 1450  0000205c  afc20004	sw	4(r30),r2
 1451  00002060  8fc20000	lw	r2,(r30)
 1452  00002064  20430001	addi	r3,r2,#1
 1453  00002068  afc30000	sw	(r30),r3
 1454  0000206c  80420000	lb	r2,(r2)
 1455  00002070  a0220000	sb	(r1),r2
 1456  00002074  0bffffbc	j	L101_LF2
 1457  00002078  54000000	nop; delay slot nop
 1458  0000207c          	L102_LF2:
 1459  0000207c          	L100_LF2:
 1460  0000207c  8fa20000	lw	r2,0(r29)
 1461  00002080  8fa30004	lw	r3,4(r29)
 1462  00002084  8fdffff8	lw	r31,-8(r30)
 1463  00002088  001ee820	add	r29,r0,r30
 1464  0000208c  8fdefffc	lw	r30,-4(r30)
 1465  00002090  4be00000	jr	r31
 1466  00002094  54000000	nop
 1467  00002098          	.endproc _bcopy
 1468  00002098          	.align 2
 1469  00002098          	.proc _bzero
 1470  00002098          	.global _bzero
 1471  00002098          	_bzero:
 1472                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1473  00002098  afbefffc	sw	-4(r29),r30; push fp
 1474  0000209c  001df020	add	r30,r0,r29; fp = sp
 1475  000020a0  afbffff8	sw	-8(r29),r31; push ret addr
 1476  000020a4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1477  000020a8  afa20000	sw	0(r29),r2
 1478  000020ac  54000000	nop
 1479  000020b0          	L105_LF2:
 1480  000020b0  8fc10004	lw	r1,4(r30)
 1481  000020b4  2022ffff	addi	r2,r1,#-1
 1482  000020b8  afc20004	sw	4(r30),r2
 1483  000020bc  6c210000	sgti	r1,r1,#0
 1484  000020c0  1420000c	bnez	r1,L107_LF2
 1485  000020c4  54000000	nop; delay slot nop
 1486  000020c8  08000020	j	L106_LF2
 1487  000020cc  54000000	nop; delay slot nop
 1488  000020d0          	L107_LF2:
 1489  000020d0  8fc10000	lw	r1,(r30)
 1490  000020d4  20220001	addi	r2,r1,#1
 1491  000020d8  afc20000	sw	(r30),r2
 1492  000020dc  20020000	addi	r2,r0,(#0x0)&0xff
 1493  000020e0  a0220000	sb	(r1),r2
 1494  000020e4  0bffffc8	j	L105_LF2
 1495  000020e8  54000000	nop; delay slot nop
 1496  000020ec          	L106_LF2:
 1497  000020ec          	L104_LF2:
 1498  000020ec  8fa20000	lw	r2,0(r29)
 1499  000020f0  8fdffff8	lw	r31,-8(r30)
 1500  000020f4  001ee820	add	r29,r0,r30
 1501  000020f8  8fdefffc	lw	r30,-4(r30)
 1502  000020fc  4be00000	jr	r31
 1503  00002100  54000000	nop
 1504  00002104          	.endproc _bzero
 1505  00002104          	.align 2
 1506  00002104          	.proc _min
 1507  00002104          	.global _min
 1508  00002104          	_min:
 1509                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1510  00002104  afbefffc	sw	-4(r29),r30; push fp
 1511  00002108  001df020	add	r30,r0,r29; fp = sp
 1512  0000210c  afbffff8	sw	-8(r29),r31; push ret addr
 1513  00002110  2fbd0010	subui	r29,r29,#16; alloc local storage
 1514  00002114  afa20000	sw	0(r29),r2
 1515  00002118  afa30004	sw	4(r29),r3
 1516  0000211c  8fc10000	lw	r1,(r30)
 1517  00002120  8fc20004	lw	r2,4(r30)
 1518  00002124  0022182c	sle	r3,r1,r2
 1519  00002128  14600008	bnez	r3,L109_LF2
 1520  0000212c  54000000	nop; delay slot nop
 1521  00002130  8fc10004	lw	r1,4(r30)
 1522  00002134          	L109_LF2:
 1523  00002134  08000004	j	L108_LF2
 1524  00002138  54000000	nop; delay slot nop
 1525  0000213c          	L108_LF2:
 1526  0000213c  8fa20000	lw	r2,0(r29)
 1527  00002140  8fa30004	lw	r3,4(r29)
 1528  00002144  8fdffff8	lw	r31,-8(r30)
 1529  00002148  001ee820	add	r29,r0,r30
 1530  0000214c  8fdefffc	lw	r30,-4(r30)
 1531  00002150  4be00000	jr	r31
 1532  00002154  54000000	nop
 1533  00002158          	.endproc _min
 1534  00002158          	.align 2
 1535  00002158          	.proc _max
 1536  00002158          	.global _max
 1537  00002158          	_max:
 1538                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1539  00002158  afbefffc	sw	-4(r29),r30; push fp
 1540  0000215c  001df020	add	r30,r0,r29; fp = sp
 1541  00002160  afbffff8	sw	-8(r29),r31; push ret addr
 1542  00002164  2fbd0010	subui	r29,r29,#16; alloc local storage
 1543  00002168  afa20000	sw	0(r29),r2
 1544  0000216c  afa30004	sw	4(r29),r3
 1545  00002170  8fc10000	lw	r1,(r30)
 1546  00002174  8fc20004	lw	r2,4(r30)
 1547  00002178  0022182d	sge	r3,r1,r2
 1548  0000217c  14600008	bnez	r3,L111_LF2
 1549  00002180  54000000	nop; delay slot nop
 1550  00002184  8fc10004	lw	r1,4(r30)
 1551  00002188          	L111_LF2:
 1552  00002188  08000004	j	L110_LF2
 1553  0000218c  54000000	nop; delay slot nop
 1554  00002190          	L110_LF2:
 1555  00002190  8fa20000	lw	r2,0(r29)
 1556  00002194  8fa30004	lw	r3,4(r29)
 1557  00002198  8fdffff8	lw	r31,-8(r30)
 1558  0000219c  001ee820	add	r29,r0,r30
 1559  000021a0  8fdefffc	lw	r30,-4(r30)
 1560  000021a4  4be00000	jr	r31
 1561  000021a8  54000000	nop
 1562  000021ac          	.endproc _max
 1563                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1564                      ;;;
 1565                      ;;; Most of the traps are called in files from libtraps.
 1568  000021ac          	.align 2
 1569  000021ac          	.proc _exit
 1570  000021ac          	.global _exit
 1571  000021ac          	_exit:
 1572  000021ac  44000300	trap	#0x300
 1573  000021b0  4be00000	jr	r31
 1574  000021b4  54000000	nop
 1575  000021b8          	.endproc _exit
 1577                      ; for the benefit of gcc.
 1578  000021b8          	.proc ___main
 1579  000021b8          	.global ___main
 1580  000021b8          	___main:
 1581  000021b8  4be00000	jr	r31
 1582  000021bc  54000000	nop
 1583  000021c0          	.endproc ___main
 1584  000021c0          	.text
 1585  000021c0          	.global _etext
 1586  000021c0          	_etext:
 1587  000021c0          	.align 3
 1588  000021c0          	.data
 1589  0000307e          	.global _edata
 1590  0000307e          	_edata:
